# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2023 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.26.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-01 00:02+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Generated-By: Babel 2.12.1\n"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:2
msgid "CPack Archive Generator"
msgstr "CPack 存档生成器"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:4
msgid ""
"CPack generator for packaging files into an archive, which can have any of"
" the following formats:"
msgstr "用于将文件打包成存档的 CPack 生成器，存档可以是以下任何一种格式："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:7
msgid "7Z - 7zip - (``.7z``)"
msgstr "7Z - 7zip - (``.7z``)"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:8
msgid "TBZ2 (``.tar.bz2``)"
msgstr "TBZ2 (``.tar.bz2``)"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:9
msgid "TGZ (``.tar.gz``)"
msgstr "TGZ (``.tar.gz``)"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:10
msgid "TXZ (``.tar.xz``)"
msgstr "TXZ (``.tar.xz``)"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:11
msgid "TZ (``.tar.Z``)"
msgstr "TZ (``.tar.Z``)"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:12
msgid "TZST (``.tar.zst``)"
msgstr "TZST (``.tar.zst``)"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:13
msgid "ZIP (``.zip``)"
msgstr "邮编（``.zip``）"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:15
msgid "7Z and TXZ formats support."
msgstr "支持 7Z 和 TXZ 格式。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:18
msgid "TZST format support."
msgstr "TZST 格式支持。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:21
msgid ""
"When this generator is called from ``CPackSourceConfig.cmake`` (or through"
" the ``package_source`` target), then the generated archive will contain "
"all files in the project directory, except those specified in "
":variable:`CPACK_SOURCE_IGNORE_FILES`.  The following is one example of "
"packaging all source files of a project:"
msgstr ""
"当从“CPackSourceConfig.cmake”（或通过“package_source”目标）调用此生成器时，生成的存档将包含项目目录中的所有文件，CPACK_SOURCE_IGNORE_FILES"
" 中指定的文件除外。下面是打包一个项目的所有源文件的一个例子："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:38
msgid ""
"When this generator is called from ``CPackConfig.cmake`` (or through the "
"``package`` target), then the generated archive will contain all files "
"that have been installed via CMake's :command:`install` command (and the "
"deprecated commands :command:`install_files`, :command:`install_programs`,"
" and :command:`install_targets`)."
msgstr ""
"当从“CPackConfig.cmake”（或通过“package”目标）调用此生成器时，生成的存档将包含已通过 CMake 的 "
":command:`install` "
"命令安装的所有文件（以及已弃用的命令 :command:`install_files`、 :command:`install_programs` "
"和 :command:`install_targets`)。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:45
msgid "Variables specific to CPack Archive generator"
msgstr "特定于 CPack 存档生成器的变量"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:50
msgid "Package file name without extension."
msgstr "不带扩展名的包文件名。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst
msgid "Default"
msgstr "默认"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:52
msgid ""
"The default is ``<CPACK_PACKAGE_FILE_NAME>[-<component>]``, with spaces "
"replaced by '-'."
msgstr "默认为``<CPACK_PACKAGE_FILE_NAME>[-<component>]``，空格替换为'-'。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:55
msgid ""
"The extension is determined from the archive format (see list above) and "
"automatically appended to the file name. Note that ``<component>`` is all "
"uppercase in the variable name."
msgstr "扩展名由存档格式决定（见上面的列表）并自动附加到文件名。请注意，``<component>`` 在变量名中全部为大写。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:59
msgid ""
"Per-component :variable:`!CPACK_ARCHIVE_<component>_FILE_NAME` variables."
msgstr "每个组件 :variable:`!CPACK_ARCHIVE_<component>_FILE_NAME` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:66
msgid "Package file extension."
msgstr "包文件扩展名。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:68
msgid "Default values are given in the list above."
msgstr "上面的列表中给出了默认值。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:72
msgid "Enable component packaging."
msgstr "启用组件打包。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:74
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:38
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:336
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:555
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:668
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:68
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:35
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:256
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:49
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:173
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:871
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:955
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:1046
msgid "``OFF``"
msgstr "``关闭``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:76
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:40
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:51
msgid ""
"If enabled (``ON``) multiple packages are generated. By default a single "
"package containing files of all components is generated."
msgstr "如果启用（``ON``）会生成多个包。默认情况下，会生成一个包含所有组件文件的包。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:80
msgid "Variables used by CPack Archive generator"
msgstr "CPack 存档生成器使用的变量"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:82
msgid ""
"These variables are used by the Archive generator, but are also available "
"to CPack generators which are essentially archives at their core. These "
"include:"
msgstr "这些变量由存档生成器使用，但也可用于 CPack 生成器，这些生成器的核心本质上是存档。这些包括："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:85
msgid ":cpack_gen:`CPack Cygwin Generator`"
msgstr ":cpack_gen:`CPack Cygwin 生成器`"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:86
msgid ":cpack_gen:`CPack FreeBSD Generator`"
msgstr ":cpack_gen:`CPack FreeBSD 生成器`"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:90
msgid "The number of threads to use when performing the compression."
msgstr "执行压缩时要使用的线程数。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:94
msgid "``1``"
msgstr "``1``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:96
msgid ""
"If set to ``0``, the number of available cores on the machine will be used"
" instead. The default is ``1`` which limits compression to a single "
"thread. Note that not all compression modes support threading in all "
"environments. Currently, only the XZ compression may support it."
msgstr ""
"如果设置为“0”，则将使用机器上的可用内核数。默认值为“1”，它将压缩限制为单个线程。请注意，并非所有压缩模式都支持所有环境中的线程。目前，只有 "
"XZ 压缩可能支持它。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:101
msgid "See also the :variable:`CPACK_THREADS` variable."
msgstr "另请参阅 :variable:`CPACK_THREADS` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/archive.rst:105
msgid ""
"Official CMake binaries available on ``cmake.org`` now ship with a "
"``liblzma`` that supports parallel compression. Older versions did not."
msgstr "``cmake.org`` 上可用的官方 CMake 二进制文件现在附带支持并行压缩的 ``liblzma``。旧版本没有。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/bundle.rst:2
msgid "CPack Bundle Generator"
msgstr "CPack 捆绑包生成器"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/bundle.rst:4
msgid "CPack Bundle generator (macOS) specific options"
msgstr "CPack Bundle 生成器 (macOS) 特定选项"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/bundle.rst:7
msgid "Variables specific to CPack Bundle generator"
msgstr "特定于 CPack Bundle 生成器的变量"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/bundle.rst:9
msgid ""
"Installers built on macOS using the Bundle generator use the "
"aforementioned DragNDrop (``CPACK_DMG_xxx``) variables, plus the following"
" Bundle-specific parameters (``CPACK_BUNDLE_xxx``)."
msgstr ""
"使用 Bundle 生成器在 macOS 上构建的安装程序使用上述 DragNDrop (``CPACK_DMG_xxx``) 变量，以及以下特定于"
" Bundle 的参数 (``CPACK_BUNDLE_xxx``)。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/bundle.rst:15
msgid ""
"The name of the generated bundle. This appears in the macOS Finder as the "
"bundle name. Required."
msgstr "生成的包的名称。这在 macOS Finder 中显示为包名称。必需的。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/bundle.rst:20
msgid ""
"Path to an macOS Property List (``.plist``) file that will be used for the"
" generated bundle. This assumes that the caller has generated or specified"
" their own ``Info.plist`` file. Required."
msgstr ""
"将用于生成的包的 macOS 属性列表 (``.plist``) 文件的路径。这假设调用者已经生成或指定了他们自己的 Info.plist "
"文件。必需的。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/bundle.rst:27
msgid ""
"Path to an macOS icon file that will be used as the icon for the generated"
" bundle. This is the icon that appears in the macOS Finder for the bundle,"
" and in the macOS dock when the bundle is opened. Required."
msgstr ""
"将用作生成包图标的 macOS 图标文件的路径。这是捆绑包的 macOS Finder 中以及打开捆绑包时出现在 macOS "
"停靠栏中的图标。必需的。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/bundle.rst:33
msgid ""
"Path to a startup script. This is a path to an executable or script that "
"will be run whenever an end-user double-clicks the generated bundle in the"
" macOS Finder. Optional."
msgstr "启动脚本的路径。这是一个可执行文件或脚本的路径，只要最终用户在 macOS Finder 中双击生成的包，它们就会运行。选修的。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/bundle.rst:41
msgid ""
"The name of your Apple supplied code signing certificate for the "
"application. The name usually takes the form ``Developer ID Application: "
"[Name]`` or ``3rd Party Mac Developer Application: [Name]``. If this "
"variable is not set the application will not be signed."
msgstr ""
"Apple 为应用程序提供的代码签名证书的名称。该名称通常采用“开发者 ID 应用程序：[名称]”或“第 3 方 Mac "
"开发者应用程序：[名称]”的形式。如果未设置此变量，则不会对应用程序进行签名。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/bundle.rst:50
msgid ""
"The name of the Property List (``.plist``) file that contains your Apple "
"entitlements for sandboxing your application. This file is required for "
"submission to the macOS App Store."
msgstr ""
"属性列表 (``.plist``) 文件的名称，其中包含用于对应用程序进行沙盒处理的 Apple 权利。此文件是提交到 macOS App "
"Store 所必需的。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/bundle.rst:58
msgid ""
"A list of additional files that you wish to be signed. You do not need to "
"list the main application folder, or the main executable. You should list "
"any frameworks and plugins that are included in your app bundle."
msgstr "您希望签名的附加文件列表。您不需要列出主应用程序文件夹或主可执行文件。您应该列出应用程序包中包含的所有框架和插件。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/bundle.rst:66
msgid ""
"Additional parameter that will passed to ``codesign``. Default value: "
"``--deep -f``"
msgstr "将传递给 ``codesign`` 的附加参数。默认值：``--deep -f``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/bundle.rst:73
msgid ""
"Path to the ``codesign(1)`` command used to sign applications with an "
"Apple cert. This variable can be used to override the automatically "
"detected command (or specify its location if the auto-detection fails to "
"find it)."
msgstr ""
"用于使用 Apple "
"证书对应用程序进行签名的“codesign(1)”命令的路径。此变量可用于覆盖自动检测到的命令（或者如果自动检测未能找到它，则指定其位置）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/cygwin.rst:2
msgid "CPack Cygwin Generator"
msgstr "CPack Cygwin 生成器"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/cygwin.rst:4
msgid "Cygwin CPack generator (Cygwin)."
msgstr "Cygwin CPack 生成器 (Cygwin)。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/cygwin.rst:7
msgid "Variables affecting the CPack Cygwin generator"
msgstr "影响 CPack Cygwin 生成器的变量"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/cygwin.rst:9
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:11
msgid ":variable:`CPACK_ARCHIVE_THREADS`"
msgstr ":variable:`CPACK_ARCHIVE_THREADS`"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/cygwin.rst:14
msgid "Variables specific to CPack Cygwin generator"
msgstr "特定于 CPack Cygwin 生成器的变量"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/cygwin.rst:16
msgid ""
"The following variable is specific to installers build on and/or for "
"Cygwin:"
msgstr "以下变量特定于基于 Cygwin 构建和/或用于 Cygwin 的安装程序："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/cygwin.rst:22
msgid "The Cygwin patch number.  FIXME: This documentation is incomplete."
msgstr "Cygwin 补丁号。 FIXME：此文档不完整。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/cygwin.rst:26
msgid "The Cygwin patch file.  FIXME: This documentation is incomplete."
msgstr "Cygwin 补丁文件。 FIXME：此文档不完整。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/cygwin.rst:30
msgid "The Cygwin build script.  FIXME: This documentation is incomplete."
msgstr "Cygwin 构建脚本。 FIXME：此文档不完整。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:2
msgid "CPack DEB Generator"
msgstr "CPack DEB 生成器"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:4
msgid "The built in (binary) CPack DEB generator (Unix only)"
msgstr "内置（二进制）CPack DEB 生成器（仅限 Unix）"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:7
msgid "Variables specific to CPack Debian (DEB) generator"
msgstr "特定于 CPack Debian (DEB) 生成器的变量"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:9
msgid ""
"The CPack DEB generator may be used to create DEB package using "
":module:`CPack`. The CPack DEB generator is a :module:`CPack` generator "
"thus it uses the :variable:`!CPACK_XXX` variables used by :module:`CPack`."
msgstr ""
"CPack DEB 生成器可用于使用 CPack 创建 DEB 包。 CPack DEB 生成器是一个 :module:`CPack` "
"生成器，因此它使用 :module:`CPack` 使用的 :variable:`!CPACK_XXX` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:13
msgid ""
"The CPack DEB generator should work on any Linux host but it will produce "
"better deb package when Debian specific tools ``dpkg-xxx`` are usable on "
"the build system."
msgstr ""
"CPack DEB 生成器应该可以在任何 Linux 主机上运行，​​但是当 Debian 特定工具“dpkg-"
"xxx”在构建系统上可用时，它会生成更好的 deb 包。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:17
msgid ""
"The CPack DEB generator has specific features which are controlled by the "
"specifics :variable:`!CPACK_DEBIAN_XXX` variables."
msgstr "CPack DEB 生成器具有由特定变量控制的特定功能 :variable:`!CPACK_DEBIAN_XXX` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:20
msgid ""
":variable:`!CPACK_DEBIAN_<COMPONENT>_XXXX` variables may be used in order "
"to have **component** specific values.  Note however that ``<COMPONENT>`` "
"refers to the **grouping name** written in upper case. It may be either a "
"component name or a component GROUP name."
msgstr ""
":variable:`!CPACK_DEBIAN_<COMPONENT>_XXXX` "
"变量可以用来获得**组件**特定的值。但是请注意，``<COMPONENT>`` 指的是大写的**分组名称**。它可以是组件名称或组件 GROUP "
"名称。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:25
msgid ""
"Here are some CPack DEB generator wiki resources that are here for "
"historic reasons and are no longer maintained but may still prove useful:"
msgstr "这里有一些 CPack DEB 生成器 wiki 资源，这些资源由于历史原因而不再维护，但可能仍然有用："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:28
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:39
msgid ""
"https://gitlab.kitware.com/cmake/community/-/wikis/doc/cpack/Configuration"
msgstr ""
"https://gitlab.kitware.com/cmake/community/-/wikis/doc/cpack/Configuration"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:29
msgid ""
"https://gitlab.kitware.com/cmake/community/-/wikis/doc/cpack/PackageGenerators#deb-"
"unix-only"
msgstr ""
"https://gitlab.kitware.com/cmake/community/-/wikis/doc/cpack/PackageGenerators#deb-"
"unix-only"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:31
msgid "List of CPack DEB generator specific variables:"
msgstr "CPack DEB 生成器特定变量列表："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:35
msgid "Enable component packaging for CPackDEB"
msgstr "为 CPackDEB 启用组件打包"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst
msgid "Mandatory"
msgstr "强制的"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:37
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:101
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:133
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:159
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:194
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:315
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:332
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:366
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:380
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:392
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:412
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:435
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:455
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:482
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:501
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:520
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:538
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:554
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:572
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:587
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:608
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:639
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:667
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:115
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:150
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:34
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:84
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:97
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:106
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:121
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:139
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:152
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:164
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:172
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:183
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:192
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:202
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:210
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:220
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:230
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:238
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:248
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:255
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:48
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:108
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:121
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:172
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:209
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:236
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:263
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:278
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:294
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:310
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:329
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:350
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:367
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:384
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:402
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:417
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:430
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:443
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:452
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:470
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:483
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:498
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:511
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:522
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:540
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:564
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:585
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:604
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:615
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:644
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:657
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:682
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:695
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:708
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:737
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:750
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:763
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:788
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:801
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:870
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:930
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:945
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:954
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:977
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:1045
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:1058
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:1073
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:1088
msgid "No"
msgstr "不"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:46
msgid ""
"Set Package control field (variable is automatically transformed to lower "
"case)."
msgstr "设置包控制字段（变量自动转换为小写）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:49
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:69
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:111
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:147
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:201
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:209
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:238
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:254
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:272
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:301
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:49
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:60
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:71
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:87
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:103
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:122
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:131
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:140
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:43
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:51
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:59
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:74
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:59
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:70
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:83
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:131
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:139
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:151
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:183
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:191
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:201
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:220
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:1066
msgid "Yes"
msgstr "是的"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:52
msgid ":variable:`CPACK_PACKAGE_NAME` for non-component based installations"
msgstr ":variable:`CPACK_PACKAGE_NAME` 用于非基于组件的安装"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:54
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_NAME` suffixed with ``-<COMPONENT>`` for "
"component-based installations."
msgstr ""
":variable:`CPACK_DEBIAN_PACKAGE_NAME` 后缀为 ``-<COMPONENT>`` 用于基于组件的安装。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:57
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_NAME` "
"variables."
msgstr "每个组件 :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_NAME` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:60
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:646
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-"
"source"
msgstr ""
"请参阅 https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-"
"source"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:67
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:81
msgid "Package file name."
msgstr "包文件名。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:70
msgid "``<CPACK_PACKAGE_FILE_NAME>[-<component>].deb``"
msgstr "``<CPACK_PACKAGE_FILE_NAME>[-<component>].deb``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:72
msgid ""
"This may be set to ``DEB-DEFAULT`` to allow the CPack DEB generator to "
"generate package file name by itself in deb format::"
msgstr "这可以设置为“DEB-DEFAULT”以允许 CPack DEB 生成器自行生成 deb 格式的包文件名："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:77
msgid ""
"Alternatively provided package file name must end with either ``.deb`` or "
"``.ipk`` suffix."
msgstr "或者，提供的包文件名必须以 ``.deb`` 或 ``.ipk`` 后缀结尾。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:80
msgid "``.ipk`` suffix used by OPKG packaging system."
msgstr "``.ipk`` OPKG 打包系统使用的后缀。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:85
msgid ""
"Preferred setting of this variable is ``DEB-DEFAULT`` but for backward "
"compatibility with the CPack DEB generator in CMake prior to version 3.6 "
"this feature is disabled by default."
msgstr ""
"此变量的首选设置是“DEB-DEFAULT”，但为了与 3.6 版之前的 CMake 中的 CPack DEB "
"生成器向后兼容，默认情况下禁用此功能。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:91
msgid ""
"By using non default filenames duplicate names may occur. Duplicate files "
"get overwritten and it is up to the packager to set the variables in a "
"manner that will prevent such errors."
msgstr "使用非默认文件名可能会出现重复名称。重复的文件会被覆盖，打包程序将以防止此类错误的方式设置变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:99
msgid "The Debian package epoch"
msgstr "Debian 软件包时代"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:102
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:134
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:195
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:367
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:381
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:588
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:98
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:122
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:140
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:153
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:165
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:173
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:184
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:203
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:211
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:221
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:231
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:239
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:249
msgid "None"
msgstr "没有任何"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:104
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:124
msgid ""
"Optional number that should be incremented when changing versioning "
"schemas or fixing mistakes in the version numbers of older packages."
msgstr "在更改版本控制模式或修复旧包版本号中的错误时应增加的可选数字。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:109
msgid "The Debian package version"
msgstr "Debian 软件包版本"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:112
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:52
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:132
msgid ":variable:`CPACK_PACKAGE_VERSION`"
msgstr ":variable:`CPACK_PACKAGE_VERSION`"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:114
msgid ""
"This variable may contain only alphanumerics (A-Za-z0-9) and the "
"characters . + - ~ (full stop, plus, hyphen, tilde) and should start with "
"a digit. If :variable:`CPACK_DEBIAN_PACKAGE_RELEASE` is not set then "
"hyphens are not allowed."
msgstr ""
"此变量可能仅包含字母数字 (A-Za-z0-9) 和字符 . + - ~（句号、加号、连字符、波浪号）并且应该以数字开头。如果 "
":variable:`CPACK_DEBIAN_PACKAGE_RELEASE` 未设置，则不允许使用连字符。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:121
msgid ""
"For backward compatibility with CMake 3.9 and lower a failed test of this "
"variable's content is not a hard error when both "
":variable:`CPACK_DEBIAN_PACKAGE_RELEASE` and "
":variable:`CPACK_DEBIAN_PACKAGE_EPOCH` variables are not set. An author "
"warning is reported instead."
msgstr ""
"为了向后兼容 CMake 3.9 及更低版本，当 CPACK_DEBIAN_PACKAGE_RELEASE 和 "
"CPACK_DEBIAN_PACKAGE_EPOCH 变量均未设置时，此变量内容的失败测试不是硬错误。而是报告作者警告。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:131
msgid "The Debian package release - Debian revision number."
msgstr "Debian 软件包发行版 - Debian 修订号。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:136
msgid ""
"This is the numbering of the DEB package itself, i.e. the version of the "
"packaging and not the version of the content (see "
":variable:`CPACK_DEBIAN_PACKAGE_VERSION`). One may change the default "
"value if the previous packaging was buggy and/or you want to put here a "
"fancy Linux distro specific numbering."
msgstr ""
"这是 DEB "
"包本身的编号，即包装的版本而不是内容的版本（参见 :variable:`CPACK_DEBIAN_PACKAGE_VERSION`）。如果以前的包装有问题和/或您想在此处放置一个奇特的"
" Linux 发行版特定编号，则可以更改默认值。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:145
msgid "The Debian package architecture"
msgstr "Debian 软件包架构"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:148
msgid ""
"Output of ``dpkg --print-architecture`` (or ``i386`` if ``dpkg`` is not "
"found)"
msgstr "``dpkg --print-architecture`` 的输出（如果未找到 ``dpkg`` 则为 ``i386``）"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:151
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_ARCHITECTURE` "
"variables."
msgstr "每个组件 :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_ARCHITECTURE` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:157
msgid "Sets the Debian dependencies of this package."
msgstr "设置此软件包的 Debian 依赖项。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:162
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:395
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:415
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:438
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:458
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:485
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:504
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:523
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:541
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:642
msgid "An empty string for non-component based installations"
msgstr "非基于组件的安装的空字符串"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:163
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_DEPENDS` for component-based "
"installations."
msgstr ":variable:`CPACK_DEBIAN_PACKAGE_DEPENDS` 用于基于组件的安装。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:167
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_DEPENDS` "
"variables."
msgstr "每个组件 :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_DEPENDS` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:172
msgid ""
"If :variable:`CPACK_DEBIAN_PACKAGE_SHLIBDEPS` or more specifically "
":variable:`CPACK_DEBIAN_<COMPONENT>_PACKAGE_SHLIBDEPS` is set for this "
"component, the discovered dependencies will be appended to "
":variable:`CPACK_DEBIAN_<COMPONENT>_PACKAGE_DEPENDS` instead of "
":variable:`CPACK_DEBIAN_PACKAGE_DEPENDS`. If "
":variable:`CPACK_DEBIAN_<COMPONENT>_PACKAGE_DEPENDS` is an empty string, "
"only the automatically discovered dependencies will be set for this "
"component."
msgstr ""
"如果 :variable:`CPACK_DEBIAN_PACKAGE_SHLIBDEPS` 或更具体地说 "
":variable:`CPACK_DEBIAN_<COMPONENT>_PACKAGE_SHLIBDEPS` 为此组件设置，则发现的依赖项将附加到 "
":variable:`CPACK_DEBIAN_<COMPONENT>_PACKAGE_DEPENDS` 而不是 "
":variable:`CPACK_DEBIAN_PACKAGE _取决于`。如果 "
":variable:`CPACK_DEBIAN_<COMPONENT>_PACKAGE_DEPENDS` "
"是空字符串，则只会为该组件设置自动发现的依赖项。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:181
msgid "Example:"
msgstr "例子："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:191
msgid ""
"Sets inter-component dependencies if listed with "
":variable:`CPACK_COMPONENT_<compName>_DEPENDS` variables."
msgstr "如果使用 CPACK_COMPONENT_<compName>_DEPENDS 变量列出，则设置组件间依赖关系。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:199
msgid "The Debian package maintainer"
msgstr "Debian 软件包维护者"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:202
msgid ":variable:`!CPACK_PACKAGE_CONTACT`"
msgstr ":variable:`！CPACK_PACKAGE_CONTACT`"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:207
msgid "The Debian package description"
msgstr "Debian 软件包描述"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:212
msgid ""
":variable:`CPACK_DEBIAN_<COMPONENT>_DESCRIPTION` (component based "
"installers only) if set, or :variable:`CPACK_DEBIAN_PACKAGE_DESCRIPTION` "
"if set, or"
msgstr ""
":variable:`CPACK_DEBIAN_<COMPONENT>_DESCRIPTION`（仅基于组件的安装程序）如果设置，或 "
":variable:`CPACK_DEBIAN_PACKAGE_DESCRIPTION` 如果设置，或"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:214
msgid ""
":variable:`CPACK_COMPONENT_<compName>_DESCRIPTION` (component based "
"installers only) if set, or :variable:`CPACK_PACKAGE_DESCRIPTION` if set, "
"or"
msgstr ""
":variable:`CPACK_COMPONENT_<compName>_DESCRIPTION`（仅基于组件的安装程序）如果设置，或 "
":variable:`CPACK_PACKAGE_DESCRIPTION` 如果设置，或"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:216
msgid ""
"content of the file specified in "
":variable:`CPACK_PACKAGE_DESCRIPTION_FILE` if set"
msgstr "CPACK_PACKAGE_DESCRIPTION_FILE 中指定的文件内容（如果已设置）"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:218
msgid ""
"If after that description is not set, "
":variable:`CPACK_PACKAGE_DESCRIPTION_SUMMARY` going to be used if set. "
"Otherwise, :variable:`CPACK_PACKAGE_DESCRIPTION_SUMMARY` will be added as "
"the first line of description as defined in `Debian Policy Manual`_."
msgstr ""
"如果在该描述之后未设置，CPACK_PACKAGE_DESCRIPTION_SUMMARY "
"将在设置后使用。否则， :variable:`CPACK_PACKAGE_DESCRIPTION_SUMMARY` 将添加为描述的第一行，如 "
"`Debian Policy Manual`_ 中所定义。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:222
msgid ""
"Per-component :variable:`!CPACK_COMPONENT_<compName>_DESCRIPTION` "
"variables."
msgstr "每个组件 :variable:`!CPACK_COMPONENT_<compName>_DESCRIPTION` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:225
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_DESCRIPTION` variables."
msgstr "每个组件 :variable:`!CPACK_DEBIAN_<COMPONENT>_DESCRIPTION` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:228
msgid "The :variable:`!CPACK_PACKAGE_DESCRIPTION_FILE` variable."
msgstr ":variable:`!CPACK_PACKAGE_DESCRIPTION_FILE` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:236
msgid "Set Section control field e.g. admin, devel, doc, ..."
msgstr "设置部分控制字段，例如管理员，开发人员，文档，..."

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:239
msgid "``devel``"
msgstr "``发展``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:241
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_SECTION` "
"variables."
msgstr "每个组件 :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_SECTION` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:244
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-archive.html#s-subsections"
msgstr ""
"请参阅 https://www.debian.org/doc/debian-policy/ch-archive.html#s-subsections"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:252
msgid "The archive format used for creating the Debian package."
msgstr "用于创建 Debian 软件包的存档格式。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:255
msgid "``gnutar``"
msgstr "``gnutar``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:257
msgid "Possible value is: ``gnutar``"
msgstr "可能的值是：``gnutar``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:261
msgid ""
"This variable previously defaulted to the ``paxr`` value, but ``dpkg`` has"
" never supported that tar format. For backwards compatibility the ``paxr``"
" value will be mapped to ``gnutar`` and a deprecation message will be "
"emitted."
msgstr ""
"此变量以前默认为 ``paxr`` 值，但 ``dpkg`` 从未支持该 tar 格式。为了向后兼容，``paxr`` 值将映射到 "
"``gnutar`` 并且将发出弃用消息。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:270
msgid "The compression used for creating the Debian package."
msgstr "用于创建 Debian 软件包的压缩。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:273
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:287
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:255
msgid "``gzip``"
msgstr "``gzip``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:275
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:244
msgid "Possible values are:"
msgstr "可能的值是："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:278
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:247
msgid "``lzma``"
msgstr "``lzma``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:278
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:247
msgid "Lempel–Ziv–Markov chain algorithm"
msgstr "Lempel–Ziv–Markov 链算法"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:281
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:250
msgid "``xz``"
msgstr "``xz``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:281
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:250
msgid "XZ Utils compression"
msgstr "XZ Utils 压缩"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:284
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:253
msgid "``bzip2``"
msgstr "``bzip2``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:284
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:253
msgid "bzip2 Burrows–Wheeler algorithm"
msgstr "bzip2 Burrows–Wheeler 算法"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:287
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:256
msgid "GNU Gzip compression"
msgstr "GNU Gzip 压缩"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:291
msgid "``zstd``"
msgstr "``zstd``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:292
msgid "Zstandard compression"
msgstr "Z标准压缩"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:298
msgid ""
"Set Priority control field e.g. required, important, standard, optional, "
"extra"
msgstr "设置优先级控制字段，例如必需的，重要的，标准的，可选的，额外的"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:302
msgid "``optional``"
msgstr "``可选``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:304
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_PRIORITY` "
"variables."
msgstr "每个组件 :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_PRIORITY` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:307
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-archive.html#s-priorities"
msgstr ""
"请参阅 https://www.debian.org/doc/debian-policy/ch-archive.html#s-priorities"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:311
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:83
msgid ""
"The URL of the web site for this package, preferably (when applicable) the"
" site from which the original source can be obtained and any additional "
"upstream documentation or information may be found."
msgstr "此包的网站 URL，最好是（如果适用）可以从中获取原始来源的网站以及可以找到任何其他上游文档或信息的网站。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:316
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:210
msgid ":variable:`CMAKE_PROJECT_HOMEPAGE_URL`"
msgstr ":variable:`CMAKE_PROJECT_HOMEPAGE_URL`"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:318
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:212
msgid "The :variable:`!CMAKE_PROJECT_HOMEPAGE_URL` variable."
msgstr ":variable:`!CMAKE_PROJECT_HOMEPAGE_URL` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:323
msgid ""
"The content of this field is a simple URL without any surrounding "
"characters such as <>."
msgstr "该字段的内容是一个简单的 URL，周围没有任何字符，例如 <>。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:329
msgid ""
"May be set to ON in order to use ``dpkg-shlibdeps`` to generate better "
"package dependency list."
msgstr "可以设置为 ON 以便使用 ``dpkg-shlibdeps`` 生成更好的包依赖列表。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:335
msgid ":variable:`CPACK_DEBIAN_PACKAGE_SHLIBDEPS` if set or"
msgstr ":variable:`CPACK_DEBIAN_PACKAGE_SHLIBDEPS` 如果设置或"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:340
msgid ""
"You may need set :variable:`CMAKE_INSTALL_RPATH` to an appropriate value "
"if you use this feature, because if you don't ``dpkg-shlibdeps`` may fail "
"to find your own shared libs. See "
"https://gitlab.kitware.com/cmake/community/-/wikis/doc/cmake/RPATH-"
"handling"
msgstr ""
"如果您使用此功能，您可能需要将 :variable:`CMAKE_INSTALL_RPATH` 设置为适当的值，因为如果您不这样做，``dpkg-"
"shlibdeps`` 可能无法找到您自己的共享库。请参阅 "
"https://gitlab.kitware.com/cmake/community/-/wikis/doc/cmake/RPATH-"
"handling"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:347
msgid ""
"You can also set :variable:`CPACK_DEBIAN_PACKAGE_SHLIBDEPS_PRIVATE_DIRS` "
"to an appropriate value if you use this feature, in order to please "
"``dpkg-shlibdeps``. However, you should only do this for private shared "
"libraries that could not get resolved otherwise."
msgstr ""
"如果您使用此功能，您还可以将 :variable:`CPACK_DEBIAN_PACKAGE_SHLIBDEPS_PRIVATE_DIRS` "
"设置为适当的值，以取悦 ``dpkg-shlibdeps``。但是，您应该只对无法以其他方式解析的私有共享库执行此操作。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:352
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_SHLIBDEPS` "
"variables."
msgstr "每个组件 :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_SHLIBDEPS` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:355
msgid "Correct handling of ``$ORIGIN`` in :variable:`CMAKE_INSTALL_RPATH`."
msgstr "正确处理 CMAKE_INSTALL_RPATH 中的 `$ORIGIN``。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:362
msgid ""
"May be set to a list of directories that will be given to ``dpkg-"
"shlibdeps`` via its ``-l`` option. These will be searched by ``dpkg-"
"shlibdeps`` in order to find private shared library dependencies."
msgstr ""
"可以设置为将通过其“-l”选项提供给“dpkg-shlibdeps”的目录列表。这些将由``dpkg-shlibdeps`` "
"搜索以找到私有共享库依赖项。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:371
msgid ""
"You should prefer to set :variable:`CMAKE_INSTALL_RPATH` to an appropriate"
" value if you use ``dpkg-shlibdeps``. The current option is really only "
"needed for private shared library dependencies."
msgstr ""
"如果您使用 ``dpkg-shlibdeps``，您应该更愿意将 :variable:`CMAKE_INSTALL_RPATH` "
"设置为适当的值。当前选项实际上只需要用于私有共享库依赖项。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:377
msgid ""
"May be set when invoking cpack in order to trace debug information during "
"the CPack DEB generator run."
msgstr "可以在调用 cpack 时设置，以便在 CPack DEB 生成器运行期间跟踪调试信息。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:386
msgid ""
"Sets the `Pre-Depends` field of the Debian package. Like "
":variable:`Depends <CPACK_DEBIAN_PACKAGE_DEPENDS>`, except that it also "
"forces ``dpkg`` to complete installation of the packages named before even"
" starting the installation of the package which declares the pre-"
"dependency."
msgstr ""
"设置 Debian 软件包的“Pre-Depends”字段。像 :variable:`Depends "
"<CPACK_DEBIAN_PACKAGE_DEPENDS>` ，除了它还强制 ``dpkg`` 在开始安装声明预依赖的包之前完成指定包的安装。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:396
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_PREDEPENDS` for component-based "
"installations."
msgstr ":variable:`CPACK_DEBIAN_PACKAGE_PREDEPENDS` 用于基于组件的安装。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:399
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_PREDEPENDS` "
"variables."
msgstr "每个组件 :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_PREDEPENDS` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:402
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:422
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:511
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:530
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:548
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-"
"relationships.html#s-binarydeps"
msgstr ""
"请参阅 https://www.debian.org/doc/debian-policy/ch-"
"relationships.html#s-binarydeps"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:407
msgid ""
"Sets the ``Enhances`` field of the Debian package. Similar to "
":variable:`Suggests <CPACK_DEBIAN_PACKAGE_SUGGESTS>` but works in the "
"opposite direction: declares that a package can enhance the functionality "
"of another package."
msgstr ""
"设置 Debian 软件包的 ``Enhances`` 字段。类似于 :variable:`Suggests "
"<CPACK_DEBIAN_PACKAGE_SUGGESTS>` 但工作方向相反：声明一个包可以增强另一个包的功能。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:416
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_ENHANCES` for component-based "
"installations."
msgstr ":variable:`CPACK_DEBIAN_PACKAGE_ENHANCES` 用于基于组件的安装。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:419
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_ENHANCES` "
"variables."
msgstr "每个组件 :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_ENHANCES` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:427
msgid ""
"Sets the ``Breaks`` field of the Debian package. When a binary package (P)"
" declares that it breaks other packages (B), ``dpkg`` will not allow the "
"package (P) which declares ``Breaks`` be **unpacked** unless the packages "
"that will be broken (B) are deconfigured first. As long as the package (P)"
" is configured, the previously deconfigured packages (B) cannot be "
"reconfigured again."
msgstr ""
"设置 Debian 软件包的 ``Breaks`` 字段。当二进制包 (P) 声明它破坏了其他包 (B) 时，``dpkg`` 将不允许声明 "
"``Breaks`` 的包 (P) 被**解包**，除非将被破坏的包(B) "
"首先解除配置。只要配置了包（P），之前取消配置的包（B）就不能再重新配置。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:439
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_BREAKS` for component-based installations."
msgstr ":variable:`CPACK_DEBIAN_PACKAGE_BREAKS` 用于基于组件的安装。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:442
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_BREAKS` "
"variables."
msgstr "每个组件 :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_BREAKS` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:445
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-"
"relationships.html#s-breaks"
msgstr ""
"请参阅 https://www.debian.org/doc/debian-policy/ch-"
"relationships.html#s-breaks"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:450
msgid ""
"Sets the `Conflicts` field of the Debian package. When one binary package "
"declares a conflict with another using a `Conflicts` field, ``dpkg`` will "
"not allow them to be unpacked on the system at the same time."
msgstr ""
"设置 Debian "
"软件包的“冲突”字段。当一个二进制包使用“Conflicts”字段声明与另一个二进制包发生冲突时，“dpkg”将不允许它们同时在系统上解包。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:459
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_CONFLICTS` for component-based "
"installations."
msgstr ":variable:`CPACK_DEBIAN_PACKAGE_CONFLICTS` 用于基于组件的安装。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:462
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_CONFLICTS` "
"variables."
msgstr "每个组件 :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_CONFLICTS` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:465
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-"
"relationships.html#s-conflicts"
msgstr ""
"请参阅 https://www.debian.org/doc/debian-policy/ch-"
"relationships.html#s-conflicts"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:469
msgid ""
"This is a stronger restriction than :variable:`Breaks "
"<CPACK_DEBIAN_PACKAGE_BREAKS>`, which prevents the broken package from "
"being configured while the breaking package is in the \"Unpacked\" state "
"but allows both packages to be unpacked at the same time."
msgstr ""
"这是比 :variable:`Breaks <CPACK_DEBIAN_PACKAGE_BREAKS>` "
"更强的限制，它可以防止在破坏包处于“未打包”状态时配置破坏包，但允许同时解压两个包。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:478
msgid ""
"Sets the `Provides` field of the Debian package. A virtual package is one "
"which appears in the `Provides` control field of another package."
msgstr "设置 Debian 软件包的 `Provides` 字段。虚拟包是出现在另一个包的“Provides”控制字段中的包。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:486
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_PROVIDES` for component-based "
"installations."
msgstr ":variable:`CPACK_DEBIAN_PACKAGE_PROVIDES` 用于基于组件的安装。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:489
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_PROVIDES` "
"variables."
msgstr "每个组件 :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_PROVIDES` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:492
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-"
"relationships.html#s-virtual"
msgstr ""
"请参阅 https://www.debian.org/doc/debian-policy/ch-"
"relationships.html#s-virtual"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:497
msgid ""
"Sets the `Replaces` field of the Debian package. Packages can declare in "
"their control file that they should overwrite files in certain other "
"packages, or completely replace other packages."
msgstr "设置 Debian 软件包的“替换”字段。包可以在它们的控制文件中声明它们应该覆盖某些其他包中的文件，或者完全替换其他包。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:505
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_REPLACES` for component-based "
"installations."
msgstr ":variable:`CPACK_DEBIAN_PACKAGE_REPLACES` 用于基于组件的安装。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:508
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_REPLACES` "
"variables."
msgstr "每个组件 :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_REPLACES` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:516
msgid ""
"Sets the ``Recommends`` field of the Debian package. Allows packages to "
"declare a strong, but not absolute, dependency on other packages."
msgstr "设置 Debian 软件包的“推荐”字段。允许包声明对其他包的强依赖，但不是绝对依赖。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:524
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_RECOMMENDS` for component-based "
"installations."
msgstr ":variable:`CPACK_DEBIAN_PACKAGE_RECOMMENDS` 用于基于组件的安装。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:527
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_RECOMMENDS` "
"variables."
msgstr "每个组件 :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_RECOMMENDS` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:535
msgid ""
"Sets the `Suggests` field of the Debian package. Allows packages to "
"declare a suggested package install grouping."
msgstr "设置 Debian 软件包的“建议”字段。允许包声明建议的包安装分组。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:542
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_SUGGESTS` for component-based "
"installations."
msgstr ":variable:`CPACK_DEBIAN_PACKAGE_SUGGESTS` 用于基于组件的安装。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:545
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_SUGGESTS` "
"variables."
msgstr "每个组件 :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_SUGGESTS` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:557
msgid ""
"Allows to generate shlibs control file automatically. Compatibility is "
"defined by :variable:`CPACK_DEBIAN_PACKAGE_GENERATE_SHLIBS_POLICY` "
"variable value."
msgstr ""
"允许自动生成 shlibs 控制文件。兼容性由 CPACK_DEBIAN_PACKAGE_GENERATE_SHLIBS_POLICY 变量值定义。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:562
msgid ""
"Libraries are only considered if they have both library name and version "
"set. This can be done by setting SOVERSION property with "
":command:`set_target_properties` command."
msgstr ""
"只有同时具有库名称和版本集的库才会被考虑。这可以通过使用 :command:`set_target_properties` 命令设置 "
"SOVERSION 属性来完成。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:570
msgid "Compatibility policy for auto-generated shlibs control file."
msgstr "自动生成的 shlibs 控制文件的兼容性策略。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:573
msgid "``=``"
msgstr "``=``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:575
msgid ""
"Defines compatibility policy for auto-generated shlibs control file. "
"Possible values: ``=``, ``>=``"
msgstr "为自动生成的 shlibs 控制文件定义兼容性策略。可能的值：``=``、``>=``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:578
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-"
"sharedlibs.html#s-sharedlibs-shlibdeps"
msgstr ""
"请参阅 https://www.debian.org/doc/debian-policy/ch-"
"sharedlibs.html#s-sharedlibs-shlibdeps"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:583
msgid ""
"This variable allow advanced user to add custom script to the "
"control.tar.gz. Typical usage is for conffiles, postinst, postrm, prerm."
msgstr ""
"此变量允许高级用户将自定义脚本添加到 control.tar.gz。典型用法是用于 conffiles、postinst、postrm、prerm。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:590
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:611
msgid "Usage:"
msgstr "用法："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:597
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_CONTROL_EXTRA` "
"variables."
msgstr ""
"每个组件 :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_CONTROL_EXTRA` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:605
msgid ""
"This variable indicates if the Debian policy on control files should be "
"strictly followed."
msgstr "此变量指示是否应严格遵守 Debian 控制文件政策。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:609
msgid "``FALSE``"
msgstr "``错误``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:617
msgid ""
"This overrides the permissions on the original files, following the rules "
"set by Debian policy https://www.debian.org/doc/debian-policy/ch-"
"files.html#s-permissions-owners"
msgstr ""
"这将覆盖原始文件的权限，遵循 Debian 政策 https://www.debian.org/doc/debian-policy/ch-"
"files.html#s-permissions-owners 设置的规则"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:623
msgid ""
"The original permissions of the files will be used in the final package "
"unless this variable is set to ``TRUE``. In particular, the scripts should"
" have the proper executable flag prior to the generation of the package."
msgstr "文件的原始权限将在最终包中使用，除非此变量设置为“TRUE”。特别是，脚本在生成包之前应该具有适当的可执行标志。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:633
msgid ""
"Sets the ``Source`` field of the binary Debian package. When the binary "
"package name is not the same as the source package name (in particular "
"when several components/binaries are generated from one source) the source"
" from which the binary has been generated should be indicated with the "
"field ``Source``."
msgstr ""
"设置二进制 Debian 包的 ``Source`` "
"字段。当二进制包名称与源包名称不同时（特别是当从一个源生成多个组件/二进制文件时）生成二进制文件的源应使用字段“Source”指示。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:643
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_SOURCE` for component-based installations."
msgstr ":variable:`CPACK_DEBIAN_PACKAGE_SOURCE` 用于基于组件的安装。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:650
msgid ""
"This value is not interpreted. It is possible to pass an optional revision"
" number of the referenced source package as well."
msgstr "该值未被解释。也可以传递引用源包的可选修订号。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:654
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:856
msgid "Packaging of debug information"
msgstr "调试信息的打包"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:658
msgid ""
"Dbgsym packages contain debug symbols for debugging packaged binaries."
msgstr "Dbgsym 包包含用于调试打包的二进制文件的调试符号。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:660
msgid "Dbgsym packaging has its own set of variables:"
msgstr "Dbgsym 打包有自己的一组变量："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:665
msgid "Enable generation of dbgsym .ddeb package(s)."
msgstr "启用 dbgsym .deb 包的生成）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:672
msgid ""
"Setting this also strips the ELF files in the generated non-dbgsym "
"package, which results in debuginfo only being available in the dbgsym "
"package."
msgstr "设置此项还会剥离生成的非 dbgsym 包中的 ELF 文件，这会导致 debuginfo 仅在 dbgsym 包中可用。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:677
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:875
msgid ""
"Binaries must contain debug symbols before packaging so use either "
"``Debug`` or ``RelWithDebInfo`` for :variable:`CMAKE_BUILD_TYPE` variable "
"value."
msgstr ""
"二进制文件在打包之前必须包含调试符号，因此使用 ``Debug`` 或 ``RelWithDebInfo`` 作为 CMAKE_BUILD_TYPE"
" 变量值。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:680
msgid ""
"Additionally, if :variable:`CPACK_STRIP_FILES` is set, the files will be "
"stripped before they get to the DEB generator, so will not contain debug "
"symbols and a dbgsym package will not get built. Do not use with "
":variable:`CPACK_STRIP_FILES`."
msgstr ""
"此外，如果设置了 :variable:`CPACK_STRIP_FILES`，文件将在到达 DEB "
"生成器之前被剥离，因此不会包含调试符号，也不会构建 dbgsym 包。不要与 :variable:`CPACK_STRIP_FILES` 一起使用。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:685
msgid "Building Debian packages on Windows"
msgstr "在 Windows 上构建 Debian 软件包"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:689
msgid ""
"To communicate UNIX file permissions from the install stage to the CPack "
"DEB generator the ``cmake_mode_t`` NTFS alternate data stream (ADT) is "
"used."
msgstr ""
"为了将 UNIX 文件权限从安装阶段传达给 CPack DEB 生成器，使用了 ``cmake_mode_t`` NTFS 备用数据流 (ADT)。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:693
msgid ""
"When a filesystem without ADT support is used only owner read/write "
"permissions can be preserved."
msgstr "当使用不支持 ADT 的文件系统时，只能保留所有者的读/写权限。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:697
msgid "Reproducible packages"
msgstr "可重现的包"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/deb.rst:701
msgid ""
"The environment variable :envvar:`!SOURCE_DATE_EPOCH` may be set to a UNIX"
" timestamp, defined as the number of seconds, excluding leap seconds, "
"since 01 Jan 1970 00:00:00 UTC.  If set, the CPack DEB generator will use "
"its value for timestamps in the package."
msgstr ""
"环境变量 :envvar:`!SOURCE_DATE_EPOCH` 可以设置为 UNIX 时间戳，定义为自 1970 年 1 月 1 日 "
"00:00:00 UTC 以来的秒数，不包括闰秒。如果设置，CPack DEB 生成器将使用它的值作为包中的时间戳。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:2
msgid "CPack DragNDrop Generator"
msgstr "CPack 拖放生成器"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:4
msgid "The DragNDrop CPack generator (macOS) creates a DMG image."
msgstr "DragNDrop CPack 生成器 (macOS) 创建 DMG 图像。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:7
msgid "Variables specific to CPack DragNDrop generator"
msgstr "特定于 CPack DragNDrop 生成器的变量"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:9
msgid ""
"The following variables are specific to the DragNDrop installers built on "
"macOS:"
msgstr "以下变量特定于在 macOS 上构建的 DragNDrop 安装程序："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:14
msgid "The volume name of the generated disk image."
msgstr "生成的磁盘映像的卷名。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:16
msgid ":variable:`CPACK_PACKAGE_FILE_NAME`"
msgstr ":variable:`CPACK_PACKAGE_FILE_NAME`"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:20
msgid "The disk image format."
msgstr "磁盘映像格式。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:22
msgid "``UDZO``"
msgstr "``UDZO``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:24
msgid ""
"Common values are ``UDRO`` (UDIF read-only), ``UDZO`` (UDIF zlib-"
"compressed) or ``UDBZ`` (UDIF bzip2-compressed). Refer to ``hdiutil(1)`` "
"for more information on other available formats."
msgstr ""
"常用值是``UDRO``（UDIF 只读）、``UDZO``（UDIF zlib 压缩）或``UDBZ``（UDIF bzip2 "
"压缩）。有关其他可用格式的更多信息，请参阅``hdiutil(1)``。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:30
msgid ""
"Path to a custom ``.DS_Store`` file. This ``.DS_Store`` file can be used "
"to specify the Finder window position/geometry and layout (such as hidden "
"toolbars, placement of the icons etc.). This file has to be generated by "
"the Finder (either manually or through AppleScript) using a normal folder "
"from which the ``.DS_Store`` file can then be extracted."
msgstr ""
"自定义“.DS_Store”文件的路径。这个“.DS_Store”文件可用于指定 Finder "
"窗口的位置/几何形状和布局（例如隐藏的工具栏、图标的位置等）。该文件必须由 Finder（手动或通过 "
"AppleScript）使用普通文件夹生成，然后可以从中提取 ``.DS_Store`` 文件。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:40
msgid ""
"Path to a custom AppleScript file.  This AppleScript is used to generate a"
" ``.DS_Store`` file which specifies the Finder window position/geometry "
"and layout (such as hidden toolbars, placement of the icons etc.). By "
"specifying a custom AppleScript there is no need to use "
"``CPACK_DMG_DS_STORE``, as the ``.DS_Store`` that is generated by the "
"AppleScript will be packaged."
msgstr ""
"自定义 AppleScript 文件的路径。此 AppleScript 用于生成一个 ``.DS_Store`` 文件，该文件指定 Finder "
"窗口的位置/几何形状和布局（例如隐藏的工具栏、图标的位置等）。通过指定自定义 AppleScript，无需使用 "
"``CPACK_DMG_DS_STORE``，因为 AppleScript 生成的 ``.DS_Store`` 将被打包。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:51
msgid ""
"Path to an image file to be used as the background.  This file will be "
"copied to ``.background``/``background.<ext>``, where ``<ext>`` is the "
"original image file extension.  The background image is installed into the"
" image before ``CPACK_DMG_DS_STORE_SETUP_SCRIPT`` is executed or "
"``CPACK_DMG_DS_STORE`` is installed.  By default no background image is "
"set."
msgstr ""
"用作背景的图像文件的路径。此文件将被复制到 ``.background``/``background.<ext>``，其中 ``<ext>`` "
"是原始图像文件扩展名。在执行 ``CPACK_DMG_DS_STORE_SETUP_SCRIPT`` 或安装 "
"``CPACK_DMG_DS_STORE`` 之前将背景图像安装到图像中。默认情况下不设置背景图像。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:61
msgid ""
"Default behavior is to include a symlink to ``/Applications`` in the DMG. "
"Set this option to ``ON`` to avoid adding the symlink."
msgstr "默认行为是在 DMG 中包含指向“/Applications”的符号链接。将此选项设置为 ``ON`` 以避免添加符号链接。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:70
msgid ""
"Control whether :variable:`CPACK_RESOURCE_FILE_LICENSE`, if set to a non-"
"default value, is used as the license agreement provided when mounting the"
" DMG.  If :variable:`!CPACK_DMG_SLA_USE_RESOURCE_FILE_LICENSE` is not set,"
" :manual:`cpack(1)` defaults to off."
msgstr ""
"控制 :variable:`CPACK_RESOURCE_FILE_LICENSE`，如果设置为非默认值，是否用作安装 DMG 时提供的许可协议。如果 "
":variable:`!CPACK_DMG_SLA_USE_RESOURCE_FILE_LICENSE` 未设置，则 "
":manual:`cpack(1)` 默认为关闭。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:75
msgid ""
"In a CMake project that uses the :module:`CPack` module to generate "
"``CPackConfig.cmake``, "
":variable:`!CPACK_DMG_SLA_USE_RESOURCE_FILE_LICENSE` must be explicitly "
"enabled by the project to activate the SLA. See policy :policy:`CMP0133`."
msgstr ""
"在使用 CPack 模块生成 CPackConfig.cmake 的 CMake 项目中，项目必须显式启用 "
"CPACK_DMG_SLA_USE_RESOURCE_FILE_LICENSE 才能激活 SLA。请参阅政策:policy:`CMP0133`。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:82
msgid ""
"This option was added in response to macOS 12.0's deprecation of the "
"``hdiutil udifrez`` command to make its use optional. CPack 3.22 and below"
" always use :variable:`CPACK_RESOURCE_FILE_LICENSE`, if set to a non-"
"default value, as the DMG license."
msgstr ""
"添加此选项是为了响应 macOS 12.0 弃用``hdiutil udifrez``命令以使其使用可选。 CPack 3.22 "
"及以下版本始终使用 :variable:`CPACK_RESOURCE_FILE_LICENSE`（如果设置为非默认值）作为 DMG 许可证。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:91
msgid ""
"Directory where license and menu files for different languages are stored."
" Setting this causes CPack to look for a ``<language>.menu.txt`` and "
"``<language>.license.txt`` or ``<language>.license.rtf`` file for every "
"language defined in :variable:`CPACK_DMG_SLA_LANGUAGES`.  If both this "
"variable and :variable:`CPACK_RESOURCE_FILE_LICENSE` are set, CPack will "
"only look for the menu files and use the same license file for all "
"languages.  If both ``<language>.license.txt`` and "
"``<language>.license.rtf`` exist, the ``.txt`` file will be used."
msgstr ""
"存储不同语言的许可证和菜单文件的目录。设置此项会导致 CPack 为以下定义的每种语言查找 ``<language>.menu.txt`` 和 "
"``<language>.license.txt`` 或 ``<language>.license.rtf`` "
"文件 :variable:`CPACK_DMG_SLA_LANGUAGES`。如果此变量和 "
":variable:`CPACK_RESOURCE_FILE_LICENSE` 均已设置，CPack "
"将仅查找菜单文件并对所有语言使用相同的许可文件。如果 ``<language>.license.txt`` 和 "
"``<language>.license.rtf`` 都存在，则将使用 ``.txt`` 文件。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:100
msgid "RTF support."
msgstr "RTF 支持。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:107
msgid ""
"Languages for which a license agreement is provided when mounting the "
"generated DMG. A menu file consists of 9 lines of text. The first line is "
"is the name of the language itself, uppercase, in English (e.g. German). "
"The other lines are translations of the following strings:"
msgstr ""
"安装生成的 DMG 时提供许可协议的语言。一个菜单文件由 9 行文本组成。第一行是语言本身的名称，大写，英文（例如德语）。其他行是以下字符串的翻译："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:112
msgid "Agree"
msgstr "同意"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:113
msgid "Disagree"
msgstr "不同意"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:114
msgid "Print"
msgstr "打印"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:115
msgid "Save..."
msgstr "节省..."

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:116
msgid ""
"You agree to the terms of the License Agreement when you click the "
"\"Agree\" button."
msgstr "单击“同意”按钮即表示您同意许可协议的条款。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:118
msgid "Software License Agreement"
msgstr "软件许可协议"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:119
msgid ""
"This text cannot be saved. The disk may be full or locked, or the file may"
" be locked."
msgstr "无法保存此文本。磁盘可能已满或被锁定，或者文件可能被锁定。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:121
msgid "Unable to print. Make sure you have selected a printer."
msgstr "无法打印。确保您已经选择了一台打印机。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:123
msgid ""
"For every language in this list, CPack will try to find files "
"``<language>.menu.txt`` and ``<language>.license.txt`` in the directory "
"specified by the :variable:`CPACK_DMG_SLA_DIR` variable."
msgstr ""
"对于此列表中的每种语言，CPack 将尝试在 CPACK_DMG_SLA_DIR 变量指定的目录中查找文件 "
"``<language>.menu.txt`` 和 ``<language>.license.txt``。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:131
msgid ""
"File name when packaging ``<component>`` as its own DMG "
"(:variable:`CPACK_COMPONENTS_GROUPING` set to ``IGNORE``)."
msgstr ""
"将 ``<component>`` 打包为自己的 DMG 时的文件名（ :variable:`CPACK_COMPONENTS_GROUPING` 设置为 "
"``IGNORE``）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:134
msgid "``CPACK_PACKAGE_FILE_NAME-<component>``"
msgstr "``CPACK_PACKAGE_FILE_NAME-<组件>``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:140
msgid "``HFS+``"
msgstr "``高频+``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:142
msgid ""
"The filesystem format. Common values are ``APFS`` and ``HFS+``. See ``man "
"hdiutil`` for a full list of supported formats."
msgstr "文件系统格式。常用值是 ``APFS`` 和 ``HFS+``。有关受支持格式的完整列表，请参阅“man hdiutil”。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:147
msgid ""
"Path to the ``hdiutil(1)`` command used to operate on disk image files on "
"macOS. This variable can be used to override the automatically detected "
"command (or specify its location if the auto-detection fails to find it)."
msgstr ""
"用于在 macOS "
"上操作磁盘映像文件的“hdiutil(1)”命令的路径。此变量可用于覆盖自动检测到的命令（或者如果自动检测未能找到它，则指定其位置）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:153
msgid ""
"Path to the ``SetFile(1)`` command used to set extended attributes on "
"files and directories on macOS. This variable can be used to override the "
"automatically detected command (or specify its location if the auto-"
"detection fails to find it)."
msgstr ""
"用于在 macOS "
"上设置文件和目录扩展属性的“SetFile(1)”命令的路径。此变量可用于覆盖自动检测到的命令（或者如果自动检测未能找到它，则指定其位置）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/dmg.rst:160
msgid ""
"Path to the ``Rez(1)`` command used to compile resources on macOS. This "
"variable can be used to override the automatically detected command (or "
"specify its location if the auto-detection fails to find it)."
msgstr ""
"用于在 macOS 上编译资源的“Rez(1)”命令的路径。此变量可用于覆盖自动检测到的命令（或者如果自动检测未能找到它，则指定其位置）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:2
msgid "CPack External Generator"
msgstr "CPack 外部生成器"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:6
msgid ""
"CPack provides many generators to create packages for a variety of "
"platforms and packaging systems. The intention is for CMake/CPack to be a "
"complete end-to-end solution for building and packaging a software "
"project. However, it may not always be possible to use CPack for the "
"entire packaging process, due to either technical limitations or policies "
"that require the use of certain tools. For this reason, CPack provides the"
" \"External\" generator, which allows external packaging software to take "
"advantage of some of the functionality provided by CPack, such as "
"component installation and the dependency graph."
msgstr ""
"CPack 提供了许多生成器来为各种平台和打包系统创建包。 CMake/CPack "
"的目的是成为构建和打包软件项目的完整端到端解决方案。但是，由于技术限制或需要使用某些工具的政策，可能并不总是可以在整个打包过程中使用 "
"CPack。为此，CPack 提供了“外部”生成器，它允许外部打包软件利用 CPack 提供的一些功能，例如组件安装和依赖图。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:16
msgid "Integration with External Packaging Tools"
msgstr "与外部打包工具集成"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:18
msgid ""
"The CPack External generator generates a ``.json`` file containing the "
"CPack internal metadata, which gives external software information on how "
"to package the software. External packaging software may itself invoke "
"CPack, consume the generated metadata, install and package files as "
"required."
msgstr ""
"CPack External 生成器生成一个包含 CPack 内部元数据的 ``.json`` "
"文件，该文件提供有关如何打包软件的外部软件信息。外部打包软件本身可以调用 CPack，使用生成的元数据，根据需要安装和打包文件。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:24
msgid ""
"Alternatively CPack can invoke an external packaging software through an "
"optional custom CMake script in :variable:`CPACK_EXTERNAL_PACKAGE_SCRIPT` "
"instead."
msgstr ""
"或者，CPack 可以通过 CPACK_EXTERNAL_PACKAGE_SCRIPT 中的可选自定义 CMake 脚本调用外部打包软件。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:28
msgid ""
"Staging of installation files may also optionally be taken care of by the "
"generator when enabled through the "
":variable:`CPACK_EXTERNAL_ENABLE_STAGING` variable."
msgstr "当通过 CPACK_EXTERNAL_ENABLE_STAGING 变量启用时，安装文件的暂存也可以选择由生成器处理。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:33
msgid "JSON Format"
msgstr "JSON格式"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:35
msgid ""
"The JSON metadata file contains a list of CPack components and component "
"groups, the various options passed to :command:`cpack_add_component` and "
":command:`cpack_add_component_group`, the dependencies between the "
"components and component groups, and various other options passed to "
"CPack."
msgstr ""
"JSON 元数据文件包含 CPack 组件和组件组的列表、传递给 :command:`cpack_add_component` 和 "
":command:`cpack_add_component_group` 的各种选项、组件和组件组之间的依赖关系以及传递给 CPack "
"的各种其他选项。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:40
msgid ""
"The JSON's root object will always provide two fields: "
"``formatVersionMajor`` and ``formatVersionMinor``, which are always "
"integers that describe the output format of the generator. Backwards-"
"compatible changes to the output format (for example, adding a new field "
"that didn't exist before) cause the minor version to be incremented, and "
"backwards-incompatible changes (for example, deleting a field or changing "
"its meaning) cause the major version to be incremented and the minor "
"version reset to 0. The format version is always of the format "
"``major.minor``. In other words, it always has exactly two parts, "
"separated by a period."
msgstr ""
"JSON 的根对象将始终提供两个字段：``formatVersionMajor`` "
"和``formatVersionMinor``，它们始终是描述生成器输出格式的整数。向后兼容的输出格式更改（例如，添加以前不存在的新字段）会导致次要版本增加，而向后不兼容的更改（例如，删除字段或更改其含义）会导致要递增的主要版本，并将次要版本重置为"
" 0。格式版本始终采用“major.minor”格式。换句话说，它总是恰好有两个部分，用句点分隔。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:50
msgid ""
"You can request one or more specific versions of the output format as "
"described below with :variable:`CPACK_EXTERNAL_REQUESTED_VERSIONS`. The "
"output format will have a major version that exactly matches the requested"
" major version, and a minor version that is greater than or equal to the "
"requested minor version. If no version is requested with "
":variable:`CPACK_EXTERNAL_REQUESTED_VERSIONS`, the latest known major "
"version is used by default. Currently, the only supported format is 1.0, "
"which is described below."
msgstr ""
"您可以请求一个或多个特定版本的输出格式，如下所述 :variable:`CPACK_EXTERNAL_REQUESTED_VERSIONS`。输出格式将有一个与请求的主要版本完全匹配的主要版本，以及一个大于或等于请求的次要版本的次要版本。如果没有使用"
" CPACK_EXTERNAL_REQUESTED_VERSIONS 请求版本，则默认使用最新的已知主要版本。目前，唯一支持的格式是 "
"1.0，如下所述。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:59
msgid "Version 1.0"
msgstr "版本 1.0"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:61
msgid ""
"In addition to the standard format fields, format version 1.0 provides the"
" following fields in the root:"
msgstr "除了标准格式字段外，格式版本 1.0 在根中提供以下字段："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:115
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:150
msgid "``components``"
msgstr "``组件``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:65
msgid ""
"The ``components`` field is an object with component names as the keys and"
" objects describing the components as the values. The component objects "
"have the following fields:"
msgstr "``components`` 字段是一个对象，其中组件名称作为键，描述组件的对象作为值。组件对象具有以下字段："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:71
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:124
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:163
msgid "``name``"
msgstr "``名字``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:70
msgid ""
"The name of the component. This is always the same as the key in the "
"``components`` object."
msgstr "组件的名称。这始终与 ``components`` 对象中的键相同。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:75
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:128
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:167
msgid "``displayName``"
msgstr "``显示名称``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:74
msgid ""
"The value of the ``DISPLAY_NAME`` field passed to "
":command:`cpack_add_component`."
msgstr "传递给 cpack_add_component 的 ``DISPLAY_NAME`` 字段的值。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:79
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:132
msgid "``description``"
msgstr "``描述``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:78
msgid ""
"The value of the ``DESCRIPTION`` field passed to "
":command:`cpack_add_component`."
msgstr "``DESCRIPTION`` 字段的值传递给 :command:`cpack_add_component`。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:83
msgid "``isHidden``"
msgstr "``是隐藏的``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:82
msgid ""
"True if ``HIDDEN`` was passed to :command:`cpack_add_component`, false if "
"it was not."
msgstr "如果 ``HIDDEN`` 被传递给 cpack_add_component 则为真，否则为假。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:87
msgid "``isRequired``"
msgstr "``是必需的``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:86
msgid ""
"True if ``REQUIRED`` was passed to :command:`cpack_add_component`, false "
"if it was not."
msgstr "如果 ``REQUIRED`` 被传递给 cpack_add_component 则为真，否则为假。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:91
msgid "``isDisabledByDefault``"
msgstr "``isDisabledByDefault``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:90
msgid ""
"True if ``DISABLED`` was passed to :command:`cpack_add_component`, false "
"if it was not."
msgstr "如果 ``DISABLED`` 被传递给 cpack_add_component 则为真，否则为假。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:95
msgid "``group``"
msgstr "``组``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:94
msgid ""
"Only present if ``GROUP`` was passed to :command:`cpack_add_component`. If"
" so, this field is a string value containing the component's group."
msgstr ""
"仅在将 ``GROUP`` 传递给 :command:`cpack_add_component` "
"时出现。如果是这样，该字段是一个包含组件组的字符串值。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:100
msgid "``dependencies``"
msgstr "``依赖关系``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:98
msgid ""
"An array of components the component depends on. This contains the values "
"in the ``DEPENDS`` argument passed to :command:`cpack_add_component`. If "
"no ``DEPENDS`` argument was passed, this is an empty list."
msgstr ""
"组件所依赖的组件数组。这包含传递给 :command:`cpack_add_component` 的 ``DEPENDS`` "
"参数中的值。如果未传递“DEPENDS”参数，则这是一个空列表。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:106
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:170
msgid "``installationTypes``"
msgstr "``安装类型``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:103
msgid ""
"An array of installation types the component is part of. This contains the"
" values in the ``INSTALL_TYPES`` argument passed to "
":command:`cpack_add_component`. If no ``INSTALL_TYPES`` argument was "
"passed, this is an empty list."
msgstr ""
"组件所属的一组安装类型。这包含传递给 cpack_add_component 的 ``INSTALL_TYPES`` 参数中的值。如果没有传递 "
"``INSTALL_TYPES`` 参数，这是一个空列表。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:110
msgid "``isDownloaded``"
msgstr "``isDownloaded``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:109
msgid ""
"True if ``DOWNLOADED`` was passed to :command:`cpack_add_component`, false"
" if it was not."
msgstr "如果 ``DOWNLOADED`` 被传递给 cpack_add_component 则为真，否则为假。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:115
msgid "``archiveFile``"
msgstr "``存档文件``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:113
msgid ""
"The name of the archive file passed with the ``ARCHIVE_FILE`` argument to "
":command:`cpack_add_component`. If no ``ARCHIVE_FILE`` argument was "
"passed, this is an empty string."
msgstr ""
"存档文件的名称与 ``ARCHIVE_FILE`` 参数一起传递给 :command:`cpack_add_component`。如果没有传递 "
"``ARCHIVE_FILE`` 参数，这是一个空字符串。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:154
msgid "``componentGroups``"
msgstr "``组件组``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:118
msgid ""
"The ``componentGroups`` field is an object with component group names as "
"the keys and objects describing the component groups as the values. The "
"component group objects have the following fields:"
msgstr "``componentGroups`` 字段是一个以组件组名称作为键和描述组件组的对象作为值的对象。组件组对象具有以下字段："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:123
msgid ""
"The name of the component group. This is always the same as the key in the"
" ``componentGroups`` object."
msgstr "组件组的名称。这始终与 ``componentGroups`` 对象中的键相同。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:127
msgid ""
"The value of the ``DISPLAY_NAME`` field passed to "
":command:`cpack_add_component_group`."
msgstr "传递给 cpack_add_component_group 的 ``DISPLAY_NAME`` 字段的值。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:131
msgid ""
"The value of the ``DESCRIPTION`` field passed to "
":command:`cpack_add_component_group`."
msgstr "传递给 cpack_add_component_group 的 ``DESCRIPTION`` 字段的值。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:137
msgid "``parentGroup``"
msgstr "``父组``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:135
msgid ""
"Only present if ``PARENT_GROUP`` was passed to "
":command:`cpack_add_component_group`. If so, this field is a string value "
"containing the component group's parent group."
msgstr ""
"只有在 ``PARENT_GROUP`` 被传递给 :command:`cpack_add_component_group` "
"时才会出现。如果是，则此字段是一个字符串值，其中包含组件组的父组。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:141
msgid "``isExpandedByDefault``"
msgstr "``isExpandedByDefault``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:140
msgid ""
"True if ``EXPANDED`` was passed to :command:`cpack_add_component_group`, "
"false if it was not."
msgstr "如果 ``EXPANDED`` 被传递给 :command:`cpack_add_component_group` 则为真，否则为假。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:145
msgid "``isBold``"
msgstr "``是粗体``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:144
msgid ""
"True if ``BOLD_TITLE`` was passed to :command:`cpack_add_component_group`,"
" false if it was not."
msgstr "如果 ``BOLD_TITLE`` 被传递给 cpack_add_component_group 则为真，否则为假。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:148
msgid ""
"An array of names of components that are direct members of the group "
"(components that have this group as their ``GROUP``). Components of "
"subgroups are not included."
msgstr "作为组的直接成员的组件名称数组（将此组作为其“GROUP”的组件）。不包括子组的组件。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:154
msgid "``subgroups``"
msgstr "``子组``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:153
msgid ""
"An array of names of component groups that are subgroups of the group "
"(groups that have this group as their ``PARENT_GROUP``)."
msgstr "作为组子组的组件组名称的数组（将此组作为其 ``PARENT_GROUP`` 的组）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:157
msgid ""
"The ``installationTypes`` field is an object with installation type names "
"as the keys and objects describing the installation types as the values. "
"The installation type objects have the following fields:"
msgstr "``installationTypes`` 字段是一个以安装类型名称作为键和描述安装类型的对象作为值的对象。安装类型对象具有以下字段："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:162
msgid ""
"The name of the installation type. This is always the same as the key in "
"the ``installationTypes`` object."
msgstr "安装类型的名称。这始终与“installationTypes”对象中的键相同。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:166
msgid ""
"The value of the ``DISPLAY_NAME`` field passed to "
":command:`cpack_add_install_type`."
msgstr "传递给 cpack_add_install_type 的 ``DISPLAY_NAME`` 字段的值。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:170
msgid "``index``"
msgstr "``索引``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:170
msgid "The integer index of the installation type in the list."
msgstr "列表中安装类型的整数索引。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:189
msgid "``projects``"
msgstr "``项目``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:173
msgid ""
"The ``projects`` field is an array of objects describing CMake projects "
"which comprise the CPack project. The values in this field are derived "
"from :variable:`CPACK_INSTALL_CMAKE_PROJECTS`. In most cases, this will be"
" only a single project. The project objects have the following fields:"
msgstr ""
"``projects`` 字段是一个对象数组，描述了构成 CPack 项目的 CMake "
"项目。此字段中的值来自 :variable:`CPACK_INSTALL_CMAKE_PROJECTS`。在大多数情况下，这将只是一个项目。项目对象具有以下字段："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:179
msgid "``projectName``"
msgstr "``项目名称``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:179
msgid "The project name passed to :variable:`CPACK_INSTALL_CMAKE_PROJECTS`."
msgstr "传递给 CPACK_INSTALL_CMAKE_PROJECTS 的项目名称。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:182
msgid "``component``"
msgstr "``组件``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:182
msgid ""
"The name of the component or component set which comprises the project."
msgstr "组成项目的组件或组件集的名称。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:186
msgid "``directory``"
msgstr "``目录``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:185
msgid ""
"The build directory of the CMake project. This is the directory which "
"contains the ``cmake_install.cmake`` script."
msgstr "CMake 项目的构建目录。这是包含 ``cmake_install.cmake`` 脚本的目录。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:189
msgid "``subDirectory``"
msgstr "``子目录``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:189
msgid ""
"The subdirectory to install the project into inside the CPack package."
msgstr "将项目安装到 CPack 包内的子目录。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:193
msgid "``packageName``"
msgstr "``包名``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:192
msgid ""
"The package name given in :variable:`CPACK_PACKAGE_NAME`. Only present if "
"this option is set."
msgstr "CPACK_PACKAGE_NAME 中给出的包名称。仅在设置此选项时出现。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:197
msgid "``packageVersion``"
msgstr "``包版本``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:196
msgid ""
"The package version given in :variable:`CPACK_PACKAGE_VERSION`. Only "
"present if this option is set."
msgstr "CPACK_PACKAGE_VERSION 中给出的包版本。仅在设置此选项时出现。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:202
msgid "``packageDescriptionFile``"
msgstr "``packageDescriptionFile``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:200
msgid ""
"The package description file given in "
":variable:`CPACK_PACKAGE_DESCRIPTION_FILE`. Only present if this option is"
" set."
msgstr "CPACK_PACKAGE_DESCRIPTION_FILE 中给出的包描述文件。仅在设置此选项时出现。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:207
msgid "``packageDescriptionSummary``"
msgstr "``packageDescriptionSummary``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:205
msgid ""
"The package description summary given in "
":variable:`CPACK_PACKAGE_DESCRIPTION_SUMMARY`. Only present if this option"
" is set."
msgstr "CPACK_PACKAGE_DESCRIPTION_SUMMARY 中给出的包描述摘要。仅在设置此选项时出现。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:211
msgid "``buildConfig``"
msgstr "``buildConfig``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:210
msgid ""
"The build configuration given to CPack with the :option:`cpack -C` option."
" Only present if this option is set."
msgstr "使用 :option:`cpack -C` 选项提供给 CPack 的构建配置。仅在设置此选项时出现。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:216
msgid "``defaultDirectoryPermissions``"
msgstr "``默认目录权限``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:214
msgid ""
"The default directory permissions given in "
":variable:`CPACK_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS`. Only present if "
"this option is set."
msgstr "CPACK_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS 中给出的默认目录权限。仅在设置此选项时出现。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:219
msgid "``setDestdir``"
msgstr "``setDestdir``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:219
msgid "True if :variable:`CPACK_SET_DESTDIR` is true, false if it is not."
msgstr "如果 :variable:`CPACK_SET_DESTDIR` 为真，则为真，否则为假。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:223
msgid "``packagingInstallPrefix``"
msgstr "``packagingInstallPrefix``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:222
msgid ""
"The install prefix given in :variable:`CPACK_PACKAGING_INSTALL_PREFIX`. "
"Only present if :variable:`CPACK_SET_DESTDIR` is true."
msgstr ""
"CPACK_PACKAGING_INSTALL_PREFIX 中给出的安装前缀。仅当 :variable:`CPACK_SET_DESTDIR` "
"为真时出现。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:226
msgid "``stripFiles``"
msgstr "``stripFiles``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:226
msgid "True if :variable:`CPACK_STRIP_FILES` is true, false if it is not."
msgstr "如果 :variable:`CPACK_STRIP_FILES` 为真，则为真，否则为假。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:230
msgid "``warnOnAbsoluteInstallDestination``"
msgstr "``warnOnAbsoluteInstallDestination``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:229
msgid ""
"True if :variable:`CPACK_WARN_ON_ABSOLUTE_INSTALL_DESTINATION` is true, "
"false if it is not."
msgstr "如果 CPACK_WARN_ON_ABSOLUTE_INSTALL_DESTINATION 为真，则为真，否则为假。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:234
msgid "``errorOnAbsoluteInstallDestination``"
msgstr "``errorOnAbsoluteInstallDestination``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:233
msgid ""
"True if :variable:`CPACK_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION` is true, "
"false if it is not."
msgstr ""
"如果 :variable:`CPACK_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION` 为真，则为真，否则为假。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:237
msgid "Variables specific to CPack External generator"
msgstr "特定于 CPack 外部生成器的变量"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:241
msgid ""
"This variable is used to request a specific version of the CPack External "
"generator. It is a list of ``major.minor`` values, separated by "
"semicolons."
msgstr "此变量用于请求特定版本的 CPack 外部生成器。它是 ``major.minor`` 值的列表，用分号分隔。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:244
msgid ""
"If this variable is set to a non-empty value, the CPack External generator"
" will iterate through each item in the list to search for a version that "
"it knows how to generate. Requested versions should be listed in order of "
"descending preference by the client software, as the first matching "
"version in the list will be generated."
msgstr ""
"如果此变量设置为非空值，CPack External "
"生成器将遍历列表中的每个项目以搜索它知道如何生成的版本。请求的版本应按客户端软件的降序顺序列出，因为将生成列表中的第一个匹配版本。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:250
msgid ""
"The generator knows how to generate the version if it has a versioned "
"generator whose major version exactly matches the requested major version,"
" and whose minor version is greater than or equal to the requested minor "
"version. For example, if ``CPACK_EXTERNAL_REQUESTED_VERSIONS`` contains "
"1.0, and the CPack External generator knows how to generate 1.1, it will "
"generate 1.1. If the generator doesn't know how to generate a version in "
"the list, it skips the version and looks at the next one. If it doesn't "
"know how to generate any of the requested versions, an error is thrown."
msgstr ""
"如果生成器的主版本与请求的主版本完全匹配，并且其次版本大于或等于请求的次版本，则生成器知道如何生成版本。例如，如果 "
"``CPACK_EXTERNAL_REQUESTED_VERSIONS`` 包含 1.0，并且 CPack External 生成器知道如何生成 "
"1.1，它将生成 1.1。如果生成器不知道如何生成列表中的版本，它会跳过该版本并查看下一个版本。如果它不知道如何生成任何请求的版本，则会抛出错误。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:259
msgid ""
"If this variable is not set, or is empty, the CPack External generator "
"will generate the highest major and minor version that it knows how to "
"generate."
msgstr "如果此变量未设置或为空，则 CPack 外部生成器将生成它知道如何生成的最高主要和次要版本。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:262
msgid ""
"If an invalid version is encountered in "
"``CPACK_EXTERNAL_REQUESTED_VERSIONS`` (one that doesn't match "
"``major.minor``, where ``major`` and ``minor`` are integers), it is "
"ignored."
msgstr ""
"如果在 ``CPACK_EXTERNAL_REQUESTED_VERSIONS`` 中遇到无效版本（与 ``major.minor`` "
"不匹配的版本，其中 ``major`` 和 ``minor`` 是整数），它将被忽略。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:268
msgid ""
"This variable can be set to true to enable optional installation into a "
"temporary staging area which can then be picked up and packaged by an "
"external packaging tool. The top level directory used by CPack for the "
"current packaging task is contained in ``CPACK_TOPLEVEL_DIRECTORY``. It is"
" automatically cleaned up on each run before packaging is initiated and "
"can be used for custom temporary files required by the external packaging "
"tool. It also contains the staging area ``CPACK_TEMPORARY_DIRECTORY`` into"
" which CPack performs the installation when staging is enabled."
msgstr ""
"可以将此变量设置为 true 以启用可选安装到临时暂存区域，然后可以由外部打包工具拾取和打包。 CPack 用于当前打包任务的顶级目录包含在 "
"``CPACK_TOPLEVEL_DIRECTORY`` "
"中。在启动打包之前，它会在每次运行时自动清理，并可用于外部打包工具所需的自定义临时文件。它还包含暂存区“CPACK_TEMPORARY_DIRECTORY”，启用暂存后，CPack"
" 会在其中执行安装。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:281
msgid ""
"This variable can optionally specify the full path to a CMake script file "
"to be run as part of the CPack invocation. It is invoked after (optional) "
"staging took place and may run an external packaging tool. The script has "
"access to the variables defined by the CPack config file."
msgstr ""
"此变量可以选择指定要作为 CPack 调用的一部分运行的 CMake "
"脚本文件的完整路径。它在（可选）暂存发生后调用，并可能运行外部打包工具。该脚本可以访问 CPack 配置文件定义的变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/external.rst:291
msgid ""
"The ``CPACK_EXTERNAL_PACKAGE_SCRIPT`` script may set this list variable to"
" the full paths of generated package files.  CPack will copy these files "
"from the staging directory back to the top build directory and possibly "
"produce checksum files if the :variable:`CPACK_PACKAGE_CHECKSUM` is set."
msgstr ""
"``CPACK_EXTERNAL_PACKAGE_SCRIPT`` 脚本可以将此列表变量设置为生成的包文件的完整路径。 CPack "
"会将这些文件从暂存目录复制回顶级构建目录，如果设置了 :variable:`CPACK_PACKAGE_CHECKSUM`，则可能会生成校验和文件。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:2
msgid "CPack FreeBSD Generator"
msgstr "CPack FreeBSD 生成器"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:6
msgid "The built in (binary) CPack FreeBSD (pkg) generator (Unix only)"
msgstr "内置（二进制）CPack FreeBSD (pkg) 生成器（仅限 Unix）"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:9
msgid "Variables affecting the CPack FreeBSD (pkg) generator"
msgstr "影响 CPack FreeBSD (pkg) 生成器的变量"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:15
msgid "Variables specific to CPack FreeBSD (pkg) generator"
msgstr "特定于 CPack FreeBSD (pkg) 生成器的变量"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:17
msgid ""
"The CPack FreeBSD generator may be used to create pkg(8) packages -- these"
" may be used on FreeBSD, DragonflyBSD, NetBSD, OpenBSD, but also on Linux "
"or OSX, depending on the installed package-management tools -- using "
":module:`CPack`."
msgstr ""
"CPack FreeBSD 生成器可用于创建 pkg(8) 包——这些包可用于 "
"FreeBSD、DragonflyBSD、NetBSD、OpenBSD，但也可用于 Linux 或 OSX，具体取决于安装的包管理工具——使用 "
":module： `CPack`。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:21
msgid ""
"The CPack FreeBSD generator is a :module:`CPack` generator and uses the "
":variable:`!CPACK_XXX` variables used by :module:`CPack`. It tries to re-"
"use packaging information that may already be specified for Debian "
"packages for the :cpack_gen:`CPack DEB Generator`. It also tries to re-use"
" RPM packaging information when Debian does not specify."
msgstr ""
"CPack FreeBSD 生成器是一个 :module:`CPack` 生成器并使用 :module:`CPack` "
"使用的 :variable:`!CPACK_XXX` 变量。它尝试重新使用可能已经为 Debian 包指定的打包信息，用于 "
":cpack_gen:`CPack DEB Generator`。当 Debian 未指定时，它还会尝试重新使用 RPM 打包信息。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:27
msgid ""
"The CPack FreeBSD generator should work on any host with libpkg installed."
" The packages it produces are specific to the host architecture and ABI."
msgstr "CPack FreeBSD 生成器应该可以在任何安装了 libpkg 的主机上运行。它生成的包特定于主机架构和 ABI。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:30
msgid ""
"The CPack FreeBSD generator sets package-metadata through "
":variable:`!CPACK_FREEBSD_XXX` variables. The CPack FreeBSD generator, "
"unlike the CPack Deb generator, does not specially support componentized "
"packages; a single package is created from all the software artifacts "
"created through CMake."
msgstr ""
"CPack FreeBSD 生成器通过 :variable:`!CPACK_FREEBSD_XXX` 变量设置包元数据。与 CPack Deb "
"生成器不同，CPack FreeBSD 生成器不特别支持组件化包；从通过 CMake 创建的所有软件工件创建一个包。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:36
msgid ""
"All of the variables can be set specifically for FreeBSD packaging in the "
"CPackConfig file or in CMakeLists.txt, but most of them have defaults that"
" use general settings (e.g. :variable:`CMAKE_PROJECT_NAME`) or Debian-"
"specific variables when those make sense (e.g. the homepage of an upstream"
" project is usually unchanged by the flavor of packaging). When there is "
"no Debian information to fall back on, but the RPM packaging has it, fall "
"back to the RPM information (e.g. package license)."
msgstr ""
"所有变量都可以在 CPackConfig 文件或 CMakeLists.txt 中专门为 FreeBSD "
"打包设置，但它们中的大多数都有使用常规设置的默认值（例如 :variable:`CMAKE_PROJECT_NAME`）或 Debian "
"特定变量，当这些变量有意义时（例如，上游项目的主页通常不会因包装风格而改变）。当没有可依赖的 Debian 信息，但 RPM 包有它时，返回到 "
"RPM 信息（例如包许可证）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:46
msgid ""
"Sets the package name (in the package manifest, but also affects the "
"output filename)."
msgstr "设置包名称（在包清单中，但也会影响输出文件名）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:52
msgid ""
":variable:`CPACK_PACKAGE_NAME` (this is always set by CPack itself, based "
"on CMAKE_PROJECT_NAME)."
msgstr ""
":variable:`CPACK_PACKAGE_NAME`（这总是由 CPack 本身设置，基于 CMAKE_PROJECT_NAME）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:57
msgid ""
"Sets the package comment. This is the short description displayed by "
"pkg(8) in standard \"pkg info\" output."
msgstr "设置包注释。这是 pkg(8) 在标准“pkg 信息”输出中显示的简短描述。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:63
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:76
msgid ""
":variable:`CPACK_PACKAGE_DESCRIPTION_SUMMARY` (this is always set by CPack"
" itself, if nothing else sets it explicitly)."
msgstr ""
":variable:`CPACK_PACKAGE_DESCRIPTION_SUMMARY`（这总是由 CPack "
"本身设置，如果没有其他明确设置的话）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:68
msgid ""
"Sets the package description. This is the long description of the package,"
" given by \"pkg info\" with a specific package as argument."
msgstr "设置包描述。这是包的详细描述，由“pkg info”以特定包作为参数给出。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:74
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_DESCRIPTION` (this may be set already for "
"Debian packaging, so it is used as a fallback)."
msgstr ""
":variable:`CPACK_DEBIAN_PACKAGE_DESCRIPTION`（这可能已经为 Debian 打包设置，所以它被用作后备）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:78
msgid ""
":variable:`PROJECT_DESCRIPTION` (this can be set with the ``DESCRIPTION`` "
"parameter for :command:`project`)."
msgstr ""
":variable:`PROJECT_DESCRIPTION`（可以使用 :command:`project` 的 ``DESCRIPTION`` "
"参数设置）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:90
msgid ":variable:`CPACK_PACKAGE_HOMEPAGE_URL`, or if that is not set,"
msgstr ":variable:`CPACK_PACKAGE_HOMEPAGE_URL`，或者如果未设置，"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:91
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_HOMEPAGE` (this may be set already for "
"Debian packaging, so it is used as a fallback)."
msgstr ""
":variable:`CPACK_DEBIAN_PACKAGE_HOMEPAGE`（这可能已经为 Debian 打包设置，所以它被用作后备）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:94
msgid "The :variable:`!CPACK_PACKAGE_HOMEPAGE_URL` variable."
msgstr ":variable:`!CPACK_PACKAGE_HOMEPAGE_URL` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:99
msgid ""
"The license, or licenses, which apply to this software package. This must "
"be one or more license-identifiers that pkg recognizes as acceptable "
"license identifiers (e.g. \"GPLv2\")."
msgstr "适用于此软件包的许可证或许可证。这必须是 pkg 识别为可接受的许可证标识符的一个或多个许可证标识符（例如“GPLv2”）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:106
msgid ":variable:`CPACK_RPM_PACKAGE_LICENSE`"
msgstr ":variable:`CPACK_RPM_PACKAGE_LICENSE`"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:110
msgid ""
"This variable is only of importance if there is more than one license. The"
" default is \"single\", which is only applicable to a single license. "
"Other acceptable values are determined by pkg -- those are \"dual\" or "
"\"multi\" -- meaning choice (OR) or simultaneous (AND) application of the "
"licenses."
msgstr ""
"此变量仅在有多个许可证时才重要。默认为“single”，只适用于单个license。其他可接受的值由 pkg "
"决定——它们是“双重”或“多重”——意思是许可证的选择 (OR) 或同时 (AND) 应用。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:116
msgid "single"
msgstr "单身的"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:120
msgid "The FreeBSD maintainer (e.g. ``kde@freebsd.org``) of this package."
msgstr "这个软件包的 FreeBSD 维护者（例如 ``kde@freebsd.org``）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:123
msgid "none"
msgstr "没有任何"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:127
msgid ""
"The origin (ports label) of this package; for packages built by CPack "
"outside of the ports system this is of less importance. The default puts "
"the package somewhere under ``misc/``, as a stopgap."
msgstr ""
"此包的来源（端口标签）；对于由 CPack 在 ports 系统之外构建的包，这不太重要。默认情况下将包放在 ``misc/`` "
"下的某处，作为权宜之计。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:132
msgid "``misc/<package name>``"
msgstr "``misc/<包名称>``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:136
msgid ""
"The ports categories where this package lives (if it were to be built from"
" ports). If none is set a single category is determined based on the "
"package origin."
msgstr "这个包所在的端口类别（如果它是从端口构建的）。如果未设置，则根据包裹来源确定单个类别。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:141
msgid "derived from ``ORIGIN``"
msgstr "源自 ``ORIGIN``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:145
msgid ""
"A list of package origins that should be added as package dependencies. "
"These are in the form ``<category>/<packagename>``, e.g. ``x11/libkonq``. "
"No version information needs to be provided (this is not included in the "
"manifest)."
msgstr ""
"应作为包依赖项添加的包来源列表。它们的形式为``<category>/<packagename>``，例如``x11/libkonq``。不需要提供版本信息（这不包含在清单中）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/freebsd.rst:151
msgid "empty"
msgstr "空的"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:2
msgid "CPack IFW Generator"
msgstr "CPack IFW 生成器"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:6
msgid ""
"Configure and run the Qt Installer Framework to generate a Qt installer."
msgstr "配置并运行 Qt Installer Framework 以生成 Qt 安装程序。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:9
msgid "Contents"
msgstr "内容"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:13
msgid "Overview"
msgstr "概述"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:15
msgid ""
"This :manual:`cpack generator <cpack-generators(7)>` generates "
"configuration and meta information for the `Qt Installer Framework "
"<https://doc.qt.io/qtinstallerframework/index.html>`_ (QtIFW), and runs "
"QtIFW tools to generate a Qt installer."
msgstr ""
"这个 :manual:`cpack 生成器 <cpack-generators(7)>` 为`Qt Installer Framework "
"<https://doc.qt.io/qtinstallerframework/index.html>`_ (QtIFW) 生成配置和元信息，并运行"
" QtIFW 工具来生成 Qt 安装程序。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:20
msgid ""
"QtIFW provides tools and utilities to create installers for the platforms "
"supported by `Qt <https://www.qt.io>`_: Linux, Microsoft Windows, and "
"macOS."
msgstr ""
"QtIFW 提供工具和实用程序来为`Qt <https://www.qt.io>`_ 支持的平台创建安装程序：Linux、Microsoft "
"Windows 和 macOS。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:24
msgid ""
"To make use of this generator, QtIFW needs to be installed. The "
":module:`CPackIFW` module looks for the location of the QtIFW command-line"
" utilities, and defines several commands to control the behavior of this "
"generator. See `Hints for Finding QtIFW`_."
msgstr ""
"要使用此生成器，需要安装 QtIFW。 :module:`CPackIFW` 模块查找 QtIFW "
"命令行实用程序的位置，并定义几个命令来控制此生成器的行为。请参阅`查找 QtIFW 的提示`_。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:30
msgid "Variables"
msgstr "变量"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:32
msgid ""
"You can use the following variables to change the behavior of the CPack "
"``IFW`` generator."
msgstr "您可以使用以下变量来更改 CPack ``IFW`` 生成器的行为。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:36
msgid "Debug"
msgstr "调试"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:42
msgid ""
"Set to ``ON`` to enable addition debug output. By default is ``OFF``."
msgstr "设置为 ``ON`` 以启用附加调试输出。默认情况下是 ``OFF``。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:46
msgid "Package"
msgstr "包裹"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:50
msgid ""
"Name of the installer as displayed on the title bar. If not specified, it "
"defaults to :variable:`CPACK_PACKAGE_DESCRIPTION_SUMMARY`."
msgstr "标题栏上显示的安装程序名称。如果未指定，则默认为 :variable:`CPACK_PACKAGE_DESCRIPTION_SUMMARY`。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:55
msgid ""
"Publisher of the software (as shown in the Windows Control Panel). If not "
"specified, it defaults to :variable:`CPACK_PACKAGE_VENDOR`."
msgstr "软件的发行者（如 Windows 控制面板中所示）。如果未指定，则默认为 :variable:`CPACK_PACKAGE_VENDOR`。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:60
msgid "URL to a page that contains product information on your web site."
msgstr "指向包含您网站上产品信息的页面的 URL。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:64
msgid ""
"Filename for a custom installer icon. It must be an absolute path. This "
"should be a ``.icns`` file on macOS and a ``.ico`` file on Windows. It is "
"ignored on other platforms."
msgstr ""
"自定义安装程序图标的文件名。它必须是绝对路径。这在 macOS 上应该是一个 ``.icns`` 文件，在 Windows 上应该是一个 "
"``.ico`` 文件。它在其他平台上被忽略。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:70
msgid ""
"Filename for a custom window icon in PNG format for the Installer "
"application. It must be an absolute path."
msgstr "安装程序应用程序的 PNG 格式的自定义窗口图标的文件名。它必须是绝对路径。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:75
msgid ""
"Filename for a logo image in PNG format, used as ``QWizard::LogoPixmap``. "
"It must be an absolute path."
msgstr "PNG 格式的徽标图像的文件名，用作“QWizard::LogoPixmap”。它必须是绝对路径。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:82
msgid ""
"Filename for a watermark image in PNG format, used as "
"``QWizard::WatermarkPixmap``. It must be an absolute path."
msgstr "PNG 格式的水印图像的文件名，用作“QWizard::WatermarkPixmap”。它必须是绝对路径。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:89
msgid ""
"Filename for a banner image in PNG format, used as "
"``QWizard::BannerPixmap``. It must be an absolute path."
msgstr "PNG 格式的横幅图像的文件名，用作“QWizard::BannerPixmap”。它必须是绝对路径。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:96
msgid ""
"Filename for a background image in PNG format, used as "
"``QWizard::BackgroundPixmap`` (only used by ``MacStyle``). It must be an "
"absolute path."
msgstr ""
"PNG 格式背景图像的文件名，用作“QWizard::BackgroundPixmap”（仅由“MacStyle”使用）。它必须是绝对路径。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:104
msgid ""
"Wizard style to be used (``Modern``, ``Mac``, ``Aero`` or ``Classic``)."
msgstr "要使用的向导样式（``Modern``、``Mac``、``Aero`` 或``Classic``）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:110
msgid ""
"Default width of the wizard in pixels. Setting a banner image will "
"override this."
msgstr "向导的默认宽度（以像素为单位）。设置横幅图像将覆盖它。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:117
msgid ""
"Default height of the wizard in pixels. Setting a watermark image will "
"override this."
msgstr "向导的默认高度（以像素为单位）。设置水印图像将覆盖它。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:124
msgid ""
"Set to ``OFF`` if the widget listing installer pages on the left side of "
"the wizard should not be shown."
msgstr "如果不应显示向导左侧的小部件列表安装程序页面，请设置为“OFF”。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:127
msgid ""
"It is ``ON`` by default, but will only have an effect if using QtIFW 4.0 "
"or later."
msgstr "它默认为“ON”，但只有在使用 QtIFW 4.0 或更高版本时才会有效。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:134
msgid ""
"Color of the titles and subtitles (takes an HTML color code, such as "
"``#88FF33``)."
msgstr "标题和副标题的颜色（采用 HTML 颜色代码，例如 ``#88FF33``）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:141
msgid "Filename for a stylesheet. It must be an absolute path."
msgstr "样式表的文件名。它必须是绝对路径。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:145
msgid ""
"Default target directory for installation. If "
":variable:`CPACK_PACKAGE_INSTALL_DIRECTORY` is set, this defaults to "
"``@ApplicationsDir@/${CPACK_PACKAGE_INSTALL_DIRECTORY}``. If that variable"
" isn't set either, the default used is ``@RootDir@/usr/local``. Predefined"
" variables of the form ``@...@`` are expanded by the `QtIFW scripting "
"engine <https://doc.qt.io/qtinstallerframework/scripting.html>`_."
msgstr ""
"安装的默认目标目录。如果设置了 :variable:`CPACK_PACKAGE_INSTALL_DIRECTORY`，则默认为``@ApplicationsDir@/${CPACK_PACKAGE_INSTALL_DIRECTORY}``。如果那个变量也没有设置，默认使用的是“@RootDir@/usr/local”。"
" ``@...@`` 形式的预定义变量由 `QtIFW 脚本引擎 "
"<https://doc.qt.io/qtinstallerframework/scripting.html>`_ 扩展。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:154
msgid "Default target directory for installation with administrator rights."
msgstr "具有管理员权限的安装的默认目标目录。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:156
msgid "You can use predefined variables."
msgstr "您可以使用预定义的变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:162
msgid ""
"Set to ``OFF`` if the target directory should not be deleted when "
"uninstalling."
msgstr "如果卸载时不应删除目标目录，则设置为“OFF”。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:164
msgid "Is ``ON`` by default"
msgstr "默认为 ``ON``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:168
msgid "The group, which will be used to configure the root package."
msgstr "该组，将用于配置根包。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:172
msgid ""
"The root package name, which will be used if the configuration group is "
"not specified."
msgstr "根包名，不指定配置组时使用。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:179
msgid ""
"Name of the default program group for the product in the Windows Start "
"menu. If not specified, it defaults to :variable:`CPACK_IFW_PACKAGE_NAME`."
msgstr "Windows 开始菜单中产品的默认程序组的名称。如果未指定，则默认为 :variable:`CPACK_IFW_PACKAGE_NAME`。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:186
msgid ""
"Filename of the generated maintenance tool. The platform-specific "
"executable file extension will be appended."
msgstr "生成的维护工具的文件名。将附加特定于平台的可执行文件扩展名。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:189
msgid ""
"If not specified, QtIFW provides a default name (``maintenancetool``)."
msgstr "如果未指定，QtIFW 会提供默认名称（``maintenancetool``）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:195
msgid "Filename for the configuration of the generated maintenance tool."
msgstr "生成的维护工具的配置文件名。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:197
msgid ""
"If not specified, QtIFW uses a default file name "
"(``maintenancetool.ini``)."
msgstr "如果未指定，QtIFW 使用默认文件名（``maintenancetool.ini``）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:203
msgid ""
"Set to ``ON`` if the installation path can contain non-ASCII characters. "
"Only supported for QtIFW 2.0 and later. Older QtIFW versions will always "
"allow non-ASCII characters."
msgstr ""
"如果安装路径可以包含非 ASCII 字符，则设置为 ``ON``。仅支持 QtIFW 2.0 及更高版本。较旧的 QtIFW 版本将始终允许非 "
"ASCII 字符。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:211
msgid ""
"Set to ``OFF`` if the installation path cannot contain space characters."
msgstr "如果安装路径不能包含空格字符，则设置为 ``OFF``。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:213
msgid "Is ``ON`` for QtIFW less 2.0 tools."
msgstr "对于 QtIFW less 2.0 工具是 ``ON``。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:219
msgid ""
"Set to ``ON`` if command line interface features should be disabled. It is"
" ``OFF`` by default and will only have an effect if using QtIFW 4.0 or "
"later."
msgstr "如果应禁用命令行界面功能，则设置为 ``ON``。默认情况下它是“关闭”并且只有在使用 QtIFW 4.0 或更高版本时才会有效。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:227
msgid "Filename for a custom installer control script."
msgstr "自定义安装程序控制脚本的文件名。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:233
msgid ""
"List of additional resources (``.qrc`` files) to include in the installer "
"binary. They should be specified as absolute paths and no two resource "
"files can have the same file name."
msgstr ""
"要包含在安装程序二进制文件中的附加资源列表（``.qrc`` 文件）。它们应指定为绝对路径，并且任何两个资源文件都不能具有相同的文件名。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:237
msgid ""
"You can use the :command:`cpack_ifw_add_package_resources` command to "
"resolve relative paths."
msgstr "您可以使用 :command:`cpack_ifw_add_package_resources` 命令来解析相对路径。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:244
msgid "The target binary extension."
msgstr "目标二进制扩展。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:246
msgid ""
"On Linux, the name of the target binary is automatically extended with "
"``.run``, if you do not specify the extension."
msgstr "在 Linux 上，如果您未指定扩展名，则目标二进制文件的名称会自动扩展为“.run”。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:249
msgid ""
"On Windows, the target is created as an application with the extension "
"``.exe``, which is automatically added, if not supplied."
msgstr "在 Windows 上，目标创建为扩展名为“.exe”的应用程序，如果未提供，则会自动添加。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:252
msgid ""
"On Mac, the target is created as an DMG disk image with the extension "
"``.dmg``, which is automatically added, if not supplied."
msgstr "在 Mac 上，目标创建为 DMG 磁盘映像，扩展名为“.dmg”，如果未提供，则会自动添加。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:257
msgid "The list of remote repositories."
msgstr "远程存储库列表。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:259
msgid ""
"The default value of this variable is computed by CPack and contains all "
"repositories added with :command:`cpack_ifw_add_repository` or updated "
"with :command:`cpack_ifw_update_repository`."
msgstr ""
"此变量的默认值由 CPack 计算并包含所有使用 :command:`cpack_ifw_add_repository` 添加或使用 "
":command:`cpack_ifw_update_repository` 更新的存储库。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:265
msgid ""
"If this is ``ON``, all components will be downloaded. If not set, the "
"behavior is determined by whether :command:`cpack_configure_downloads` has"
" been called with the ``ALL`` option or not."
msgstr ""
"如果这是``ON``，将下载所有组件。如果未设置，则行为取决于是否使用 ALL 选项调用了 "
":command:`cpack_configure_downloads`。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:273
msgid ""
"A list of images to be shown on the ``PerformInstallationPage``. These "
"must be absolute paths and the images must be in PNG format."
msgstr "要在 PerformInstallationPage 上显示的图像列表。这些必须是绝对路径并且图像必须是 PNG 格式。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:276
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:287
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:296
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:307
msgid "This feature is available for QtIFW 4.0.0 and later."
msgstr "此功能适用于 QtIFW 4.0.0 及更高版本。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:282
msgid ""
"Command executed after the installer is finished, if the user accepts the "
"action. Provide the full path to the application, as found when installed."
" This typically means the path should begin with the QtIFW predefined "
"variable ``@TargetDir@``."
msgstr ""
"如果用户接受操作，安装程序完成后执行的命令。提供安装时找到的应用程序的完整路径。这通常意味着路径应该以 QtIFW "
"预定义变量“@TargetDir@”开始。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:293
msgid ""
"List of arguments passed to the program specified in "
":variable:`CPACK_IFW_PACKAGE_RUN_PROGRAM`."
msgstr "传递给 CPACK_IFW_PACKAGE_RUN_PROGRAM 中指定的程序的参数列表。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:302
msgid ""
"Text shown next to the check box for running the program after the "
"installation. If :variable:`CPACK_IFW_PACKAGE_RUN_PROGRAM` is set but no "
"description is provided, QtIFW will use a default message like ``Run "
"<Name> now``."
msgstr ""
"安装后运行程序复选框旁边显示的文本。如果 :variable:`CPACK_IFW_PACKAGE_RUN_PROGRAM` 已设置但未提供说明，QtIFW "
"将使用默认消息，如``Run <Name> now``。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:313
msgid ""
"Allows specifying a code signing identity to be used for signing the "
"generated app bundle. Only available on macOS, ignored on other platforms."
msgstr "允许指定用于对生成的应用程序包进行签名的代码签名身份。仅在 macOS 上可用，在其他平台上将被忽略。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:320
msgid ""
"Set the format used when packaging new component data archives. If you "
"omit this option, the ``7z`` format will be used as a default. Supported "
"formats:"
msgstr "设置打包新组件数据存档时使用的格式。如果省略此选项，将使用 ``7z`` 格式作为默认格式。支持的格式："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:323
msgid "7z"
msgstr "7z"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:324
msgid "zip"
msgstr "压缩"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:325
msgid "tar.gz"
msgstr "压缩包"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:326
msgid "tar.bz2"
msgstr "tar.bz2"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:327
msgid "tar.xz"
msgstr "tar.xz文件"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:331
msgid ""
"If the Qt Installer Framework tools were built without libarchive support,"
" only ``7z`` format is supported."
msgstr ""
"如果 Qt Installer Framework 工具是在没有 libarchive 支持的情况下构建的，则仅支持 ``7z`` 格式。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:334
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:357
msgid "This feature is available for QtIFW 4.2.0 and later."
msgstr "此功能适用于 QtIFW 4.2.0 及更高版本。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:340
msgid "Archive compression level. The allowable values are:"
msgstr "存档压缩级别。允许的值为："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:342
msgid "0 (*No compression*)"
msgstr "0（*无压缩*）"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:343
msgid "1 (*Fastest compression*)"
msgstr "1（*最快的压缩*）"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:344
msgid "3 (*Fast compression*)"
msgstr "3（*快速压缩*）"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:345
msgid "5 (*Normal compression*)"
msgstr "5（*正常压缩*）"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:346
msgid "7 (*Maximum compression*)"
msgstr "7（*最大压缩*）"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:347
msgid "9 (*Ultra compression*)"
msgstr "9（*超级压缩*）"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:349
msgid ""
"If this variable is not set, QtIFW will use a default compression level, "
"which will typically be 5 (*Normal compression*)."
msgstr "如果未设置此变量，QtIFW 将使用默认压缩级别，通常为 5（*正常压缩*）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:354
msgid ""
"Some formats do not support all the possible values. For example ``zip`` "
"compression only supports values from 1 to 7."
msgstr "某些格式不支持所有可能的值。例如 ``zip`` 压缩只支持从 1 到 7 的值。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:360
msgid "Components"
msgstr "成分"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:364
msgid "Resolve duplicate names when installing components with groups."
msgstr "安装带组的组件时解决重名问题。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:368
msgid ""
"Additional prepared packages directories that will be used to resolve "
"dependent components."
msgstr "将用于解析依赖组件的其他准备好的包目录。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:375
msgid ""
"Additional prepared repository directories that will be used to resolve "
"and repack dependent components."
msgstr "将用于解析和重新打包依赖组件的其他准备好的存储库目录。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:378
msgid "This feature is available for QtIFW 3.1 and later."
msgstr "此功能适用于 QtIFW 3.1 及更高版本。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:381
msgid "QtIFW Tools"
msgstr "QtIFW 工具"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:387
msgid ""
"The version of the QtIFW tools that will be used. This variable is set by "
"the :module:`CPackIFW` module."
msgstr "将使用的 QtIFW 工具的版本。此变量由 CPackIFW 模块设置。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:390
msgid ""
"The following variables provide the locations of the QtIFW command-line "
"tools as discovered by the :module:`CPackIFW` module. These variables are "
"cached, and may be configured if needed."
msgstr "以下变量提供由 CPackIFW 模块发现的 QtIFW 命令行工具的位置。这些变量被缓存，并且可以根据需要进行配置。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:398
msgid "The path to ``archivegen``."
msgstr "``archivegen`` 的路径。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:402
msgid "The path to ``binarycreator``."
msgstr "``binarycreator`` 的路径。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:406
msgid "The path to ``repogen``."
msgstr "``repogen`` 的路径。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:410
msgid "The path to ``installerbase``."
msgstr "``installerbase`` 的路径。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:414
msgid "The path to ``devtool``."
msgstr "``devtool`` 的路径。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:417
msgid "Hints for Finding QtIFW"
msgstr "寻找 QtIFW 的提示"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:419
msgid ""
"Generally, the CPack ``IFW`` generator automatically finds QtIFW tools. "
"The following (in order of precedence) can also be set to augment the "
"locations normally searched by :command:`find_program`:"
msgstr ""
"通常，CPack ``IFW`` 生成器会自动找到 QtIFW 工具。以下（按优先顺序排列）也可以设置为增加通常由 "
":command:`find_program` 搜索的位置："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:427
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:437
msgid "CMake variable"
msgstr "CMake 变量"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:433
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:441
msgid "Environment variable"
msgstr "环境变量"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:444
msgid ""
"The specified path should not contain ``bin`` at the end (for example: "
"``D:\\\\DevTools\\\\QtIFW2.0.5``)."
msgstr "指定的路径末尾不应包含 ``bin``（例如：``D:\\\\DevTools\\\\QtIFW2.0.5``）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:448
msgid "Other Settings"
msgstr "其他设置"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:451
msgid "Online installer"
msgstr "在线安装程序"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:453
msgid ""
"By default, this generator generates an *offline installer*. This means "
"that all packaged files are fully contained in the installer executable."
msgstr "默认情况下，此生成器会生成一个*离线安装程序*。这意味着所有打包文件都完全包含在安装程序可执行文件中。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:456
msgid ""
"In contrast, an *online installer* will download some or all components "
"from a remote server."
msgstr "相反，*在线安装程序*将从远程服务器下载部分或全部组件。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:459
msgid ""
"The ``DOWNLOADED`` option in the :command:`cpack_add_component` command "
"specifies that a component is to be downloaded. Alternatively, the ``ALL``"
" option in the :command:`cpack_configure_downloads` command specifies that"
" `all` components are to be be downloaded."
msgstr ""
":command:`cpack_add_component` 命令中的 ``DOWNLOADED`` "
"选项指定要下载的组件。或者， :command:`cpack_configure_downloads` 命令中的 ``ALL`` 选项指定要下载 "
"`all` 组件。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:464
msgid ""
"The :command:`cpack_ifw_add_repository` command and the "
":variable:`CPACK_IFW_DOWNLOAD_ALL` variable allow for more specific "
"configuration."
msgstr ""
":command:`cpack_ifw_add_repository` 命令和 :variable:`CPACK_IFW_DOWNLOAD_ALL` "
"变量允许更具体的配置。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:468
msgid ""
"When there are online components, CPack will write them to archive files. "
"The help page of the :module:`CPackComponent` module, especially the "
"section on the :command:`cpack_configure_downloads` function, explains how"
" to make these files accessible from a download URL."
msgstr ""
"当有在线组件时，CPack 会将它们写入存档文件。 :module:`CPackComponent` 模块的帮助页面，尤其是有关 "
":command:`cpack_configure_downloads` 函数的部分，解释了如何通过下载 URL 访问这些文件。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:474
msgid "Internationalization"
msgstr "国际化"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:478
msgid ""
"Some variables and command arguments support internationalization via "
"CMake script. This is an optional feature."
msgstr "一些变量和命令参数通过 CMake 脚本支持国际化。这是一项可选功能。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:481
msgid ""
"Installers created by QtIFW tools have built-in support for "
"internationalization and many phrases are localized to many languages, but"
" this does not apply to the description of your components and groups."
msgstr "QtIFW 工具创建的安装程序内置了对国际化的支持，许多短语已本地化为多种语言，但这不适用于您的组件和组的描述。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:485
msgid ""
"Localization of the description of your components and groups is useful "
"for users of your installers."
msgstr "组件和组描述的本地化对安装程序的用户很有用。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:488
msgid ""
"A localized variable or argument can contain a single default value, and "
"after that a set of pairs with the name of the locale and the localized "
"value."
msgstr "本地化变量或参数可以包含单个默认值，然后是一组具有语言环境名称和本地化值的对。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:491
msgid "For example:"
msgstr "例如："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:502
msgid "See Also"
msgstr "也可以看看"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:504
msgid "Qt Installer Framework Manual:"
msgstr "Qt 安装程序框架手册："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:506
msgid "Index page: https://doc.qt.io/qtinstallerframework/index.html"
msgstr "索引页:https://doc.qt.io/qtinstallerframework/index.html"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:509
msgid ""
"Component Scripting: https://doc.qt.io/qtinstallerframework/scripting.html"
msgstr "组件脚本:https://doc.qt.io/qtinstallerframework/scripting.html"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:512
msgid ""
"Predefined Variables: "
"https://doc.qt.io/qtinstallerframework/scripting.html#predefined-variables"
msgstr ""
"预定义变量:https://doc.qt.io/qtinstallerframework/scripting.html#predefined-"
"variables"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:515
msgid ""
"Promoting Updates: https://doc.qt.io/qtinstallerframework/ifw-updates.html"
msgstr "促进更新:https://doc.qt.io/qtinstallerframework/ifw-updates.html"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:518
msgid "Download Qt Installer Framework for your platform from Qt site:"
msgstr "从 Qt 站点为您的平台下载 Qt Installer Framework："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/ifw.rst:519
msgid "https://download.qt.io/official_releases/qt-installer-framework"
msgstr "https://download.qt.io/official_releases/qt-installer-framework"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:2
msgid "CPack NSIS Generator"
msgstr "CPack NSIS 生成器"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:4
msgid ""
"CPack Nullsoft Scriptable Install System (NSIS) generator specific "
"options."
msgstr "CPack Nullsoft Scriptable Install System (NSIS) 生成器特定选项。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:6
msgid "The NSIS generator requires NSIS 3.03 or newer."
msgstr "NSIS 生成器需要 NSIS 3.03 或更新版本。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:10
msgid "Variables specific to CPack NSIS generator"
msgstr "特定于 CPack NSIS 生成器的变量"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:12
msgid ""
"The following variables are specific to the graphical installers built on "
"Windows Nullsoft Scriptable Install System."
msgstr "以下变量特定于构建在 Windows Nullsoft 脚本安装系统上的图形安装程序。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:17
msgid ""
"The default installation directory presented to the end user by the NSIS "
"installer is under this root dir. The full directory presented to the end "
"user is: ``${CPACK_NSIS_INSTALL_ROOT}/${CPACK_PACKAGE_INSTALL_DIRECTORY}``"
msgstr ""
"NSIS "
"安装程序向最终用户提供的默认安装目录位于此根目录下。呈现给最终用户的完整目录是：``${CPACK_NSIS_INSTALL_ROOT}/${CPACK_PACKAGE_INSTALL_DIRECTORY}``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:23
msgid ""
"An icon filename.  The name of a ``*.ico`` file used as the main icon for "
"the generated install program."
msgstr "图标文件名。 ``*.ico`` 文件的名称，用作生成的安装程序的主图标。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:28
msgid ""
"An icon filename.  The name of a ``*.ico`` file used as the main icon for "
"the generated uninstall program."
msgstr "图标文件名。 ``*.ico`` 文件的名称，用作生成的卸载程序的主图标。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:33
msgid "undocumented."
msgstr "无证件。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:39
msgid ""
"The filename of a bitmap to use as the NSIS "
"``MUI_WELCOMEFINISHPAGE_BITMAP``."
msgstr "用作 NSIS ``MUI_WELCOMEFINISHPAGE_BITMAP`` 的位图文件名。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:45
msgid ""
"The filename of a bitmap to use as the NSIS "
"``MUI_UNWELCOMEFINISHPAGE_BITMAP``."
msgstr "用作 NSIS ``MUI_UNWELCOMEFINISHPAGE_BITMAP`` 的位图文件名。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:49
msgid ""
"Extra NSIS commands that will be added to the beginning of the install "
"Section, before your install tree is available on the target system."
msgstr "在安装树在目标系统上可用之前，将添加到安装部分开头的额外 NSIS 命令。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:54
msgid ""
"Extra NSIS commands that will be added to the end of the install Section, "
"after your install tree is available on the target system."
msgstr "在安装树在目标系统上可用后，将添加到安装部分末尾的额外 NSIS 命令。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:59
msgid ""
"Extra NSIS commands that will be added to the uninstall Section, before "
"your install tree is removed from the target system."
msgstr "在从目标系统中删除安装树之前，将添加到卸载部分的额外 NSIS 命令。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:64
msgid ""
"The arguments that will be passed to the NSIS `SetCompressor` command."
msgstr "将传递给 NSIS `SetCompressor` 命令的参数。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:68
msgid ""
"Ask about uninstalling previous versions first.  If this is set to ``ON``,"
" then an installer will look for previous installed versions and if one is"
" found, ask the user whether to uninstall it before proceeding with the "
"install."
msgstr "询问是否先卸载以前的版本。如果设置为“ON”，则安装程序将查找以前安装的版本，如果找到，询问用户是否在继续安装之前将其卸载。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:75
msgid ""
"Modify ``PATH`` toggle.  If this is set to ``ON``, then an extra page will"
" appear in the installer that will allow the user to choose whether the "
"program directory should be added to the system ``PATH`` variable."
msgstr ""
"修改 ``PATH`` 开关。如果设置为 ``ON``，那么安装程序中将出现一个额外的页面，允许用户选择是否应将程序目录添加到系统 ``PATH``"
" 变量中。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:81
msgid ""
"The display name string that appears in the Windows `Apps & features` in "
"`Control Panel`"
msgstr "Windows 的“控制面板”中的“应用程序和功能”中出现的显示名称字符串"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:86
msgid "The title displayed at the top of the installer."
msgstr "安装程序顶部显示的标题。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:90
msgid "A path to the executable that contains the installer icon."
msgstr "包含安装程序图标的可执行文件的路径。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:94
msgid ""
"URL to a web site providing assistance in installing your application."
msgstr "提供安装应用程序帮助的网站的 URL。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:98
msgid "URL to a web site providing more information about your application."
msgstr "提供有关您的应用程序的更多信息的网站的 URL。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:102
msgid ""
"Contact information for questions and comments about the installation "
"process."
msgstr "有关安装过程的问题和意见的联系信息。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:109
msgid ""
"Custom install directory for the specified component ``<compName>`` "
"instead of ``$INSTDIR``."
msgstr "指定组件的自定义安装目录``<compName>`` 而不是``$INSTDIR``。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:114
msgid "Additional NSIS commands for creating `Start Menu` shortcuts."
msgstr "用于创建“开始菜单”快捷方式的其他 NSIS 命令。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:118
msgid "Additional NSIS commands to uninstall `Start Menu` shortcuts."
msgstr "用于卸载“开始菜单”快捷方式的其他 NSIS 命令。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:122
msgid ""
"Creating NSIS `Start Menu` links assumes that they are in ``bin`` unless "
"this variable is set.  For example, you would set this to ``exec`` if your"
" executables are in an exec directory."
msgstr ""
"创建 NSIS `Start Menu` 链接假定它们在 ``bin`` 中，除非设置了这个变量。例如，如果您的可执行文件位于 exec "
"目录中，您可以将其设置为 ``exec``。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:128
msgid ""
"Specify an executable to add an option to run on the finish page of the "
"NSIS installer."
msgstr "指定一个可执行文件以添加一个选项以在 NSIS 安装程序的完成页面上运行。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:133
msgid ""
"Specify links in ``[application]`` menu.  This should contain a list of "
"pair ``link`` ``link name``. The link may be a URL or a path relative to "
"installation prefix.  Like::"
msgstr ""
"在“[应用程序]”菜单中指定链接。这应该包含一对 ``link`` ``link name`` 的列表。该链接可以是 URL "
"或相对于安装前缀的路径。喜欢：："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:145
msgid ""
"Specify the name of the program to uninstall the version. Default is "
"``Uninstall``."
msgstr "指定要卸载版本的程序的名称。默认为“卸载”。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:152
msgid "The title to display on the top of the page for the welcome page."
msgstr "在欢迎页面的页面顶部显示的标题。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:158
msgid "Display the title in the welcome page on 3 lines instead of 2."
msgstr "在欢迎页面中显示 3 行而不是 2 行的标题。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:164
msgid "The title to display on the top of the page for the finish page."
msgstr "显示在结束页面页面顶部的标题。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:170
msgid "Display the title in the finish page on 3 lines instead of 2."
msgstr "在结束页面中显示 3 行而不是 2 行的标题。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:176
msgid "The image to display on the header of installers pages."
msgstr "要显示在安装程序页面标题上的图像。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:182
msgid "If set, declares that the installer is DPI-aware."
msgstr "如果设置，则声明安装程序是 DPI 感知的。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:188
msgid ""
"If set, updates the text at the bottom of the install window. To set the "
"string to blank, use a space (\" \")."
msgstr "如果设置，更新安装窗口底部的文本。要将字符串设置为空白，请使用空格 (\" \")。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:195
msgid ""
"If set, trim down the size of the control to the size of the branding text"
" string. Allowed values for this variable are ``LEFT``, ``CENTER`` or "
"``RIGHT``. If not specified, the default behavior is ``LEFT``."
msgstr ""
"如果设置，则将控件的大小缩小到品牌文本字符串的大小。此变量的允许值为“LEFT”、“CENTER”或“RIGHT”。如果未指定，则默认行为为 "
"``LEFT``。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:203
msgid ""
"If set, specify the name of the NSIS executable. Default is ``makensis``."
msgstr "如果设置，请指定 NSIS 可执行文件的名称。默认为``makensis``。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:209
msgid ""
"If set, do not display the page containing the license during "
"installation."
msgstr "如果设置，则在安装过程中不显示包含许可证的页面。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:215
msgid ""
"This variable is a :ref:`semicolon-separated list <CMake Language Lists>` "
"of arguments to prepend to the nsis script to run. If the arguments do not"
" start with a ``/`` or a ``-``, it will add one automatically to the "
"corresponding arguments. The command that will be run is::"
msgstr ""
"此变量是一个 :ref:`分号分隔的列表 <CMake Language Lists>` 参数，用于添加到要运行的 nsis "
"脚本。如果参数不以``/``或``-``开头，它会自动将一个添加到相应的参数。将运行的命令是："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:223
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:239
msgid ""
"where ``<preArgs>...`` is constructed from "
"``CPACK_NSIS_EXECUTABLE_PRE_ARGUMENTS`` and ``<postArgs>...``  is "
"constructed from ``CPACK_NSIS_EXECUTABLE_POST_ARGUMENTS``."
msgstr ""
"其中 ``<preArgs>...`` 由 ``CPACK_NSIS_EXECUTABLE_PRE_ARGUMENTS`` 和 "
"``<postArgs>...`` 由 ``CPACK_NSIS_EXECUTABLE_POST_ARGUMENTS`` 构建。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nsis.rst:231
msgid ""
"This variable is a :ref:`semicolon-separated list <CMake Language Lists>` "
"of arguments to append to the nsis script to run. If the arguments do not "
"start with a ``/`` or a ``-``, it will add one automatically to the "
"corresponding arguments. The command that will be run is::"
msgstr ""
"此变量是要附加到要运行的 nsis 脚本的参数的 :ref:`分号分隔列表 <CMake Language "
"Lists>`。如果参数不以``/``或``-``开头，它会自动将一个添加到相应的参数。将运行的命令是："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:2
msgid "CPack NuGet Generator"
msgstr "CPack NuGet 生成器"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:6
msgid ""
"When build a NuGet package there is no direct way to control an output "
"filename due a lack of the corresponding CLI option of NuGet, so there is "
"no :variable:`!CPACK_NUGET_PACKAGE_FILE_NAME` variable. To form the output"
" filename NuGet uses the package name and the version according to its "
"built-in rules."
msgstr ""
"构建 NuGet 包时，由于缺少 NuGet 的相应 CLI 选项，因此无法直接控制输出文件名，因此没有 "
":variable:`!CPACK_NUGET_PACKAGE_FILE_NAME` 变量。为了形成输出文件名，NuGet "
"根据其内置规则使用包名称和版本。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:11
msgid ""
"Also, be aware that including a top level directory "
"(:variable:`CPACK_INCLUDE_TOPLEVEL_DIRECTORY`) is ignored by this "
"generator."
msgstr ""
"另外，请注意包含顶级目录 (:variable:`CPACK_INCLUDE_TOPLEVEL_DIRECTORY`) 会被此生成器忽略。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:16
msgid "Variables specific to CPack NuGet generator"
msgstr "特定于 CPack NuGet 生成器的变量"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:18
msgid ""
"The CPack NuGet generator may be used to create NuGet packages using "
":module:`CPack`. The CPack NuGet generator is a :module:`CPack` generator "
"thus it uses the :variable:`!CPACK_XXX` variables used by :module:`CPack`."
msgstr ""
"CPack NuGet 生成器可用于使用 CPack 创建 NuGet 包。 CPack NuGet 生成器是一个 :module:`CPack` "
"生成器，因此它使用 :module:`CPack` 使用的 :variable:`!CPACK_XXX` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:22
msgid ""
"The CPack NuGet generator has specific features which are controlled by "
"the specifics :variable:`!CPACK_NUGET_XXX` variables. In the \"one per "
"group\" mode (see :variable:`CPACK_COMPONENTS_GROUPING`), ``<compName>`` "
"placeholder in the variables below would contain a group name (uppercased "
"and turned into a \"C\" identifier)."
msgstr ""
"CPack NuGet "
"生成器具有由特定变量控制的特定功能。在“每组一个”模式下（参见 :variable:`CPACK_COMPONENTS_GROUPING`），下面变量中的``<compName>``占位符将包含一个组名（大写并变成“C”标识符）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:28
msgid "List of CPack NuGet generator specific variables:"
msgstr "CPack NuGet 生成器特定变量列表："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:32
msgid "Enable component packaging for CPack NuGet generator"
msgstr "为 CPack NuGet 生成器启用组件打包"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:40
msgid ""
"The NUGET package name. ``CPACK_NUGET_PACKAGE_NAME`` is used as the "
"package ``id`` on nuget.org_"
msgstr "NUGET 包名称。 ``CPACK_NUGET_PACKAGE_NAME`` 在 nuget.org_ 上用作包 ``id``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:44
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:71
msgid ":variable:`CPACK_PACKAGE_NAME`"
msgstr ":variable:`CPACK_PACKAGE_NAME`"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:49
msgid "The NuGet package version."
msgstr "NuGet 包版本。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:57
msgid "A long description of the package for UI display."
msgstr "用于 UI 显示的包的详细描述。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:62
msgid ":variable:`CPACK_COMPONENT_<compName>_DESCRIPTION`,"
msgstr ":variable:`CPACK_COMPONENT_<compName>_DESCRIPTION`，"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:63
msgid ":variable:`!CPACK_COMPONENT_GROUP_<groupName>_DESCRIPTION`,"
msgstr ":variable:`!CPACK_COMPONENT_GROUP_<groupName>_DESCRIPTION`,"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:64
msgid ":variable:`CPACK_PACKAGE_DESCRIPTION`"
msgstr ":variable:`CPACK_PACKAGE_DESCRIPTION`"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:69
msgid ""
"A comma-separated list of packages authors, matching the profile names on "
"nuget.org_. These are displayed in the NuGet Gallery on nuget.org_ and are"
" used to cross-reference packages by the same authors."
msgstr ""
"以逗号分隔的包作者列表，与 nuget.org_ 上的配置文件名称相匹配。它们显示在 nuget.org_ 上的 NuGet "
"库中，用于交叉引用相同作者的包。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:75
msgid ":variable:`CPACK_PACKAGE_VENDOR`"
msgstr ":variable:`CPACK_PACKAGE_VENDOR`"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:80
msgid ""
"A human-friendly title of the package, typically used in UI displays as on"
" nuget.org_ and the Package Manager in Visual Studio. If not specified, "
"the package ID is used."
msgstr ""
"包的人性化标题，通常用于 UI 显示，如 nuget.org_ 和 Visual Studio 中的包管理器。如果未指定，则使用包 ID。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:87
msgid ":variable:`CPACK_COMPONENT_<compName>_DISPLAY_NAME`,"
msgstr ":variable:`CPACK_COMPONENT_<compName>_DISPLAY_NAME`，"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:88
msgid ":variable:`!CPACK_COMPONENT_GROUP_<groupName>_DISPLAY_NAME`"
msgstr ":variable:`!CPACK_COMPONENT_GROUP_<groupName>_DISPLAY_NAME`"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:93
msgid ""
"A comma-separated list of the package creators using profile names on "
"nuget.org_. This is often the same list as in authors, and is ignored when"
" uploading the package to nuget.org_."
msgstr ""
"使用 nuget.org_ 上的配置文件名称的包创建者的逗号分隔列表。这通常与作者中的列表相同，在将包上传到 nuget.org_ 时会被忽略。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:103
msgid ""
"An URL for the package's home page, often shown in UI displays as well as "
"nuget.org_."
msgstr "包主页的 URL，通常显示在 UI 显示以及 nuget.org_ 中。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:107
msgid ":variable:`CPACK_PACKAGE_HOMEPAGE_URL`"
msgstr ":variable:`CPACK_PACKAGE_HOMEPAGE_URL`"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:112
msgid ""
"Use a local license file "
"(:variable:`CPACK_NUGET_PACKAGE_LICENSE_FILE_NAME`) or a `SPDX license "
"identifier`_ (:variable:`CPACK_NUGET_PACKAGE_LICENSE_EXPRESSION`) instead."
msgstr ""
"请改用本地许可证文件 (:variable:`CPACK_NUGET_PACKAGE_LICENSE_FILE_NAME`) 或 `SPDX "
"许可证标识符`_ (:variable:`CPACK_NUGET_PACKAGE_LICENSE_EXPRESSION`)。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:118
msgid ""
"An URL for the package's license, often shown in UI displays as well as on"
" nuget.org_."
msgstr "包许可证的 URL，通常显示在 UI 显示以及 nuget.org_ 上。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:129
msgid ""
"A Software Package Data Exchange `SPDX license identifier`_ such as "
"``MIT``, ``BSD-3-Clause``, or ``LGPL-3.0-or-later``. In the case of a "
"choice of licenses or more complex restrictions, compound license "
"expressions may be formed using boolean operators, for example ``MIT OR "
"BSD-3-Clause``.  See the `SPDX specification`_ for guidance on forming "
"complex license expressions."
msgstr ""
"软件包数据交换`SPDX 许可标识符`_ 例如``MIT``、``BSD-3-Clause`` 或``LGPL-3.0-or-"
"later``。在选择许可证或更复杂的限制的情况下，可以使用布尔运算符形成复合许可证表达式，例如“MIT OR "
"BSD-3-Clause”。请参阅“SPDX 规范”以获取有关形成复杂许可表达式的指南。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:136
msgid ""
"If :variable:`CPACK_NUGET_PACKAGE_LICENSE_FILE_NAME` is specified, "
":variable:`!CPACK_NUGET_PACKAGE_LICENSE_EXPRESSION` is ignored."
msgstr ""
"如果指定了 :variable:`CPACK_NUGET_PACKAGE_LICENSE_FILE_NAME`，则会忽略 "
":variable:`!CPACK_NUGET_PACKAGE_LICENSE_EXPRESSION`。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:145
msgid "The package's license file in :file:`.txt` or :file:`.md` format."
msgstr "包的许可证文件，格式为 :file:`.txt` 或 :file:`.md`。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:147
msgid ""
"If :variable:`!CPACK_NUGET_PACKAGE_LICENSE_FILE_NAME` is specified, "
":variable:`!CPACK_NUGET_PACKAGE_LICENSE_EXPRESSION` is ignored."
msgstr ""
"如果指定 :variable:`!CPACK_NUGET_PACKAGE_LICENSE_FILE_NAME`，将忽略 :variable:`!CPACK_NUGET_PACKAGE_LICENSE_EXPRESSION。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:158
msgid ""
"Use a local icon file (:variable:`CPACK_NUGET_PACKAGE_ICON`) instead."
msgstr "请改用本地图标文件 (:variable:`CPACK_NUGET_PACKAGE_ICON`)。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:161
msgid ""
"An URL for a 64x64 image with transparency background to use as the icon "
"for the package in UI display."
msgstr "具有透明背景的 64x64 图像的 URL，用作 UI 显示中包的图标。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:169
msgid ""
"When set to a true value, the user will be prompted to accept the license "
"before installing the package."
msgstr "当设置为 true 值时，将提示用户在安装包之前接受许可证。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:180
msgid ""
"The filename of a 64x64 image with transparency background to use as the "
"icon for the package in UI display."
msgstr "具有透明背景的 64x64 图像的文件名，用作 UI 显示中包的图标。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:189
msgid ""
"A short description of the package for UI display. If omitted, a truncated"
" version of description is used."
msgstr "用于 UI 显示的包的简短描述。如果省略，则使用描述的截断版本。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:193
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:60
msgid ":variable:`CPACK_PACKAGE_DESCRIPTION_SUMMARY`"
msgstr ":variable:`CPACK_PACKAGE_DESCRIPTION_SUMMARY`"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:198
msgid ""
"A description of the changes made in this release of the package, often "
"used in UI like the Updates tab of the Visual Studio Package Manager in "
"place of the package description."
msgstr "此版本包中所做更改的描述，通常在 UI 中使用，例如 Visual Studio 包管理器的“更新”选项卡，代替包描述。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:208
msgid "Copyright details for the package."
msgstr "包的版权详细信息。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:218
msgid "Locale specifier for the package, for example ``en_CA``."
msgstr "包的区域设置说明符，例如 ``en_CA``。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:226
msgid ""
"A space-delimited list of tags and keywords that describe the package and "
"aid discoverability of packages through search and filtering."
msgstr "以空格分隔的标签和关键字列表，用于描述包并帮助通过搜索和过滤发现包。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:236
msgid "A list of package dependencies."
msgstr "包依赖项列表。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:244
msgid ""
"A `version specification`_ for the particular dependency, where "
"``<dependency>`` is an item of the dependency list (see above) transformed"
" with :command:`string(MAKE_C_IDENTIFIER)` command."
msgstr ""
"特定依赖项的版本规范，其中 <dependency> 是依赖项列表（见上文）中的一项，使用 "
":command:`string(MAKE_C_IDENTIFIER)` 命令进行转换。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/nuget.rst:253
msgid "Enable debug messages while executing CPack NuGet generator."
msgstr "在执行 CPack NuGet 生成器时启用调试消息。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/packagemaker.rst:2
msgid "CPack PackageMaker Generator"
msgstr "CPack PackageMaker 生成器"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/packagemaker.rst:4
msgid ""
"Removed.  This once generated PackageMaker installers, but the generator "
"has been removed since CMake 3.24.  Xcode no longer distributes the "
"PackageMaker tools.  Use the :cpack_gen:`CPack productbuild Generator` "
"instead."
msgstr ""
"删除。这曾经生成 PackageMaker 安装程序，但自 CMake 3.24 以来已删除该生成器。 Xcode 不再分发 "
"PackageMaker 工具。请改用 :cpack_gen:`CPack productbuild Generator`。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:2
msgid "CPack productbuild Generator"
msgstr "CPack 产品构建生成器"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:6
msgid "productbuild CPack generator (macOS)."
msgstr "productbuild CPack 生成器 (macOS)。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:9
msgid "Variables specific to CPack productbuild generator"
msgstr "特定于 CPack productbuild 生成器的变量"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:11
msgid ""
"The following variable is specific to installers built on Mac macOS using "
"ProductBuild:"
msgstr "以下变量特定于使用 ProductBuild 在 Mac macOS 上构建的安装程序："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:16
msgid ""
"Path to the ``productbuild(1)`` command used to generate a product archive"
" for the macOS Installer or Mac App Store.  This variable can be used to "
"override the automatically detected command (or specify its location if "
"the auto-detection fails to find it)."
msgstr ""
"用于为 macOS 安装程序或 Mac App Store 生成产品存档的 ``productbuild(1)`` "
"命令的路径。此变量可用于覆盖自动检测到的命令（或者如果自动检测未能找到它，则指定其位置）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:25
msgid ""
"Set the unique (non-localized) product identifier to be associated with "
"the product (i.e., ``com.kitware.cmake``). Any component product names "
"will be appended to this value."
msgstr "设置与产品相关联的唯一（非本地化）产品标识符（即 ``com.kitware.cmake``）。任何组件产品名称都将附加到此值。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:33
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:54
msgid "Adds a digital signature to the resulting package."
msgstr "将数字签名添加到生成的包中。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:40
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:61
msgid "Specify a specific keychain to search for the signing identity."
msgstr "指定一个特定的钥匙串来搜索签名身份。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:45
msgid ""
"Path to the ``pkgbuild(1)`` command used to generate an macOS component "
"package on macOS.  This variable can be used to override the automatically"
" detected command (or specify its location if the auto-detection fails to "
"find it)."
msgstr ""
"用于在 macOS 上生成 macOS 组件包的 ``pkgbuild(1)`` "
"命令的路径。此变量可用于覆盖自动检测到的命令（或者如果自动检测未能找到它，则指定其位置）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:66
msgid ""
"Full path to a file that will be used as the ``preinstall`` script for the"
" named ``<COMP>`` component's package, where ``<COMP>`` is the uppercased "
"component name.  No ``preinstall`` script is added if this variable is not"
" defined for a given component."
msgstr ""
"将用作命名的“<COMP>”组件包的“preinstall”脚本的文件的完整路径，其中“<COMP>”是大写的组件名称。如果没有为给定组件定义此变量，则不会添加“preinstall”脚本。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:74
msgid ""
"Full path to a file that will be used as the ``postinstall`` script for "
"the named ``<COMP>`` component's package, where ``<COMP>`` is the "
"uppercased component name.  No ``postinstall`` script is added if this "
"variable is not defined for a given component."
msgstr ""
"将用作指定的“<COMP>”组件包的“postinstall”脚本的文件的完整路径，其中“<COMP>”是大写的组件名称。如果没有为给定组件定义此变量，则不会添加"
" ``postinstall`` 脚本。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:83
msgid ""
"If specified the productbuild generator copies files from this directory "
"(including subdirectories) to the ``Resources`` directory. This is done "
"before the :variable:`CPACK_RESOURCE_FILE_WELCOME`, "
":variable:`CPACK_RESOURCE_FILE_README`, and "
":variable:`CPACK_RESOURCE_FILE_LICENSE` files are copied."
msgstr ""
"如果指定，productbuild 生成器会将文件从此目录（包括子目录）复制到“Resources”目录。这是在复制 "
"CPACK_RESOURCE_FILE_WELCOME、CPACK_RESOURCE_FILE_README 和 "
"CPACK_RESOURCE_FILE_LICENSE 文件之前完成的。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:93
msgid ""
"This option enables more granular control over where the product may be "
"installed. When it is set to true, a ``domains`` element of the following "
"form will be added to the productbuild Distribution XML:"
msgstr ""
"此选项可以更精细地控制产品的安装位置。当它设置为 true 时，以下形式的 ``domains`` 元素将被添加到 productbuild "
"Distribution XML 中："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:101
msgid ""
"The default values are as shown above, but can be overridden with "
":variable:`CPACK_PRODUCTBUILD_DOMAINS_ANYWHERE`, "
":variable:`CPACK_PRODUCTBUILD_DOMAINS_USER`, and "
":variable:`CPACK_PRODUCTBUILD_DOMAINS_ROOT`."
msgstr ""
"默认值如上所示，但可以使用 "
"CPACK_PRODUCTBUILD_DOMAINS_ANYWHERE、CPACK_PRODUCTBUILD_DOMAINS_USER 和 "
"CPACK_PRODUCTBUILD_DOMAINS_ROOT 覆盖。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:110
msgid ""
"May be used to override the ``enable_anywhere`` attribute in the "
"``domains`` element of the Distribution XML. When set to true, the product"
" can be installed at the root of any volume, including non-system volumes."
msgstr ""
"可用于覆盖 Distribution XML 的“domains”元素中的“enable_anywhere”属性。设置为 true "
"时，产品可以安装在任何卷的根目录下，包括非系统卷。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:114
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:133
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:145
msgid ""
":variable:`CPACK_PRODUCTBUILD_DOMAINS` must be set to true for this "
"variable to have any effect."
msgstr ":variable:`CPACK_PRODUCTBUILD_DOMAINS` 必须设置为 true 才能使此变量生效。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:121
msgid ""
"May be used to override the ``enable_currentUserHome`` attribute in the "
"``domains`` element of the Distribution XML. When set to true, the product"
" can be installed into the current user's home directory. Note that when "
"installing into the user's home directory, the following additional "
"requirements will apply:"
msgstr ""
"可用于覆盖 Distribution XML 的“domains”元素中的“enable_currentUserHome”属性。设置为 true "
"时，产品可以安装到当前用户的主目录中。请注意，在安装到用户的主目录时，将适用以下附加要求："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:127
msgid "The installer may not write outside the user's home directory."
msgstr "安装程序可能不会在用户的主目录之外写入。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:128
msgid ""
"The install will be performed as the current user rather than as ``root``."
" This may have ramifications for :variable:`CPACK_PREFLIGHT_<COMP>_SCRIPT`"
" and :variable:`CPACK_POSTFLIGHT_<COMP>_SCRIPT`."
msgstr ""
"安装将以当前用户身份执行，而不是以 ``root`` 身份执行。这可能会对 CPACK_PREFLIGHT_<COMP>_SCRIPT 和 "
"CPACK_POSTFLIGHT_<COMP>_SCRIPT 产生影响。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:131
msgid "Administrative privileges will not be needed to perform the install."
msgstr "执行安装不需要管理权限。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:140
msgid ""
"May be used to override the ``enable_localSystem`` attribute in the "
"``domains`` element of the Distribution XML. When set to true, the product"
" can be installed in the root directory. This should normally be set to "
"true unless the product should only be installed to the user's home "
"directory."
msgstr ""
"可用于覆盖 Distribution XML 的“domains”元素中的“enable_localSystem”属性。当设置为 true "
"时，产品可以安装在根目录中。这通常应该设置为 true 除非产品应该只安装到用户的主目录。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:149
msgid "Background Image"
msgstr "背景图"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:153
msgid ""
"This group of variables controls the background image of the generated "
"installer."
msgstr "这组变量控制生成的安装程序的背景图像。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:158
msgid ""
"Adds a background to Distribution XML if specified. The value contains the"
" path to image in ``Resources`` directory."
msgstr "如果指定，则向 Distribution XML 添加背景。该值包含“资源”目录中图像的路径。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:163
msgid ""
"Adds an ``alignment`` attribute to the background in Distribution XML. "
"Refer to Apple documentation for valid values."
msgstr "在 Distribution XML 的背景中添加一个“alignment”属性。有关有效值，请参阅 Apple 文档。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:168
msgid ""
"Adds a ``scaling`` attribute to the background in Distribution XML. Refer "
"to Apple documentation for valid values."
msgstr "在 Distribution XML 的背景中添加一个“缩放”属性。有关有效值，请参阅 Apple 文档。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:173
msgid ""
"Adds a ``mime-type`` attribute to the background in Distribution XML. The "
"option contains MIME type of an image."
msgstr "在 Distribution XML 的背景中添加一个 ``mime-type`` 属性。该选项包含图像的 MIME 类型。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:178
msgid ""
"Adds an ``uti`` attribute to the background in Distribution XML. The "
"option contains UTI type of an image."
msgstr "在 Distribution XML 的背景中添加一个 ``uti`` 属性。该选项包含图像的 UTI 类型。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:183
msgid ""
"Adds a background for the Dark Aqua theme to Distribution XML if "
"specified. The value contains the path to image in ``Resources`` "
"directory."
msgstr "如果指定，将 Dark Aqua 主题的背景添加到 Distribution XML。该值包含“资源”目录中图像的路径。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:189
msgid ""
"Does the same as :variable:`CPACK_PRODUCTBUILD_BACKGROUND_ALIGNMENT` "
"option, but for the dark theme."
msgstr "与 :variable:`CPACK_PRODUCTBUILD_BACKGROUND_ALIGNMENT` 选项相同，但用于深色主题。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:194
msgid ""
"Does the same as :variable:`CPACK_PRODUCTBUILD_BACKGROUND_SCALING` option,"
" but for the dark theme."
msgstr "与 :variable:`CPACK_PRODUCTBUILD_BACKGROUND_SCALING` 选项相同，但用于深色主题。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:199
msgid ""
"Does the same as :variable:`CPACK_PRODUCTBUILD_BACKGROUND_MIME_TYPE` "
"option, but for the dark theme."
msgstr "与 :variable:`CPACK_PRODUCTBUILD_BACKGROUND_MIME_TYPE` 选项相同，但用于深色主题。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:204
msgid ""
"Does the same as :variable:`CPACK_PRODUCTBUILD_BACKGROUND_UTI` option, but"
" for the dark theme."
msgstr "与 :variable:`CPACK_PRODUCTBUILD_BACKGROUND_UTI` 选项相同，但用于深色主题。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:208
msgid "Distribution XML Template"
msgstr "分发 XML 模板"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:210
msgid ""
"CPack uses a template file to generate the ``distribution.dist`` file used"
" internally by this package generator. Ordinarily, CMake provides the "
"template file, but projects may supply their own by placing a file called "
"``CPack.distribution.dist.in`` in one of the directories listed in the "
":variable:`CMAKE_MODULE_PATH` variable. CPack will then pick up the "
"project's template file instead of using its own."
msgstr ""
"CPack 使用模板文件生成此包生成器内部使用的 ``distribution.dist`` 文件。通常，CMake "
"会提供模板文件，但项目可以通过在 CMAKE_MODULE_PATH "
"变量中列出的目录之一中放置一个名为“CPack.distribution.dist.in”的文件来提供自己的模板文件。然后 CPack "
"将选择项目的模板文件而不是使用它自己的。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:217
msgid ""
"The ``distribution.dist`` file is generated by performing substitutions "
"similar to the :command:`configure_file` command. Any variable set when "
"CPack runs will be available for substitution using the usual ``@...@`` "
"form. The following variables are also set internally and made available "
"for substitution:"
msgstr ""
"``distribution.dist`` 文件是通过执行类似于 :command:`configure_file` 命令的替换生成的。 CPack"
" 运行时设置的任何变量都可以使用通常的 ``@...@`` 形式进行替换。以下变量也在内部设置并可用于替换："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:226
msgid "``CPACK_RESOURCE_FILE_LICENSE_NOPATH``"
msgstr "``CPACK_RESOURCE_FILE_LICENSE_NOPATH``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:224
msgid ""
"Same as :variable:`CPACK_RESOURCE_FILE_LICENSE` except without the path. "
"The named file will be available in the same directory as the generated "
"``distribution.dist`` file."
msgstr ""
"与 :variable:`CPACK_RESOURCE_FILE_LICENSE` 相同，只是没有路径。命名文件将在与生成的 "
"``distribution.dist`` 文件相同的目录中可用。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:231
msgid "``CPACK_RESOURCE_FILE_README_NOPATH``"
msgstr "``CPACK_RESOURCE_FILE_README_NOPATH``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:229
msgid ""
"Same as :variable:`CPACK_RESOURCE_FILE_README` except without the path. "
"The named file will be available in the same directory as the generated "
"``distribution.dist`` file."
msgstr ""
"与 :variable:`CPACK_RESOURCE_FILE_README` 相同，只是没有路径。命名文件将在与生成的 "
"``distribution.dist`` 文件相同的目录中可用。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:236
msgid "``CPACK_RESOURCE_FILE_WELCOME_NOPATH``"
msgstr "``CPACK_RESOURCE_FILE_WELCOME_NOPATH``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:234
msgid ""
"Same as :variable:`CPACK_RESOURCE_FILE_WELCOME` except without the path. "
"The named file will be available in the same directory as the generated "
"``distribution.dist`` file."
msgstr ""
"与 :variable:`CPACK_RESOURCE_FILE_WELCOME` 相同，只是没有路径。命名文件将在与生成的 "
"``distribution.dist`` 文件相同的目录中可用。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:242
msgid "``CPACK_APPLE_PKG_INSTALLER_CONTENT``"
msgstr "``CPACK_APPLE_PKG_INSTALLER_CONTENT``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:241
msgid ""
"This contains all the XML elements that specify installer-wide options "
"(including domain details), default backgrounds and the choices outline."
msgstr "这包含指定安装程序范围的选项（包括域详细信息）、默认背景和选择大纲的所有 XML 元素。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:248
msgid "``CPACK_PACKAGEMAKER_CHOICES``"
msgstr "``CPACK_PACKAGEMAKER_CHOICES``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/productbuild.rst:247
msgid ""
"This contains only the XML elements that specify the default backgrounds "
"and the choices outline. It does not include the installer-wide options or"
" any domain details. Use ``CPACK_APPLE_PKG_INSTALLER_CONTENT`` instead."
msgstr ""
"这仅包含指定默认背景和选择大纲的 XML 元素。它不包括安装程序范围的选项或任何域详细信息。请改用 "
"``CPACK_APPLE_PKG_INSTALLER_CONTENT``。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:2
msgid "CPack RPM Generator"
msgstr "CPack RPM 生成器"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:4
msgid "The built in (binary) CPack RPM generator (Unix only)"
msgstr "内置（二进制）CPack RPM 生成器（仅限 Unix）"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:7
msgid "Variables specific to CPack RPM generator"
msgstr "特定于 CPack RPM 生成器的变量"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:9
msgid ""
"The CPack RPM generator may be used to create RPM packages using "
":module:`CPack`. The CPack RPM generator is a :module:`CPack` generator "
"thus it uses the :variable:`!CPACK_XXX` variables used by :module:`CPack`."
msgstr ""
"CPack RPM 生成器可用于使用 CPack 创建 RPM 包。 CPack RPM 生成器是一个 :module:`CPack` "
"生成器，因此它使用 :module:`CPack` 使用的 :variable:`!CPACK_XXX` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:13
msgid ""
"The CPack RPM generator has specific features which are controlled by the "
"specifics :variable:`!CPACK_RPM_XXX` variables."
msgstr "CPack RPM 生成器具有由特定变量控制的特定功能 :variable:`!CPACK_RPM_XXX` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:16
msgid ""
":variable:`!CPACK_RPM_<COMPONENT>_XXXX` variables may be used in order to "
"have **component-specific** values.  Note however that ``<COMPONENT>`` "
"refers to the **grouping name** written in upper case. It may be either a "
"component name or a component GROUP name. Usually, those variables "
"correspond to RPM spec file entities. One may find information about spec "
"files here https://rpm.org/documentation."
msgstr ""
":variable:`!CPACK_RPM_<COMPONENT>_XXXX` "
"变量可用于获得**组件特定**值。但是请注意，``<COMPONENT>`` 指的是大写的**分组名称**。它可以是组件名称或组件 GROUP "
"名称。通常，这些变量对应于 RPM 规范文件实体。人们可以在这里找到关于规范文件的信息 https://rpm.org/documentation。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:25
msgid ""
"`<COMPONENT>` part of variables is preferred to be in upper case (e.g. if "
"component is named ``foo`` then use :variable:`!CPACK_RPM_FOO_XXXX` "
"variable name format) as is with other :variable:`!CPACK_<COMPONENT>_XXXX`"
" variables. For the purposes of back compatibility (CMake/CPack version "
"3.5 and lower) support for same cased component (e.g. ``fOo`` would be "
"used as :variable:`!CPACK_RPM_fOo_XXXX`) is still supported for variables "
"defined in older versions of CMake/CPack but is not guaranteed for "
"variables that will be added in the future. For the sake of back "
"compatibility same cased component variables also override upper cased "
"versions where both are present."
msgstr ""
"`<COMPONENT>` 部分变量最好使用大写字母（例如，如果组件名为 ``foo`` 则使用 "
":variable:`!CPACK_RPM_FOO_XXXX` 变量名格式）与其他 :variable:`!CPACK_< "
"COMPONENT>_XXXX` 变量。为了向后兼容（CMake/CPack 版本 3.5 及更低版本），对旧版本 CMake "
"中定义的变量仍然支持对相同封装组件的支持（例如，``fOo`` 将用作 :variable:`！CPACK_RPM_fOo_XXXX`） /CPack "
"但不保证将来添加的变量。为了向后兼容，相同大小写的组件变量也会覆盖两者都存在的大写版本。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:36
msgid ""
"Here are some CPack RPM generator wiki resources that are here for "
"historic reasons and are no longer maintained but may still prove useful:"
msgstr "以下是一些 CPack RPM 生成器 wiki 资源，这些资源由于历史原因而不再维护，但可能仍然有用："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:40
msgid ""
"https://gitlab.kitware.com/cmake/community/-/wikis/doc/cpack/PackageGenerators#rpm-"
"unix-only"
msgstr ""
"https://gitlab.kitware.com/cmake/community/-/wikis/doc/cpack/PackageGenerators#rpm-"
"unix-only"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:42
msgid "List of CPack RPM generator specific variables:"
msgstr "CPack RPM 生成器特定变量列表："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:46
msgid "Enable component packaging for CPack RPM generator"
msgstr "为 CPack RPM 生成器启用组件打包"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:57
msgid "The RPM package summary."
msgstr "RPM 包摘要。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:62
msgid ""
"Per-component :variable:`!CPACK_RPM_<component>_PACKAGE_SUMMARY` "
"variables."
msgstr "每个组件 :variable:`!CPACK_RPM_<component>_PACKAGE_SUMMARY` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:68
msgid "The RPM package name."
msgstr "RPM 包名称。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:73
msgid ""
"Per-component :variable:`!CPACK_RPM_<component>_PACKAGE_NAME` variables."
msgstr "每个组件 :variable:`!CPACK_RPM_<component>_PACKAGE_NAME` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:84
msgid ""
"``<CPACK_PACKAGE_FILE_NAME>[-<component>].rpm`` with spaces replaced by "
"'-'"
msgstr "``<CPACK_PACKAGE_FILE_NAME>[-<component>].rpm`` 空格替换为“-”"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:87
msgid ""
"This may be set to ``RPM-DEFAULT`` to allow ``rpmbuild`` tool to generate "
"package file name by itself. Alternatively provided package file name must"
" end with ``.rpm`` suffix."
msgstr ""
"这可以设置为 ``RPM-DEFAULT`` 以允许 ``rpmbuild`` 工具自行生成包文件名。或者，提供的包文件名必须以 ``.rpm`` "
"后缀结尾。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:93
msgid ""
"By using user provided spec file, rpm macro extensions such as for "
"generating ``debuginfo`` packages or by simply using multiple components "
"more than one rpm file may be generated, either from a single spec file or"
" from multiple spec files (each component execution produces its own spec "
"file). In such cases duplicate file names may occur as a result of this "
"variable setting or spec file content structure. Duplicate files get "
"overwritten and it is up to the packager to set the variables in a manner "
"that will prevent such errors."
msgstr ""
"通过使用用户提供的 spec 文件，可以从单个 spec 文件或多个 spec "
"文件（每个组件执行生成自己的规范文件）。在这种情况下，由于此变量设置或规范文件内容结构，可能会出现重复的文件名。重复的文件会被覆盖，打包程序将以防止此类错误的方式设置变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:106
msgid "Main component that is packaged without component suffix."
msgstr "没有组件后缀的打包的主要组件。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:111
msgid ""
"This variable can be set to any component or group name so that component "
"or group rpm package is generated without component suffix in filename and"
" package name."
msgstr "该变量可以设置为任意组件或组名，这样生成的组件或组rpm包在文件名和包名中不带组件后缀。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:119
msgid "The RPM package epoch"
msgstr "RPM 包时代"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:129
msgid "The RPM package version."
msgstr "RPM 包版本。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:137
msgid "The RPM package architecture."
msgstr "RPM 包架构。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:140
msgid "Native architecture output by ``uname -m``"
msgstr "``uname -m`` 输出的原生架构"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:142
msgid ""
"This may be set to ``noarch`` if you know you are building a ``noarch`` "
"package."
msgstr "如果你知道你正在构建一个 ``noarch`` 包，这可能被设置为 ``noarch``。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:144
msgid ""
"Per-component :variable:`!CPACK_RPM_<component>_PACKAGE_ARCHITECTURE` "
"variables."
msgstr "每个组件 :variable:`!CPACK_RPM_<component>_PACKAGE_ARCHITECTURE` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:149
msgid "The RPM package release."
msgstr "RPM 包发布。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:152
msgid "1"
msgstr "1个"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:154
msgid ""
"This is the numbering of the RPM package itself, i.e. the version of the "
"packaging and not the version of the content (see "
":variable:`CPACK_RPM_PACKAGE_VERSION`). One may change the default value "
"if the previous packaging was buggy and/or you want to put here a fancy "
"Linux distro specific numbering."
msgstr ""
"这是 RPM "
"包本身的编号，即包装的版本而不是内容的版本（参见 :variable:`CPACK_RPM_PACKAGE_VERSION`）。如果以前的包装有问题和/或您想在此处放置一个奇特的"
" Linux 发行版特定编号，则可以更改默认值。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:162
msgid ""
"This is the string that goes into the RPM ``Release:`` field. Some distros"
" (e.g. Fedora, CentOS) require ``1%{?dist}`` format and not just a number."
" ``%{?dist}`` part can be added by setting "
":variable:`CPACK_RPM_PACKAGE_RELEASE_DIST`."
msgstr ""
"这是进入 RPM ``Release:`` 字段的字符串。一些发行版（例如 Fedora、CentOS）需要 ``1%{?dist}`` "
"格式而不仅仅是一个数字。 ``%{?dist}`` 部分可以通过设置 "
":variable:`CPACK_RPM_PACKAGE_RELEASE_DIST` 添加。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:170
msgid "The dist tag that is added  RPM ``Release:`` field."
msgstr "添加 RPM ``Release:`` 字段的 dist 标签。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:175
msgid ""
"This is the reported ``%{dist}`` tag from the current distribution or "
"empty ``%{dist}`` if RPM macro is not set. If this variable is set then "
"RPM ``Release:`` field value is set to "
"``${CPACK_RPM_PACKAGE_RELEASE}%{?dist}``."
msgstr ""
"这是报告的来自当前发行版的“%{dist}”标签，如果未设置 RPM 宏，则为空“%{dist}”。如果设置了此变量，则 RPM "
"``Release:`` 字段值设置为 ``${CPACK_RPM_PACKAGE_RELEASE}%{?dist}``。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:181
msgid "The RPM package license policy."
msgstr "RPM 包许可策略。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:184
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:192
msgid "\"unknown\""
msgstr "“未知”"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:189
msgid "The RPM package group."
msgstr "RPM 包组。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:194
msgid ""
"Per-component :variable:`!CPACK_RPM_<component>_PACKAGE_GROUP` variables."
msgstr "每个组件 :variable:`!CPACK_RPM_<component>_PACKAGE_GROUP` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:199
msgid "The RPM package vendor."
msgstr "RPM 包供应商。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:202
msgid "CPACK_PACKAGE_VENDOR if set or \"unknown\""
msgstr "CPACK_PACKAGE_VENDOR 如果设置或“未知”"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:207
msgid "The projects URL."
msgstr "项目 URL。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:218
msgid "RPM package description."
msgstr "RPM 包说明。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:223
msgid ""
":variable:`CPACK_COMPONENT_<compName>_DESCRIPTION` (component based "
"installers only) if set,"
msgstr ":variable:`CPACK_COMPONENT_<compName>_DESCRIPTION`（仅基于组件的安装程序）如果设置，"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:225
msgid ":variable:`CPACK_PACKAGE_DESCRIPTION_FILE` if set, or"
msgstr ":variable:`CPACK_PACKAGE_DESCRIPTION_FILE` 如果设置，或者"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:227
msgid "``no package description available``"
msgstr "``没有可用的包描述``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:229
msgid ""
"Per-component :variable:`!CPACK_RPM_<component>_PACKAGE_DESCRIPTION` "
"variables."
msgstr "每个组件 :variable:`!CPACK_RPM_<component>_PACKAGE_DESCRIPTION` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:234
msgid "RPM compression type."
msgstr "RPM 压缩类型。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:237
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:764
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:789
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:802
msgid "(system default)"
msgstr "（系统默认）"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:239
msgid ""
"May be used to override RPM compression type to be used to build the RPM. "
"For example some Linux distribution now default to ``lzma`` or ``xz`` "
"compression whereas older cannot use such RPM. Using this one can enforce "
"compression type to be used."
msgstr ""
"可用于覆盖用于构建 RPM 的 RPM 压缩类型。例如，一些 Linux 发行版现在默认使用 ``lzma`` 或 ``xz`` "
"压缩，而旧版本不能使用这样的 RPM。使用这个可以强制使用压缩类型。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:261
msgid "RPM spec autoreq field."
msgstr "RPM spec autoreq 字段。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:266
msgid ""
"May be used to enable (``1``, ``yes``) or disable (``0``, ``no``) "
"automatic shared libraries dependency detection. Dependencies are added to"
" requires list."
msgstr "可用于启用（``1``、``yes``）或禁用（``0``、``no``）自动共享库依赖性检测。依赖项被添加到需求列表中。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:271
msgid ""
"By default automatic dependency detection is enabled by rpm generator."
msgstr "默认情况下，自动依赖检测由 rpm 生成器启用。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:276
msgid "RPM spec autoprov field."
msgstr "RPM 规范 autoprov 字段。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:281
msgid ""
"May be used to enable (``1``, ``yes``) or disable (``0``, ``no``) "
"automatic listing of shared libraries that are provided by the package. "
"Shared libraries are added to provides list."
msgstr "可用于启用（``1``、``yes``）或禁用（``0``、``no``）包提供的共享库的自动列表。共享库被添加到提供列表中。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:287
msgid "By default automatic provides detection is enabled by rpm generator."
msgstr "默认情况下，rpm 生成器启用自动提供检测。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:292
msgid "RPM spec autoreqprov field."
msgstr "RPM 规范 autoreqprov 字段。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:297
msgid ""
"Variable enables/disables autoreq and autoprov at the same time. See "
":variable:`CPACK_RPM_PACKAGE_AUTOREQ` and "
":variable:`CPACK_RPM_PACKAGE_AUTOPROV` for more details."
msgstr ""
"变量同时启用/禁用 autoreq 和 autoprov。有关详细信息，请参阅 :variable:`CPACK_RPM_PACKAGE_AUTOREQ` "
"和 :variable:`CPACK_RPM_PACKAGE_AUTOPROV`。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:303
msgid "By default automatic detection feature is enabled by rpm."
msgstr "默认情况下，自动检测功能由 rpm 启用。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:308
msgid "RPM spec requires field."
msgstr "RPM 规范需要字段。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:313
msgid ""
"May be used to set RPM dependencies (requires). Note that you must enclose"
" the complete requires string between quotes, for example:"
msgstr "可用于设置 RPM 依赖项（需要）。请注意，您必须将完整的 requires 字符串括在引号之间，例如："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:320
msgid "The required package list of an RPM file could be printed with::"
msgstr "RPM 文件所需的软件包列表可以打印为："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:327
msgid "RPM spec conflicts field."
msgstr "RPM 规范冲突字段。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:332
msgid ""
"May be used to set negative RPM dependencies (conflicts). Note that you "
"must enclose the complete requires string between quotes, for example:"
msgstr "可用于设置负 RPM 依赖性（冲突）。请注意，您必须将完整的 requires 字符串括在引号之间，例如："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:339
msgid "The conflicting package list of an RPM file could be printed with::"
msgstr "RPM 文件的冲突包列表可以打印为："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:348
msgid "RPM spec requires(pre) field."
msgstr "RPM 规范需要（预）字段。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:353
msgid ""
"May be used to set RPM preinstall dependencies (requires(pre)). Note that "
"you must enclose the complete requires string between quotes, for example:"
msgstr "可用于设置 RPM 预安装依赖项 (requires(pre))。请注意，您必须将完整的 requires 字符串括在引号之间，例如："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:365
msgid "RPM spec requires(post) field."
msgstr "RPM 规范需要（发布）字段。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:370
msgid ""
"May be used to set RPM postinstall dependencies (requires(post)). Note "
"that you must enclose the complete requires string between quotes, for "
"example:"
msgstr ""
"可用于设置 RPM 安装后依赖项 (requires(post))。请注意，您必须将完整的 requires 字符串括在引号之间，例如："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:382
msgid "RPM spec requires(postun) field."
msgstr "RPM 规范需要（postun）字段。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:387
msgid ""
"May be used to set RPM postuninstall dependencies (requires(postun)). Note"
" that you must enclose the complete requires string between quotes, for "
"example:"
msgstr ""
"可用于设置 RPM postuninstall 依赖项 (requires(postun))。请注意，您必须将完整的 requires "
"字符串括在引号之间，例如："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:400
msgid "RPM spec requires(preun) field."
msgstr "RPM 规范需要（preun）字段。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:405
msgid ""
"May be used to set RPM preuninstall dependencies (requires(preun)). Note "
"that you must enclose the complete requires string between quotes, for "
"example:"
msgstr ""
"可用于设置 RPM 预卸载依赖项 (requires(preun))。请注意，您必须将完整的 requires 字符串括在引号之间，例如："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:415
msgid "RPM spec suggest field."
msgstr "RPM 规范建议字段。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:420
msgid ""
"May be used to set weak RPM dependencies (suggests). If ``rpmbuild`` "
"doesn't support the ``Suggests`` tag, CPack will emit a warning and ignore"
" this variable. Note that you must enclose the complete requires string "
"between quotes."
msgstr ""
"可用于设置弱 RPM 依赖项（建议）。如果 ``rpmbuild`` 不支持 ``Suggests`` 标签，CPack "
"将发出警告并忽略此变量。请注意，您必须将完整的 requires 字符串括在引号之间。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:428
msgid "RPM spec provides field."
msgstr "RPM 规范提供字段。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:433
msgid ""
"May be used to set RPM dependencies (provides). The provided package list "
"of an RPM file could be printed with::"
msgstr "可用于设置 RPM 依赖项（提供）。提供的 RPM 文件包列表可以打印为："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:441
msgid "RPM spec obsoletes field."
msgstr "RPM 规范废弃字段。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:446
msgid "May be used to set RPM packages that are obsoleted by this one."
msgstr "可用于设置被该包废弃的 RPM 包。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:450
msgid "build a relocatable RPM."
msgstr "构建可重定位的 RPM。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:453
msgid "CPACK_PACKAGE_RELOCATABLE"
msgstr "CPACK_PACKAGE_RELOCATABLE"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:455
msgid ""
"If this variable is set to TRUE or ON, the CPack RPM generator will try to"
" build a relocatable RPM package. A relocatable RPM may be installed "
"using::"
msgstr ""
"如果此变量设置为 TRUE 或 ON，CPack RPM 生成器将尝试构建可重定位的 RPM 包。可以使用以下方式安装可重定位的 RPM："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:461
msgid ""
"in order to install it at an alternate place see rpm(8). Note that "
"currently this may fail if :variable:`CPACK_SET_DESTDIR` is set to ``ON``."
" If :variable:`CPACK_SET_DESTDIR` is set then you will get a warning "
"message but if there is file installed with absolute path you'll get "
"unexpected behavior."
msgstr ""
"要在其他地方安装它，请参阅 rpm(8)。请注意，如果 CPACK_SET_DESTDIR 设置为 ON，目前这可能会失败。如果设置了 "
":variable:`CPACK_SET_DESTDIR` 那么您将收到一条警告消息，但如果安装了使用绝对路径的文件，您将获得意外行为。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:468
msgid "Use :variable:`CPACK_RPM_SPEC_MORE_DEFINE` instead."
msgstr "请改用 :variable:`CPACK_RPM_SPEC_MORE_DEFINE`。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:473
msgid ""
"May be used to override the ``__spec_install_post`` section within the "
"generated spec file.  This affects the install step during package "
"creation, not during package installation.  For adding operations to be "
"performed during package installation, use "
":variable:`CPACK_RPM_POST_INSTALL_SCRIPT_FILE` instead."
msgstr ""
"可用于覆盖生成的规范文件中的 ``__spec_install_post`` "
"部分。这会影响包创建期间的安装步骤，而不是包安装期间的安装步骤。要在包安装期间添加要执行的操作，请改用 "
":variable:`CPACK_RPM_POST_INSTALL_SCRIPT_FILE`。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:481
msgid "RPM extended spec definitions lines."
msgstr "RPM 扩展规范定义行。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:486
#, python-format
msgid ""
"May be used to add any ``%define`` lines to the generated spec file.  An "
"example of its use is to prevent stripping of executables (but note that "
"this may also disable other default post install processing):"
msgstr ""
"可用于将任何 ``%define`` "
"行添加到生成的规范文件中。它的一个使用示例是防止剥离可执行文件（但请注意，这也可能会禁用其他默认的安装后处理）："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:496
msgid "Toggle CPack RPM generator debug output."
msgstr "切换 CPack RPM 生成器调试输出。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:501
msgid ""
"May be set when invoking cpack in order to trace debug information during "
"CPack RPM run. For example you may launch CPack like this::"
msgstr "可以在调用 cpack 时设置，以便在 CPack RPM 运行期间跟踪调试信息。例如，您可以像这样启动 CPack::"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:509
msgid "A user provided spec file."
msgstr "用户提供的规范文件。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:514
msgid ""
"May be set by the user in order to specify a USER binary spec file to be "
"used by the CPack RPM generator instead of generating the file. The "
"specified file will be processed by configure_file( @ONLY)."
msgstr ""
"可以由用户设置，以指定 CPack RPM 生成器使用的 USER 二进制规范文件，而不是生成文件。指定的文件将由 "
"configure_file(@ONLY) 处理。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:520
msgid "Spec file template."
msgstr "规范文件模板。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:525
msgid ""
"If set CPack will generate a template for USER specified binary spec file "
"and stop with an error. For example launch CPack like this::"
msgstr "如果设置 CPack 将为 USER 指定的二进制规范文件生成模板并因错误而停止。例如像这样启动 CPack::"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:530
msgid ""
"The user may then use this file in order to hand-craft is own binary spec "
"file which may be used with :variable:`CPACK_RPM_USER_BINARY_SPECFILE`."
msgstr ""
"然后用户可以使用此文件来手工制作自己的二进制规范文件，该文件可以与 "
":variable:`CPACK_RPM_USER_BINARY_SPECFILE` 一起使用。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:538
msgid "Path to file containing pre install/uninstall/transaction script."
msgstr "包含预安装/卸载/事务脚本的文件路径。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:543
msgid ""
"May be used to embed a pre installation/uninstallation/transaction script "
"in the spec file. The referred script file (or both) will be read and "
"directly put after the ``%pre`` or ``%preun`` section If "
":variable:`CPACK_RPM_COMPONENT_INSTALL` is set to ON the "
"install/uninstall/transaction script for each component can be overridden "
"with :variable:`!CPACK_RPM_<COMPONENT>_PRE_INSTALL_SCRIPT_FILE`, "
":variable:`!CPACK_RPM_<COMPONENT>_PRE_UNINSTALL_SCRIPT_FILE`, and "
":variable:`!CPACK_RPM_<COMPONENT>_PRE_TRANS_SCRIPT_FILE` One may verify "
"which scriptlet has been included with::"
msgstr ""
"可用于在规范文件中嵌入预安装/卸载/事务脚本。引用的脚本文件（或两者）将被读取并直接放在 ``%pre`` 或 ``%preun`` "
"部分之后组件可以被 :variable:`!CPACK_RPM_<COMPONENT>_PRE_INSTALL_SCRIPT_FILE`, "
":variable:`!CPACK_RPM_<COMPONENT>_PRE_UNINSTALL_SCRIPT_FILE` 和 "
":variable:`!CPACK_RPM_<COMPONENT>_PRE_TRANS_SCRIPT_FILE` 覆盖被包含在 ::"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:555
msgid "The :variable:`!CPACK_RPM_PRE_TRANS_SCRIPT_FILE` variable."
msgstr ":variable:`!CPACK_RPM_PRE_TRANS_SCRIPT_FILE` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:562
msgid "Path to file containing post install/uninstall/transaction script."
msgstr "包含安装后/卸载/事务脚本的文件路径。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:567
msgid ""
"May be used to embed a post installation/uninstallation/transaction script"
" in the spec file. The referred script file (or both) will be read and "
"directly put after the ``%post`` or ``%postun`` section. If "
":variable:`CPACK_RPM_COMPONENT_INSTALL` is set to ON the "
"install/uninstall/transaction script for each component can be overridden "
"with :variable:`!CPACK_RPM_<COMPONENT>_POST_INSTALL_SCRIPT_FILE`, "
":variable:`!CPACK_RPM_<COMPONENT>_POST_UNINSTALL_SCRIPT_FILE`, and "
":variable:`!CPACK_RPM_<COMPONENT>_POST_TRANS_SCRIPT_FILE` One may verify "
"which scriptlet has been included with::"
msgstr ""
"可用于在规范文件中嵌入安装后/卸载/事务脚本。引用的脚本文件（或两者）将被读取并直接放在 ``%post`` 或 ``%postun`` "
"部分之后。如果 :variable:`CPACK_RPM_COMPONENT_INSTALL` 设置为 ON，则每个组件的安装/卸载/事务脚本可以被"
" "
":variable:`!CPACK_RPM_<COMPONENT>_POST_INSTALL_SCRIPT_FILE`、 :variable:`!CPACK_RPM_<COMPONENT>_POST_UNINSTALL_SCRIPT_FILE`"
" 和 :variable:`!CPACK_RPM_<COMPONENT>_POST_TRANS_SCRIPT_FILE` 可以验证哪个 "
"scriptlet 已包含在 ::"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:579
msgid "The :variable:`!CPACK_RPM_POST_TRANS_SCRIPT_FILE` variable."
msgstr ":variable:`!CPACK_RPM_POST_TRANS_SCRIPT_FILE` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:588
#, python-format
msgid ""
"May be used to explicitly specify ``%(<directive>)`` file line in the spec"
" file. Like ``%config(noreplace)`` or any other directive that be found in"
" the ``%files`` section. Since the CPack RPM generator is generating the "
"list of files (and directories) the user specified files of the "
":variable:`!CPACK_RPM_<COMPONENT>_USER_FILELIST` list will be removed from"
" the generated list. If referring to directories do not add a trailing "
"slash."
msgstr ""
"可用于在规范文件中明确指定 ``%(<directive>)`` 文件行。像 ``%config(noreplace)`` 或在 "
"``%files`` 部分中找到的任何其他指令。由于 CPack RPM 生成器正在生成文件（和目录）列表，用户指定的 "
":variable:`!CPACK_RPM_<COMPONENT>_USER_FILELIST` "
"列表的文件将从生成的列表中删除。如果引用目录，请不要添加尾部斜杠。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:596
#, python-format
msgid ""
"You can have multiple directives per line, as in ``%attr(600,root,root) "
"%config(noreplace)``."
msgstr "每行可以有多个指令，如“%attr(600,root,root) %config(noreplace)”。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:602
msgid "RPM changelog file."
msgstr "RPM 更新日志文件。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:607
#, python-format
msgid ""
"May be used to embed a changelog in the spec file. The referred file will "
"be read and directly put after the ``%changelog`` section."
msgstr "可用于在规范文件中嵌入变更日志。引用的文件将被读取并直接放在 ``%changelog`` 部分之后。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:613
msgid "list of path to be excluded."
msgstr "要排除的路径列表。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:628
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:935
msgid "The following paths are excluded by default:"
msgstr "默认排除以下路径："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:618
msgid "``/etc``"
msgstr "``/等等``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:619
msgid "``/etc/init.d``"
msgstr "``/etc/init.d``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:620
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:933
msgid "``/usr``"
msgstr "``/usr``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:621
msgid "``/usr/bin``"
msgstr "``/usr/bin``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:622
msgid "``/usr/include``"
msgstr "``/usr/include``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:623
msgid "``/usr/lib``"
msgstr "``/usr/lib``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:624
msgid "``/usr/libx32``"
msgstr "``/usr/libx32``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:625
msgid "``/usr/lib64``"
msgstr "``/usr/lib64``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:626
msgid "``/usr/share``"
msgstr "``/usr/共享``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:627
msgid "``/usr/share/aclocal``"
msgstr "``/usr/share/aclocal``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:628
msgid "``/usr/share/doc``"
msgstr "``/usr/share/doc``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:630
msgid ""
"May be used to exclude path (directories or files) from the auto-generated"
" list of paths discovered by CPack RPM. The default value contains a "
"reasonable set of values if the variable is not defined by the user. If "
"the variable is defined by the user then the CPack RPM generator will NOT "
"any of the default path. If you want to add some path to the default list "
"then you can use :variable:`CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST_ADDITION`"
" variable."
msgstr ""
"可用于从 CPack RPM 发现的自动生成的路径列表中排除路径（目录或文件）。如果用户未定义变量，则默认值包含一组合理的值。如果变量由用户定义，则"
" CPack RPM 生成器将不会使用任何默认路径。如果您想向默认列表添加一些路径，则可以使用 "
"CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST_ADDITION 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:637
msgid "Added ``/usr/share/aclocal`` to the default list of excludes."
msgstr "将 ``/usr/share/aclocal`` 添加到默认的排除列表中。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:642
msgid "additional list of path to be excluded."
msgstr "要排除的附加路径列表。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:647
msgid ""
"May be used to add more exclude path (directories or files) from the "
"initial default list of excluded paths. See "
":variable:`CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST`."
msgstr ""
"可用于从初始默认排除路径列表中添加更多排除路径（目录或文件）。请参阅 :variable:`CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST`。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:655
msgid "Packages relocation paths list."
msgstr "包重定位路径列表。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:660
msgid ""
"May be used to specify more than one relocation path per relocatable RPM. "
"Variable contains a list of relocation paths that if relative are prefixed"
" by the value of :variable:`CPACK_RPM_<COMPONENT>_PACKAGE_PREFIX` or by "
"the value of :variable:`CPACK_PACKAGING_INSTALL_PREFIX` if the component "
"version is not provided. Variable is not component based as its content "
"can be used to set a different path prefix for e.g. binary dir and "
"documentation dir at the same time. Only prefixes that are required by a "
"certain component are added to that component - component must contain at "
"least one file/directory/symbolic link with "
":variable:`CPACK_RPM_RELOCATION_PATHS` prefix for a certain relocation "
"path to be added. Package will not contain any relocation paths if there "
"are no files/directories/symbolic links on any of the provided prefix "
"locations. Packages that either do not contain any relocation paths or "
"contain files/directories/symbolic links that are outside relocation paths"
" print out an :command:`AUTHOR_WARNING <message>` that RPM will be "
"partially relocatable."
msgstr ""
"可用于为每个可重定位 RPM 指定多个重定位路径。变量包含重定位路径列表，如果相对路径以 "
":variable:`CPACK_RPM_<COMPONENT>_PACKAGE_PREFIX` 的值作为前缀，或者如果未提供组件版本，则以 "
":variable:`CPACK_PACKAGING_INSTALL_PREFIX` "
"的值作为前缀。变量不是基于组件的，因为它的内容可用于设置不同的路径前缀，例如二进制目录和文档目录在同一时间。仅将特定组件所需的前缀添加到该组件 - "
"组件必须包含至少一个文件/目录/符号链接，并带有 :variable:`CPACK_RPM_RELOCATION_PATHS` "
"前缀以添加特定的重定位路径。如果在任何提供的前缀位置上没有文件/目录/符号链接，包将不包含任何重定位路径。不包含任何重定位路径或包含位于重定位路径之外的文件/目录/符号链接的包会打印出一个 :command:`AUTHOR_WARNING"
" <消息>`，RPM 将是部分可重定位的。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:680
msgid "Per component relocation path install prefix."
msgstr "每个组件重定位路径安装前缀。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:683
msgid ":variable:`CPACK_PACKAGING_INSTALL_PREFIX`"
msgstr ":variable:`CPACK_PACKAGING_INSTALL_PREFIX`"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:685
msgid ""
"May be used to set per component "
":variable:`CPACK_PACKAGING_INSTALL_PREFIX` for relocatable RPM packages."
msgstr "可用于为可重定位 RPM 包的每个组件设置 CPACK_PACKAGING_INSTALL_PREFIX。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:693
msgid "Removal of default install prefix from relocation paths list."
msgstr "从重定位路径列表中删除默认安装前缀。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:696
msgid ""
":variable:`CPACK_PACKAGING_INSTALL_PREFIX` or "
":variable:`CPACK_RPM_<COMPONENT>_PACKAGE_PREFIX` are treated as one of "
"relocation paths"
msgstr ""
":variable:`CPACK_PACKAGING_INSTALL_PREFIX` 或 "
":variable:`CPACK_RPM_<COMPONENT>_PACKAGE_PREFIX` 被视为重定位路径之一"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:700
msgid ""
"May be used to remove :variable:`CPACK_PACKAGING_INSTALL_PREFIX` and "
":variable:`CPACK_RPM_<COMPONENT>_PACKAGE_PREFIX` from relocatable RPM "
"prefix paths."
msgstr ""
"可用于从可重定位的 RPM 前缀路径中删除 :variable:`CPACK_PACKAGING_INSTALL_PREFIX` 和 "
":variable:`CPACK_RPM_<COMPONENT>_PACKAGE_PREFIX`。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:721
msgid ""
"Regular expressions that are added by default were taken from ``brp-"
"compress`` RPM macro:"
msgstr "默认添加的正则表达式取自 ``brp-compress`` RPM 宏："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:711
msgid "``/usr/man/man.*``"
msgstr "``/usr/man/man.*``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:712
msgid "``/usr/man/.*/man.*``"
msgstr "``/usr/man/.*/man.*``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:713
msgid "``/usr/info.*``"
msgstr "``/usr/info.*``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:714
msgid "``/usr/share/man/man.*``"
msgstr "``/usr/share/man/man.*``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:715
msgid "``/usr/share/man/.*/man.*``"
msgstr "``/usr/share/man/.*/man.*``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:716
msgid "``/usr/share/info.*``"
msgstr "``/usr/share/info.*``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:717
msgid "``/usr/kerberos/man.*``"
msgstr "``/usr/kerberos/man.*``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:718
msgid "``/usr/X11R6/man/man.*``"
msgstr "``/usr/X11R6/man/man.*``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:719
msgid "``/usr/lib/perl5/man/man.*``"
msgstr "``/usr/lib/perl5/man/man.*``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:720
msgid "``/usr/share/doc/.*/man/man.*``"
msgstr "``/usr/share/doc/.*/man/man.*``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:721
msgid "``/usr/lib/.*/man/man.*``"
msgstr "``/usr/lib/.*/man/man.*``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:723
msgid ""
"May be used to set additional man dirs that could potentially be "
"compressed by brp-compress RPM macro. Variable content must be a list of "
"regular expressions that point to directories containing man files or to "
"man files directly. Note that in order to compress man pages a path must "
"also be present in brp-compress RPM script and that brp-compress script "
"must be added to RPM configuration by the operating system."
msgstr ""
"可用于设置额外的 man 目录，这些目录可能被 brp-compress RPM 宏压缩。变量内容必须是指向包含 man 文件的目录或直接指向 "
"man 文件的正则表达式列表。请注意，为了压缩手册页，brp-compress RPM 脚本中还必须存在一个路径，并且操作系统必须将 brp-"
"compress 脚本添加到 RPM 配置中。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:735
msgid "default user ownership of RPM content"
msgstr "RPM 内容的默认用户所有权"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:738
msgid "``root``"
msgstr "``根``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:740
msgid ""
"Value should be user name and not UID. Note that ``<compName>`` must be in"
" upper-case."
msgstr "值应该是用户名而不是 UID。请注意，``<compName>`` 必须大写。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:748
msgid "default group ownership of RPM content"
msgstr "RPM 内容的默认组所有权"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:751
msgid "root"
msgstr "根"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:753
msgid ""
"Value should be group name and not GID. Note that ``<compName>`` must be "
"in upper-case."
msgstr "值应该是组名而不是 GID。请注意，``<compName>`` 必须大写。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:761
msgid "default permissions used for packaged files"
msgstr "用于打包文件的默认权限"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:766
msgid "Accepted values are lists with PERMISSIONS. Valid permissions are:"
msgstr "接受的值是具有 PE​​RMISSIONS 的列表。有效权限是："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:769
msgid "``OWNER_READ``"
msgstr "``OWNER_READ``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:770
msgid "``OWNER_WRITE``"
msgstr "``OWNER_WRITE``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:771
msgid "``OWNER_EXECUTE``"
msgstr "``OWNER_EXECUTE``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:772
msgid "``GROUP_READ``"
msgstr "``GROUP_READ``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:773
msgid "``GROUP_WRITE``"
msgstr "``GROUP_WRITE``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:774
msgid "``GROUP_EXECUTE``"
msgstr "``GROUP_EXECUTE``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:775
msgid "``WORLD_READ``"
msgstr "``世界阅读``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:776
msgid "``WORLD_WRITE``"
msgstr "``WORLD_WRITE``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:777
msgid "``WORLD_EXECUTE``"
msgstr "``世界执行``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:779
msgid "Note that ``<compName>`` must be in upper-case."
msgstr "请注意，``<compName>`` 必须大写。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:786
msgid "default permissions used for packaged directories"
msgstr "用于打包目录的默认权限"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:791
msgid ""
"Accepted values are lists with PERMISSIONS. Valid permissions are the same"
" as for :variable:`CPACK_RPM_DEFAULT_FILE_PERMISSIONS`. Note that "
"``<compName>`` must be in upper-case."
msgstr ""
"接受的值是具有 PE​​RMISSIONS 的列表。有效权限与 CPACK_RPM_DEFAULT_FILE_PERMISSIONS "
"相同。请注意，``<compName>`` 必须大写。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:799
msgid "force execute permissions on programs and shared libraries"
msgstr "强制执行程序和共享库的权限"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:804
msgid ""
"Force set owner, group and world execute permissions on programs and "
"shared libraries. This can be used for creating valid rpm packages on "
"systems such as Debian where shared libraries do not have execute "
"permissions set."
msgstr "强制设置所有者、组和世界对程序和共享库的执行权限。这可用于在共享库未设置执行权限的系统（例如 Debian）上创建有效的 rpm 包。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:810
msgid ""
"Programs and shared libraries without execute permissions are ignored "
"during separation of debug symbols from the binary for debuginfo packages."
msgstr "在将调试符号与调试信息包的二进制文件分开时，将忽略没有执行权限的程序和共享库。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:814
msgid "Packaging of Symbolic Links"
msgstr "符号链接的打包"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:818
msgid "The CPack RPM generator supports packaging of symbolic links:"
msgstr "CPack RPM 生成器支持符号链接的打包："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:827
msgid ""
"Symbolic links will be optimized (paths will be shortened if possible) "
"before being added to the package or if multiple relocation paths are "
"detected, a post install symlink relocation script will be generated."
msgstr "符号链接将在添加到包之前进行优化（如果可能，路径将被缩短），或者如果检测到多个重定位路径，将生成安装后符号链接重定位脚本。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:831
msgid ""
"Symbolic links may point to locations that are not packaged by the same "
"package (either a different component or even not packaged at all) but "
"those locations will be treated as if they were a part of the package "
"while determining if symlink should be either created or present in a post"
" install script - depending on relocation paths."
msgstr ""
"符号链接可能指向未由同一包打包的位置（不同的组件或什至根本未打包），但这些位置将被视为包的一部分，同时确定是否应创建符号链接或出现在安装后脚本中 -"
" 取决于重定位路径。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:837
msgid ""
"Symbolic links that point to locations outside packaging path produce a "
"warning and are treated as non relocatable permanent symbolic links. "
"Previous versions of CMake produced an error in this case."
msgstr "指向打包路径外部位置的符号链接会产生警告，并被视为不可重定位的永久符号链接。在这种情况下，以前版本的 CMake 会产生错误。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:842
msgid "Currently there are a few limitations though:"
msgstr "目前有一些限制："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:844
msgid ""
"For component based packaging component interdependency is not checked "
"when processing symbolic links. Symbolic links pointing to content of a "
"different component are treated the same way as if pointing to location "
"that will not be packaged."
msgstr "对于基于组件的打包，在处理符号链接时不检查组件相互依赖性。指向不同组件内容的符号链接的处理方式与指向不会打包的位置的方式相同。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:849
msgid ""
"Symbolic links pointing to a location through one or more intermediate "
"symbolic links will not be handled differently - if the intermediate "
"symbolic link(s) is also on a relocatable path, relocating it during "
"package installation may cause initial symbolic link to point to an "
"invalid location."
msgstr ""
"通过一个或多个中间符号链接指向某个位置的符号链接将不会被不同地处理 - "
"如果中间符号链接也在可重定位路径上，则在包安装期间重定位它可能会导致初始符号链接指向无效位置."

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:860
msgid ""
"Debuginfo packages contain debug symbols and sources for debugging "
"packaged binaries."
msgstr "Debuginfo 包包含用于调试打包的二进制文件的调试符号和源代码。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:863
msgid "Debuginfo RPM packaging has its own set of variables:"
msgstr "Debuginfo RPM 打包有它自己的一组变量："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:868
msgid "Enable generation of debuginfo RPM package(s)."
msgstr "启用 debuginfo RPM 包的生成。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:878
msgid ""
"Additionally, if :variable:`CPACK_STRIP_FILES` is set, the files will be "
"stripped before they get to the RPM generator, so will not contain debug "
"symbols and a debuginfo package will not get built. Do not use with "
":variable:`CPACK_STRIP_FILES`."
msgstr ""
"此外，如果设置了 :variable:`CPACK_STRIP_FILES`，文件将在到达 RPM "
"生成器之前被剥离，因此不会包含调试符号，并且不会构建 debuginfo 包。不要与 :variable:`CPACK_STRIP_FILES` "
"一起使用。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:884
msgid ""
"Packages generated from packages without binary files, with binary files "
"but without execute permissions or without debug symbols will cause "
"packaging termination."
msgstr "从没有二进制文件、有二进制文件但没有执行权限或没有调试符号的包生成的包将导致打包终止。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:890
msgid ""
"Provides locations of root directories of source files from which binaries"
" were built."
msgstr "提供构建二进制文件的源文件的根目录位置。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:893
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:911
msgid "Yes if :variable:`CPACK_RPM_DEBUGINFO_PACKAGE` is set"
msgstr "是，如果设置了 :variable:`CPACK_RPM_DEBUGINFO_PACKAGE`"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:898
msgid ""
"For CMake project :variable:`CPACK_BUILD_SOURCE_DIRS` is set by default to"
" point to :variable:`CMAKE_SOURCE_DIR` and :variable:`CMAKE_BINARY_DIR` "
"paths."
msgstr ""
"对于 CMake 项目 :variable:`CPACK_BUILD_SOURCE_DIRS` 默认设置为指向 :variable:`CMAKE_SOURCE_DIR` "
"和 :variable:`CMAKE_BINARY_DIR` 路径。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:903
msgid ""
"Sources with path prefixes that do not fall under any location provided "
"with :variable:`CPACK_BUILD_SOURCE_DIRS` will not be present in debuginfo "
"package."
msgstr "路径前缀不属于 CPACK_BUILD_SOURCE_DIRS 提供的任何位置的源将不会出现在 debuginfo 包中。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:909
msgid ""
"Prefix of location where sources will be placed during package "
"installation."
msgstr "在包安装期间放置源的位置的前缀。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:912
msgid ""
"``/usr/src/debug/${CPACK_PACKAGE_FILE_NAME}`` and for component packaging "
"``/usr/src/debug/${CPACK_PACKAGE_FILE_NAME}-<component>``"
msgstr ""
"``/usr/src/debug/${CPACK_PACKAGE_FILE_NAME}`` "
"和组件打包``/usr/src/debug/${CPACK_PACKAGE_FILE_NAME}-<component>``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:917
msgid ""
"Each source path prefix is additionally suffixed by ``src_<index>`` where "
"index is index of the path used from :variable:`CPACK_BUILD_SOURCE_DIRS` "
"variable. This produces "
"``${CPACK_RPM_BUILD_SOURCE_DIRS_PREFIX}/src_<index>`` replacement path. "
"Limitation is that replaced path part must be shorter or of equal length "
"than the length of its replacement. If that is not the case either "
":variable:`CPACK_RPM_BUILD_SOURCE_DIRS_PREFIX` variable has to be set to a"
" shorter path or source directories must be placed on a longer path."
msgstr ""
"每个源路径前缀都附加了 ``src_<index>`` 后缀，其中 index 是从 CPACK_BUILD_SOURCE_DIRS "
"变量使用的路径的索引。这会产生 ``${CPACK_RPM_BUILD_SOURCE_DIRS_PREFIX}/src_<index>`` "
"替换路径。限制是被替换的路径部分必须比其替换的长度更短或相等。如果不是这种情况，CPACK_RPM_BUILD_SOURCE_DIRS_PREFIX"
" 变量必须设置为较短的路径，或者源目录必须放在较长的路径上。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:928
msgid ""
"Directories containing sources that should be excluded from debuginfo "
"packages."
msgstr "包含应从调试信息包中排除的源的目录。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:934
msgid "``/usr/src``"
msgstr "``/usr/src``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:935
msgid "``/usr/src/debug``"
msgstr "``/usr/src/调试``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:937
msgid ""
"Listed paths are owned by other RPM packages and should therefore not be "
"deleted on debuginfo package uninstallation."
msgstr "列出的路径由其他 RPM 包拥有，因此不应在 debuginfo 包卸载时删除。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:942
msgid ""
"Paths that should be appended to "
":variable:`CPACK_RPM_DEBUGINFO_EXCLUDE_DIRS` for exclusion."
msgstr "应附加到 CPACK_RPM_DEBUGINFO_EXCLUDE_DIRS 以进行排除的路径。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:952
msgid ""
"Create a single debuginfo package even if components packaging is set."
msgstr "即使设置了组件打包，也创建单个 debuginfo 包。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:957
msgid ""
"When this variable is enabled it produces a single debuginfo package even "
"if component packaging is enabled."
msgstr "启用此变量后，即使启用了组件打包，它也会生成单个 debuginfo 包。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:960
msgid ""
"When using this feature in combination with components packaging and there"
" is more than one component this variable requires "
":variable:`CPACK_RPM_MAIN_COMPONENT` to be set."
msgstr "将此功能与组件打包结合使用时，并且存在多个组件时，此变量需要设置 :variable:`CPACK_RPM_MAIN_COMPONENT`。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:966
msgid ""
"If none of the :variable:`CPACK_RPM_<component>_DEBUGINFO_PACKAGE` "
"variables is set then :variable:`CPACK_RPM_DEBUGINFO_PACKAGE` is "
"automatically set to ``ON`` when "
":variable:`CPACK_RPM_DEBUGINFO_SINGLE_PACKAGE` is set."
msgstr ""
"如果没有设置 :variable:`CPACK_RPM_<component>_DEBUGINFO_PACKAGE` 变量，那么 "
":variable:`CPACK_RPM_DEBUGINFO_PACKAGE` 会在 "
":variable:`CPACK_RPM_DEBUGINFO_SINGLE_PACKAGE` 设置时自动设置为 ``ON``。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:975
msgid "Debuginfo package file name."
msgstr "调试信息包文件名。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:978
msgid "rpmbuild tool generated package file name"
msgstr "rpmbuild 工具生成的包文件名"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:980
msgid ""
"Alternatively provided debuginfo package file name must end with ``.rpm`` "
"suffix and should differ from file names of other generated packages."
msgstr "或者，提供的 debuginfo 包文件名必须以 ``.rpm`` 后缀结尾，并且应该与其他生成的包的文件名不同。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:983
msgid ""
"Variable may contain ``@cpack_component@`` placeholder which will be "
"replaced by component name if component packaging is enabled otherwise it "
"deletes the placeholder."
msgstr "变量可能包含“@cpack_component@”占位符，如果启用组件打包，它将被组件名称替换，否则它会删除占位符。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:987
msgid ""
"Setting the variable to ``RPM-DEFAULT`` may be used to explicitly set "
"filename generation to default."
msgstr "将变量设置为“RPM-DEFAULT”可用于将文件名生成显式设置为默认值。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:992
msgid ""
":variable:`CPACK_RPM_FILE_NAME` also supports rpmbuild tool generated "
"package file name - disabled by default but can be enabled by setting the "
"variable to ``RPM-DEFAULT``."
msgstr ""
":variable:`CPACK_RPM_FILE_NAME` 还支持 rpmbuild 工具生成的包文件名 - "
"默认情况下禁用，但可以通过将变量设置为 ``RPM-DEFAULT`` 来启用。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:997
msgid "Packaging of sources (SRPM)"
msgstr "资源打包 (SRPM)"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:1001
msgid ""
"SRPM packaging is enabled by setting :variable:`CPACK_RPM_PACKAGE_SOURCES`"
" variable while usually using :variable:`CPACK_INSTALLED_DIRECTORIES` "
"variable to provide directory containing CMakeLists.txt and source files."
msgstr ""
"通过设置 CPACK_RPM_PACKAGE_SOURCES 变量启用 SRPM 打包，同时通常使用 "
"CPACK_INSTALLED_DIRECTORIES 变量提供包含 CMakeLists.txt 和源文件的目录。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:1005
msgid "For CMake projects SRPM package would be produced by executing::"
msgstr "对于 CMake 项目，SRPM 包将通过执行来生成："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:1011
msgid ""
"Produced SRPM package is expected to be built with :manual:`cmake(1)` "
"executable and packaged with :manual:`cpack(1)` executable so "
"CMakeLists.txt has to be located in root source directory and must be able"
" to generate binary rpm packages by executing :option:`cpack -G` command. "
"The two executables as well as rpmbuild must also be present when "
"generating binary rpm packages from the produced SRPM package."
msgstr ""
"生成的 SRPM 包预计将使用 :manual:`cmake(1)` 可执行文件构建并与 :manual:`cpack(1)` 可执行文件打包，因此"
" CMakeLists.txt 必须位于根源目录中并且必须能够生成通过执行 :option:`cpack -G` 命令来生成二进制 rpm "
"包。当从生成的 SRPM 包生成二进制 rpm 包时，这两个可执行文件以及 rpmbuild 也必须存在。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:1018
msgid ""
"Once the SRPM package is generated it can be used to generate binary "
"packages by creating a directory structure for rpm generation and "
"executing rpmbuild tool::"
msgstr "一旦生成了 SRPM 包，就可以通过创建用于 rpm 生成的目录结构和执行 rpmbuild 工具来生成二进制包："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:1025
msgid ""
"Generated packages will be located in build_dir/RPMS directory or its sub "
"directories."
msgstr "生成的包将位于 build_dir/RPMS 目录或其子目录中。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:1030
msgid ""
"SRPM package internally uses CPack/RPM generator to generate binary "
"packages so CMakeScripts.txt can decide during the SRPM to binary rpm "
"generation step what content the package(s) should have as well as how "
"they should be packaged (monolithic or components). CMake can decide this "
"for e.g. by reading environment variables set by the package manager "
"before starting the process of generating binary rpm packages. This way a "
"single SRPM package can be used to produce different binary rpm packages "
"on different platforms depending on the platform's packaging rules."
msgstr ""
"SRPM 包在内部使用 CPack/RPM 生成器生成二进制包，因此 CMakeScripts.txt 可以在 SRPM 到二进制 rpm "
"生成步骤中决定包应该包含哪些内容以及它们应该如何打包（整体或组件）。 CMake 可以决定这个，例如通过在开始生成二进制 rpm "
"包的过程之前读取包管理器设置的环境变量。这样，根据平台的打包规则，可以使用单个 SRPM 包在不同平台上生成不同的二进制 rpm 包。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:1039
msgid "Source RPM packaging has its own set of variables:"
msgstr "源 RPM 打包有它自己的一组变量："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:1043
msgid ""
"Should the content be packaged as a source rpm (default is binary rpm)."
msgstr "内容是否应打包为源 rpm（默认为二进制 rpm）。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:1050
msgid ""
"For cmake projects :variable:`CPACK_RPM_PACKAGE_SOURCES` variable is set "
"to ``OFF`` in CPackConfig.cmake and ``ON`` in CPackSourceConfig.cmake "
"generated files."
msgstr ""
"对于 cmake 项目 :variable:`CPACK_RPM_PACKAGE_SOURCES` 变量在 CPackConfig.cmake "
"中设置为``OFF``，在 CPackSourceConfig.cmake 生成的文件中设置为``ON``。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:1056
msgid ""
"Additional command-line parameters provided to :manual:`cmake(1)` "
"executable."
msgstr "提供给 cmake(1) 可执行文件的附加命令行参数。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:1063
msgid ""
"Packaging install prefix that would be provided in "
":variable:`CPACK_PACKAGING_INSTALL_PREFIX` variable for producing binary "
"RPM packages."
msgstr "将在 CPACK_PACKAGING_INSTALL_PREFIX 变量中提供的打包安装前缀，用于生成二进制 RPM 包。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:1067
msgid "``/``"
msgstr "``/``"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:1071
msgid "List of source rpm build dependencies."
msgstr "源 rpm 构建依赖项列表。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:1076
msgid ""
"May be used to set source RPM build dependencies (BuildRequires). Note "
"that you must enclose the complete build requirements string between "
"quotes, for example:"
msgstr "可用于设置源 RPM 构建依赖项 (BuildRequires)。请注意，您必须将完整的构建要求字符串括在引号之间，例如："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/rpm.rst:1091
msgid ""
"May be used to keep the dependency generator from scanning specific files "
"or directories for dependencies.  Note that you can use a regular "
"expression that matches all of the directories or files, for example:"
msgstr "可用于防止依赖项生成器扫描特定文件或目录以查找依赖项。请注意，您可以使用匹配所有目录或文件的正则表达式，例如："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:2
msgid "CPack WIX Generator"
msgstr "CPack WIX 生成器"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:4
msgid "CPack WIX generator specific options"
msgstr "CPack WIX 生成器特定选项"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:6
msgid "Support :variable:`CPACK_COMPONENT_<compName>_DISABLED` variable."
msgstr "支持 :variable:`CPACK_COMPONENT_<compName>_DISABLED` 变量。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:10
msgid "Variables specific to CPack WIX generator"
msgstr "特定于 CPack WIX 生成器的变量"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:12
msgid ""
"The following variables are specific to the installers built on Windows "
"using WiX."
msgstr "以下变量特定于使用 WiX 在 Windows 上构建的安装程序。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:17
msgid "Upgrade GUID (``Product/@UpgradeCode``)"
msgstr "升级 GUID（``Product/@UpgradeCode``）"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:19
#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:40
msgid "Will be automatically generated unless explicitly provided."
msgstr "除非明确提供，否则将自动生成。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:21
msgid ""
"It should be explicitly set to a constant generated globally unique "
"identifier (GUID) to allow your installers to replace existing "
"installations that use the same GUID."
msgstr "它应该明确设置为一个常量生成的全局唯一标识符 (GUID)，以允许您的安装程序替换使用相同 GUID 的现有安装。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:25
msgid ""
"You may for example explicitly set this variable in your CMakeLists.txt to"
" the value that has been generated per default.  You should not use GUIDs "
"that you did not generate yourself or which may belong to other projects."
msgstr ""
"例如，您可以在 CMakeLists.txt 中将此变量显式设置为默认生成的值。您不应使用不是您自己生成的或可能属于其他项目的 GUID。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:30
msgid "A GUID shall have the following fixed length syntax::"
msgstr "GUID 应具有以下固定长度语法："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:34
msgid "(each X represents an uppercase hexadecimal digit)"
msgstr "（每个X代表一个大写的十六进制数字）"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:38
msgid "Product GUID (``Product/@Id``)"
msgstr "产品 GUID（``Product/@Id``）"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:42
msgid ""
"If explicitly provided this will set the Product Id of your installer."
msgstr "如果明确提供，这将设置您的安装程序的产品 ID。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:44
msgid ""
"The installer will abort if it detects a pre-existing installation that "
"uses the same GUID."
msgstr "如果安装程序检测到使用相同 GUID 的预先存在的安装，它将中止。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:47
msgid "The GUID shall use the syntax described for CPACK_WIX_UPGRADE_GUID."
msgstr "GUID 应使用为 CPACK_WIX_UPGRADE_GUID 描述的语法。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:51
msgid "RTF License File"
msgstr "RTF 许可证文件"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:53
msgid ""
"If CPACK_RESOURCE_FILE_LICENSE has an .rtf extension it is used as-is."
msgstr "如果 CPACK_RESOURCE_FILE_LICENSE 具有 .rtf 扩展名，则按原样使用。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:55
msgid ""
"If CPACK_RESOURCE_FILE_LICENSE has an .txt extension it is implicitly "
"converted to RTF by the WIX Generator. The expected encoding of the .txt "
"file is UTF-8."
msgstr ""
"如果 CPACK_RESOURCE_FILE_LICENSE 具有 .txt 扩展名，它会被 WIX 生成器隐式转换为 RTF。 .txt "
"文件的预期编码为 UTF-8。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:59
msgid ""
"With CPACK_WIX_LICENSE_RTF you can override the license file used by the "
"WIX Generator in case CPACK_RESOURCE_FILE_LICENSE is in an unsupported "
"format or the .txt -> .rtf conversion does not work as expected."
msgstr ""
"使用 CPACK_WIX_LICENSE_RTF 您可以覆盖 WIX 生成器使用的许可证文件，以防 "
"CPACK_RESOURCE_FILE_LICENSE 格式不受支持或 .txt -> .rtf 转换无法按预期工作。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:65
msgid "The Icon shown next to the program name in Add/Remove programs."
msgstr "添加/删除程序中程序名称旁边显示的图标。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:67
msgid "If set, this icon is used in place of the default icon."
msgstr "如果设置，则使用此图标代替默认图标。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:71
msgid ""
"This variable allows you to override the Id of the ``<UIRef>`` element in "
"the WiX template."
msgstr "此变量允许您覆盖 WiX 模板中 ``<UIRef>`` 元素的 ID。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:74
msgid ""
"The default is ``WixUI_InstallDir`` in case no CPack components have been "
"defined and ``WixUI_FeatureTree`` otherwise."
msgstr "如果没有定义 CPack 组件，则默认为“WixUI_InstallDir”，否则为“WixUI_FeatureTree”。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:79
msgid ""
"The bitmap will appear at the top of all installer pages other than the "
"welcome and completion dialogs."
msgstr "位图将出现在除欢迎和完成对话框之外的所有安装程序页面的顶部。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:82
msgid "If set, this image will replace the default banner image."
msgstr "如果设置，此图像将替换默认的横幅图像。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:84
msgid "This image must be 493 by 58 pixels."
msgstr "此图像必须为 493 x 58 像素。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:88
msgid "Background bitmap used on the welcome and completion dialogs."
msgstr "欢迎和完成对话框中使用的背景位图。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:90
msgid ""
"If this variable is set, the installer will replace the default dialog "
"image."
msgstr "如果设置了此变量，安装程序将替换默认对话框图像。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:93
msgid "This image must be 493 by 312 pixels."
msgstr "此图像必须为 493 x 312 像素。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:97
msgid "Start menu folder name for launcher."
msgstr "启动器的开始菜单文件夹名称。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:99
msgid ""
"If this variable is not set, it will be initialized with "
"CPACK_PACKAGE_NAME"
msgstr "如果未设置此变量，它将使用 CPACK_PACKAGE_NAME 进行初始化"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:101
msgid ""
"If this variable is set to ``.``, then application shortcuts will be "
"created directly in the start menu and the uninstaller shortcut will be "
"omitted."
msgstr "如果此变量设置为 ``.``，则应用程序快捷方式将直接在开始菜单中创建，卸载程序快捷方式将被省略。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:108
msgid "Language(s) of the installer"
msgstr "安装程序的语言"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:110
msgid ""
"Languages are compiled into the WixUI extension library.  To use them, "
"simply provide the name of the culture.  If you specify more than one "
"culture identifier in a comma or semicolon delimited list, the first one "
"that is found will be used.  You can find a list of supported languages "
"at: "
"https://wixtoolset.org//documentation/manual/v3/wixui/wixui_localization.html"
msgstr ""
"语言被编译到 WixUI "
"扩展库中。要使用它们，只需提供文化的名称。如果您在逗号或分号分隔列表中指定多个区域性标识符，将使用找到的第一个。您可以在以下位置找到支持的语言列表:https://wixtoolset.org//documentation/manual/v3/wixui/wixui_localization.html"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:118
msgid "Template file for WiX generation"
msgstr "用于生成 WiX 的模板文件"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:120
msgid ""
"If this variable is set, the specified template will be used to generate "
"the WiX wxs file.  This should be used if further customization of the "
"output is required."
msgstr "如果设置了这个变量，指定的模板将用于生成 WiX wxs 文件。如果需要进一步自定义输出，则应使用此选项。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:124
msgid ""
"If this variable is not set, the default MSI template included with CMake "
"will be used."
msgstr "如果未设置此变量，将使用 CMake 中包含的默认 MSI 模板。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:129
msgid ""
"Optional list of XML files with fragments to be inserted into generated "
"WiX sources."
msgstr "可选的 XML 文件列表，其中包含要插入到生成的 WiX 源中的片段。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:132
msgid "Support listing multiple patch files."
msgstr "支持列出多个补丁文件。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:135
msgid ""
"This optional variable can be used to specify an XML file that the WIX "
"generator will use to inject fragments into its generated source files."
msgstr "此可选变量可用于指定 WIX 生成器将用于将片段注入其生成的源文件的 XML 文件。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:139
msgid ""
"Patch files understood by the CPack WIX generator roughly follow this "
"RELAX NG compact schema:"
msgstr "CPack WIX 生成器理解的补丁文件大致遵循此 RELAX NG 紧凑模式："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:159
msgid ""
"Currently fragments can be injected into most Component, File, Directory "
"and Feature elements."
msgstr "目前，可以将片段注入到大多数组件、文件、目录和功能元素中。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:162
msgid "The following additional special Ids can be used:"
msgstr "可以使用以下额外的特殊 ID："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:165
msgid "``#PRODUCT`` for the ``<Product>`` element."
msgstr "``#PRODUCT`` 用于``<Product>`` 元素。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:166
msgid "``#PRODUCTFEATURE`` for the root ``<Feature>`` element."
msgstr "``#PRODUCFEATURE`` 用于根 ``<Feature>`` 元素。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:168
msgid "Support patching arbitrary ``<Feature>`` elements."
msgstr "支持修补任意 ``<Feature>`` 元素。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:171
msgid "Allow setting additional attributes."
msgstr "允许设置附加属性。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:174
msgid "The following example illustrates how this works."
msgstr "以下示例说明了这是如何工作的。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:176
msgid "Given that the WIX generator creates the following XML element:"
msgstr "假设 WIX 生成器创建了以下 XML 元素："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:182
msgid ""
"The following XML patch file may be used to inject an Environment element "
"into it:"
msgstr "以下 XML 补丁文件可用于将环境元素注入其中："

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:196
msgid "Extra WiX source files"
msgstr "额外的 WiX 源文件"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:198
msgid ""
"This variable provides an optional list of extra WiX source files (.wxs) "
"that should be compiled and linked.  The full path to source files is "
"required."
msgstr "该变量提供了一个可选的额外 WiX 源文件 (.wxs) 列表，这些文件应该被编译和链接。需要源文件的完整路径。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:204
msgid "Extra WiX object files or libraries"
msgstr "额外的 WiX 对象文件或库"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:206
msgid ""
"This variable provides an optional list of extra WiX object (.wixobj) "
"and/or WiX library (.wixlib) files.  The full path to objects and "
"libraries is required."
msgstr "此变量提供额外 WiX 对象 (.wixobj) 和/或 WiX 库 (.wixlib) 文件的可选列表。需要对象和库的完整路径。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:212
msgid ""
"This variable provides a list of additional extensions for the WiX tools "
"light and candle."
msgstr "此变量为 WiX 工具 light 和 candle 提供了一个附加扩展列表。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:217
msgid ""
"This is the tool specific version of CPACK_WIX_EXTENSIONS. ``<TOOL>`` can "
"be either LIGHT or CANDLE."
msgstr "这是 CPACK_WIX_EXTENSIONS 的工具特定版本。 ``<TOOL>`` 可以是 LIGHT 或 CANDLE。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:222
msgid ""
"This list variable allows you to pass additional flags to the WiX tool "
"``<TOOL>``."
msgstr "此列表变量允许您将附加标志传递给 WiX 工具“<TOOL>”。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:225
msgid ""
"Use it at your own risk. Future versions of CPack may generate flags which"
" may be in conflict with your own flags."
msgstr "需要您自担风险使用它。 CPack 的未来版本可能会生成可能与您自己的标志冲突的标志。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:229
msgid "``<TOOL>`` can be either LIGHT or CANDLE."
msgstr "``<TOOL>`` 可以是 LIGHT 或 CANDLE。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:233
msgid ""
"If this variable is set the generated installer will create an entry in "
"the windows registry key "
"``HKEY_LOCAL_MACHINE\\Software\\Kitware\\CMake\\Packages\\<PackageName>`` "
"The value for ``<PackageName>`` is provided by this variable."
msgstr ""
"如果设置了此变量，生成的安装程序将在 Windows 注册表项 "
"``HKEY_LOCAL_MACHINE\\Software\\Kitware\\CMake\\Packages\\<PackageName>`` "
"中创建一个条目``<PackageName>`` 的值由此变量提供。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:238
msgid ""
"Assuming you also install a CMake configuration file this will allow other"
" CMake projects to find your package with the :command:`find_package` "
"command."
msgstr ""
"假设您还安装了 CMake 配置文件，这将允许其他 CMake 项目使用 :command:`find_package` 命令找到您的包。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:246
msgid ""
"This variable can be used to provide a value for the Windows Installer "
"property ``<PROPERTY>``"
msgstr "此变量可用于为 Windows Installer 属性“<PROPERTY>”提供值"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:249
msgid ""
"The following list contains some example properties that can be used to "
"customize information under \"Programs and Features\" (also known as \"Add"
" or Remove Programs\")"
msgstr "以下列表包含一些示例属性，可用于自定义“程序和功能”（也称为“添加或删除程序”）下的信息"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:253
msgid "ARPCOMMENTS - Comments"
msgstr "ARPCOMMENTS - 评论"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:254
msgid "ARPHELPLINK - Help and support information URL"
msgstr "ARPHELPLINK - 帮助和支持信息 URL"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:255
msgid "ARPURLINFOABOUT - General information URL"
msgstr "ARPURLINFOABOUT - 一般信息 URL"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:256
msgid "ARPURLUPDATEINFO - Update information URL"
msgstr "ARPURLUPDATEINFO - 更新信息 URL"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:257
msgid "ARPHELPTELEPHONE - Help and support telephone number"
msgstr "ARPHELPTELEPHONE - 帮助和支持电话号码"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:258
msgid "ARPSIZE - Size (in kilobytes) of the application"
msgstr "ARPSIZE - 应用程序的大小（以千字节为单位）"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:264
msgid ""
"Sets the name of the root install feature in the WIX installer. Same as "
"CPACK_COMPONENT_<compName>_DISPLAY_NAME for components."
msgstr ""
"在 WIX 安装程序中设置根安装功能的名称。与组件的 CPACK_COMPONENT_<compName>_DISPLAY_NAME 相同。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:271
msgid ""
"Sets the description of the root install feature in the WIX installer. "
"Same as CPACK_COMPONENT_<compName>_DESCRIPTION for components."
msgstr ""
"在 WIX 安装程序中设置根安装功能的描述。与组件的 CPACK_COMPONENT_<compName>_DESCRIPTION 相同。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:278
msgid ""
"If this variable is set to true, the default install location of the "
"generated package will be CPACK_PACKAGE_INSTALL_DIRECTORY directly. The "
"install location will not be located relatively below ProgramFiles or "
"ProgramFiles64."
msgstr ""
"如果此变量设置为 true，则生成的包的默认安装位置将直接为 CPACK_PACKAGE_INSTALL_DIRECTORY。安装位置不会相对低于 "
"ProgramFiles 或 ProgramFiles64。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:284
msgid ""
"Installers created with this feature do not take differences between the "
"system on which the installer is created and the system on which the "
"installer might be used into account."
msgstr "使用此功能创建的安装程序不会考虑创建安装程序的系统与可能使用安装程序的系统之间的差异。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:288
msgid ""
"It is therefore possible that the installer e.g. might try to install onto"
" a drive that is unavailable or unintended or a path that does not follow "
"the localization or convention of the system on which the installation is "
"performed."
msgstr "因此，安装程序可能是这样的。可能会尝试安装到不可用或意外的驱动器上，或者安装到不遵循执行安装的系统的本地化或约定的路径上。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:297
msgid ""
"This variable allows specification of a custom root folder ID. The "
"generator specific ``<64>`` token can be used for folder IDs that come in "
"32-bit and 64-bit variants. In 32-bit builds the token will expand empty "
"while in 64-bit builds it will expand to ``64``."
msgstr ""
"此变量允许指定自定义根文件夹 ID。生成器特定的“<64>”令牌可用于 32 位和 64 位变体的文件夹 ID。在 32 "
"位构建中，令牌将扩展为空，而在 64 位构建中，它将扩展为“64”。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:303
msgid ""
"When unset generated installers will default installing to "
"``ProgramFiles<64>Folder``."
msgstr "当取消设置时，生成的安装程序将默认安装到“ProgramFiles<64>Folder”。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:308
msgid ""
"This variable can optionally be set to the root directory of a custom WiX "
"Toolset installation."
msgstr "可以选择将此变量设置为自定义 WiX 工具集安装的根目录。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:311
msgid ""
"When unspecified CPack will try to locate a WiX Toolset installation via "
"the ``WIX`` environment variable instead."
msgstr "当未指定的 CPack 将尝试通过 ``WIX`` 环境变量定位 WiX 工具集安装时。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:318
msgid ""
"This variable provides a list of custom namespace declarations that are "
"necessary for using WiX extensions. Each declaration should be in the form"
" name=url, where name is the plain namespace without the usual xmlns: "
"prefix and url is an unquoted namespace url. A list of commonly known WiX "
"schemata can be found here: "
"https://wixtoolset.org/documentation/manual/v3/xsd/"
msgstr ""
"此变量提供使用 WiX 扩展所需的自定义命名空间声明的列表。每个声明都应该采用 name=url 的形式，其中 name 是没有通常的 xmlns:"
" 前缀的普通命名空间，url 是一个不带引号的命名空间 url。可以在此处找到常见的 WiX "
"模式列表:https://wixtoolset.org/documentation/manual/v3/xsd/"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:328
msgid ""
"If this variable is set then the inclusion of WixUIExtensions is skipped, "
"i.e. the ``-ext \"WixUIExtension\"`` command line is not included during "
"the execution of the WiX light tool."
msgstr ""
"如果设置了此变量，则跳过包含 WixUIExtensions，即在执行 WiX light 工具期间不包含 ``-ext "
"\"WixUIExtension\"`` 命令行。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:336
msgid ""
"This variable can be optionally set to specify the target architecture of "
"the installer. May for example be set to ``x64`` or ``arm64``."
msgstr "可以选择设置此变量以指定安装程序的目标体系结构。例如，可以设置为 ``x64`` 或 ``arm64``。"

#: ../../cmake-prefix/src/cmake/Help/cpack_gen/wix.rst:339
msgid "When unspecified, CPack will default to ``x64`` or ``x86``."
msgstr "未指定时，CPack 将默认为 ``x64`` 或 ``x86``。"
